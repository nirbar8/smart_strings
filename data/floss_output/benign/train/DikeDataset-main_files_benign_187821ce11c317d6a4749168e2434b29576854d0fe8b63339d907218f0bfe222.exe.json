{
    "analysis": {
        "enable_decoded_strings": true,
        "enable_stack_strings": true,
        "enable_static_strings": true,
        "enable_tight_strings": true,
        "functions": {
            "analyzed_decoded_strings": 21,
            "analyzed_stack_strings": 100,
            "analyzed_tight_strings": 22,
            "decoding_function_scores": {
                "4205248": 0.984,
                "4205888": 0.98,
                "4207168": 0.915,
                "4208080": 0.984,
                "4213072": 0.933,
                "4213392": 0.909,
                "4222144": 0.937,
                "4232864": 0.95,
                "4237008": 0.923,
                "4240944": 0.934,
                "4242400": 0.958,
                "4244208": 0.975,
                "4249760": 0.946,
                "4269888": 0.967,
                "4292304": 0.963,
                "4294960": 0.989,
                "4309808": 0.997,
                "4324976": 0.936,
                "4326240": 0.981,
                "4328528": 0.981,
                "4335696": 0.563
            },
            "discovered": 194,
            "library": 0
        }
    },
    "metadata": {
        "file_path": "DikeDataset-main/files/benign/187821ce11c317d6a4749168e2434b29576854d0fe8b63339d907218f0bfe222.exe",
        "imagebase": 4194304,
        "min_length": 4,
        "runtime": {
            "decoded_strings": 41.947,
            "find_features": 1.2976,
            "stack_strings": 4.0833,
            "start_date": "2023-02-09T18:13:01.736052Z",
            "static_strings": 0.057,
            "tight_strings": 24.2873,
            "total": 100.8746,
            "vivisect": 29.2022
        },
        "version": "v2.2.0-0-g783dd8f"
    },
    "strings": {
        "decoded_strings": [],
        "stack_strings": [],
        "static_strings": [
            {
                "encoding": "ASCII",
                "offset": 77,
                "string": "!This program cannot be run in DOS mode."
            },
            {
                "encoding": "ASCII",
                "offset": 376,
                "string": ".text"
            },
            {
                "encoding": "ASCII",
                "offset": 414,
                "string": "P`.data"
            },
            {
                "encoding": "ASCII",
                "offset": 456,
                "string": ".data_cy"
            },
            {
                "encoding": "ASCII",
                "offset": 496,
                "string": ".bss"
            },
            {
                "encoding": "ASCII",
                "offset": 536,
                "string": ".idata"
            },
            {
                "encoding": "ASCII",
                "offset": 3678,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 4023,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 4105,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 7070,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 7281,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 7875,
                "string": "WVSRQ"
            },
            {
                "encoding": "ASCII",
                "offset": 8197,
                "string": "YZ[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 8520,
                "string": "gE#V"
            },
            {
                "encoding": "ASCII",
                "offset": 8851,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 9036,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 9239,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 9602,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 9704,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 9911,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 10983,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 11270,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 15928,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 16007,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 17007,
                "string": "gfff"
            },
            {
                "encoding": "ASCII",
                "offset": 17536,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 18259,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 19066,
                "string": "L[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 19577,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 20147,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 23454,
                "string": "L$$u"
            },
            {
                "encoding": "ASCII",
                "offset": 25963,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 28026,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 30019,
                "string": "{ENT"
            },
            {
                "encoding": "ASCII",
                "offset": 33295,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 33557,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 34256,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 35701,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 36975,
                "string": "VFABu"
            },
            {
                "encoding": "ASCII",
                "offset": 37420,
                "string": "t&< "
            },
            {
                "encoding": "ASCII",
                "offset": 37523,
                "string": "qt/1"
            },
            {
                "encoding": "ASCII",
                "offset": 37559,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 37640,
                "string": "tVH1"
            },
            {
                "encoding": "ASCII",
                "offset": 38313,
                "string": "1tv;"
            },
            {
                "encoding": "ASCII",
                "offset": 38349,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 38386,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 39358,
                "string": "GFKu"
            },
            {
                "encoding": "ASCII",
                "offset": 39368,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 39731,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 39979,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 42485,
                "string": "B;W|"
            },
            {
                "encoding": "ASCII",
                "offset": 42529,
                "string": "C;_t"
            },
            {
                "encoding": "ASCII",
                "offset": 42590,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 43029,
                "string": "B;Wt"
            },
            {
                "encoding": "ASCII",
                "offset": 43034,
                "string": "Wx}h"
            },
            {
                "encoding": "ASCII",
                "offset": 43374,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 44018,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 44684,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 46468,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 46613,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 46702,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 47386,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 48903,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 51655,
                "string": "|[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 52046,
                "string": "|[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 52957,
                "string": "gfff"
            },
            {
                "encoding": "ASCII",
                "offset": 53544,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 53600,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 54376,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 54807,
                "string": "gfff"
            },
            {
                "encoding": "ASCII",
                "offset": 55171,
                "string": "gfff"
            },
            {
                "encoding": "ASCII",
                "offset": 55547,
                "string": "t\t:E"
            },
            {
                "encoding": "ASCII",
                "offset": 55598,
                "string": "tO:U"
            },
            {
                "encoding": "ASCII",
                "offset": 55795,
                "string": "<]t3"
            },
            {
                "encoding": "ASCII",
                "offset": 55818,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 56120,
                "string": "t:B9"
            },
            {
                "encoding": "ASCII",
                "offset": 56919,
                "string": " Nx "
            },
            {
                "encoding": "ASCII",
                "offset": 57228,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 61980,
                "string": "t\tf9"
            },
            {
                "encoding": "ASCII",
                "offset": 64120,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 64240,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 64255,
                "string": "0.zip"
            },
            {
                "encoding": "ASCII",
                "offset": 64479,
                "string": ".ZIP"
            },
            {
                "encoding": "ASCII",
                "offset": 65135,
                "string": "@[^]"
            },
            {
                "encoding": "ASCII",
                "offset": 65599,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 65894,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 66469,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 66486,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 67410,
                "string": "P[^]"
            },
            {
                "encoding": "ASCII",
                "offset": 67798,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 68472,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 69090,
                "string": "@tj%"
            },
            {
                "encoding": "ASCII",
                "offset": 69785,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 70125,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 70227,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 70352,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 71708,
                "string": "l[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 72184,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 72486,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 72903,
                "string": "uuC9"
            },
            {
                "encoding": "ASCII",
                "offset": 73656,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 79259,
                "string": "BCIy"
            },
            {
                "encoding": "ASCII",
                "offset": 79614,
                "string": "=VPROt."
            },
            {
                "encoding": "ASCII",
                "offset": 79627,
                "string": "=VFHC"
            },
            {
                "encoding": "ASCII",
                "offset": 79645,
                "string": "=VFAB"
            },
            {
                "encoding": "ASCII",
                "offset": 81223,
                "string": "gfff"
            },
            {
                "encoding": "ASCII",
                "offset": 81273,
                "string": "t$ t"
            },
            {
                "encoding": "ASCII",
                "offset": 82046,
                "string": "=ZPIT"
            },
            {
                "encoding": "ASCII",
                "offset": 82764,
                "string": "CAJy"
            },
            {
                "encoding": "ASCII",
                "offset": 83407,
                "string": "=JLEE"
            },
            {
                "encoding": "ASCII",
                "offset": 83512,
                "string": "=dZip"
            },
            {
                "encoding": "ASCII",
                "offset": 84016,
                "string": "gfff"
            },
            {
                "encoding": "ASCII",
                "offset": 85191,
                "string": "=ZPIT"
            },
            {
                "encoding": "ASCII",
                "offset": 86483,
                "string": "=VALL"
            },
            {
                "encoding": "ASCII",
                "offset": 86504,
                "string": "=VRDT"
            },
            {
                "encoding": "ASCII",
                "offset": 86526,
                "string": "w7=VDAT"
            },
            {
                "encoding": "ASCII",
                "offset": 86583,
                "string": "=VMSVt"
            },
            {
                "encoding": "ASCII",
                "offset": 86590,
                "string": "=VKEY"
            },
            {
                "encoding": "ASCII",
                "offset": 86892,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 87273,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 87757,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 87990,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 88404,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 90710,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 91783,
                "string": "L[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 93368,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 94425,
                "string": "G(P|A"
            },
            {
                "encoding": "ASCII",
                "offset": 94670,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 94683,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 96348,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 96824,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 96896,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 96979,
                "string": "sL9sP}"
            },
            {
                "encoding": "ASCII",
                "offset": 97074,
                "string": "CL9CP}"
            },
            {
                "encoding": "ASCII",
                "offset": 97161,
                "string": "t293u."
            },
            {
                "encoding": "ASCII",
                "offset": 97348,
                "string": "C(P|A"
            },
            {
                "encoding": "ASCII",
                "offset": 97497,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 97702,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 100968,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 101229,
                "string": "^8@9"
            },
            {
                "encoding": "ASCII",
                "offset": 101785,
                "string": "t;93u7"
            },
            {
                "encoding": "ASCII",
                "offset": 102946,
                "string": "9;tO1"
            },
            {
                "encoding": "ASCII",
                "offset": 104092,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 104833,
                "string": "~ ;}"
            },
            {
                "encoding": "ASCII",
                "offset": 104896,
                "string": "~ ;}"
            },
            {
                "encoding": "ASCII",
                "offset": 105193,
                "string": "~ ;}"
            },
            {
                "encoding": "ASCII",
                "offset": 105256,
                "string": "~ ;}"
            },
            {
                "encoding": "ASCII",
                "offset": 105644,
                "string": "~ ;}"
            },
            {
                "encoding": "ASCII",
                "offset": 105707,
                "string": "~ ;}"
            },
            {
                "encoding": "ASCII",
                "offset": 113859,
                "string": "YCF9"
            },
            {
                "encoding": "ASCII",
                "offset": 116030,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 128466,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 128565,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 128827,
                "string": "X[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 131147,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 131293,
                "string": "VUUU"
            },
            {
                "encoding": "ASCII",
                "offset": 131875,
                "string": "VUUU"
            },
            {
                "encoding": "ASCII",
                "offset": 132810,
                "string": "D8\t8D:\t"
            },
            {
                "encoding": "ASCII",
                "offset": 133039,
                "string": "<xf9"
            },
            {
                "encoding": "ASCII",
                "offset": 133111,
                "string": "<xf9"
            },
            {
                "encoding": "ASCII",
                "offset": 133183,
                "string": "<xf9"
            },
            {
                "encoding": "ASCII",
                "offset": 133255,
                "string": "<xf9"
            },
            {
                "encoding": "ASCII",
                "offset": 133327,
                "string": "<xf9"
            },
            {
                "encoding": "ASCII",
                "offset": 133399,
                "string": "<xf9"
            },
            {
                "encoding": "ASCII",
                "offset": 133471,
                "string": "<xf9"
            },
            {
                "encoding": "ASCII",
                "offset": 133952,
                "string": "D8\t8D:\t"
            },
            {
                "encoding": "ASCII",
                "offset": 134181,
                "string": "<xf9"
            },
            {
                "encoding": "ASCII",
                "offset": 134253,
                "string": "<xf9"
            },
            {
                "encoding": "ASCII",
                "offset": 134325,
                "string": "<xf9"
            },
            {
                "encoding": "ASCII",
                "offset": 134397,
                "string": "<xf9"
            },
            {
                "encoding": "ASCII",
                "offset": 134469,
                "string": "<xf9"
            },
            {
                "encoding": "ASCII",
                "offset": 134541,
                "string": "<xf9"
            },
            {
                "encoding": "ASCII",
                "offset": 134613,
                "string": "<xf9"
            },
            {
                "encoding": "ASCII",
                "offset": 135094,
                "string": "D8\t8D:\t"
            },
            {
                "encoding": "ASCII",
                "offset": 135323,
                "string": "<xf9"
            },
            {
                "encoding": "ASCII",
                "offset": 135395,
                "string": "<xf9"
            },
            {
                "encoding": "ASCII",
                "offset": 135467,
                "string": "<xf9"
            },
            {
                "encoding": "ASCII",
                "offset": 135539,
                "string": "<xf9"
            },
            {
                "encoding": "ASCII",
                "offset": 135611,
                "string": "<xf9"
            },
            {
                "encoding": "ASCII",
                "offset": 135683,
                "string": "<xf9"
            },
            {
                "encoding": "ASCII",
                "offset": 135755,
                "string": "<xf9"
            },
            {
                "encoding": "ASCII",
                "offset": 136017,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 138686,
                "string": "CH04B"
            },
            {
                "encoding": "ASCII",
                "offset": 138698,
                "string": "CL 4B"
            },
            {
                "encoding": "ASCII",
                "offset": 140115,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 143739,
                "string": "US]CQ"
            },
            {
                "encoding": "ASCII",
                "offset": 143758,
                "string": "^(BM"
            },
            {
                "encoding": "ASCII",
                "offset": 143773,
                "string": "kZ;&"
            },
            {
                "encoding": "ASCII",
                "offset": 146304,
                "string": "Compiled with %s%s for %s%s%s%s."
            },
            {
                "encoding": "ASCII",
                "offset": 146339,
                "string": "zipinfo"
            },
            {
                "encoding": "ASCII",
                "offset": 146368,
                "string": "  (please check that you have transferred or created the zipfile in the"
            },
            {
                "encoding": "ASCII",
                "offset": 146440,
                "string": "  appropriate BINARY mode and that you have compiled UnZip properly)"
            },
            {
                "encoding": "ASCII",
                "offset": 146528,
                "string": "caution: excluded filename not matched:  %s"
            },
            {
                "encoding": "ASCII",
                "offset": 146592,
                "string": "caution: filename not matched:  %s"
            },
            {
                "encoding": "ASCII",
                "offset": 146656,
                "string": "error [%s]:  attempt to seek before beginning of zipfile"
            },
            {
                "encoding": "ASCII",
                "offset": 146720,
                "string": "error:  expected central file header signature not found (file #%lu)."
            },
            {
                "encoding": "ASCII",
                "offset": 146817,
                "string": "note:  didn't find end-of-central-dir signature at end of central dir."
            },
            {
                "encoding": "ASCII",
                "offset": 146889,
                "string": "20 April 2009"
            },
            {
                "encoding": "ASCII",
                "offset": 146980,
                "string": "ReadMe"
            },
            {
                "encoding": "ASCII",
                "offset": 147008,
                "string": "  unzip -p foo | more  => send contents of foo.zip via pipe into program more"
            },
            {
                "encoding": "ASCII",
                "offset": 147104,
                "string": "See \"unzip -hh\" or unzip.txt for more help.  Examples:"
            },
            {
                "encoding": "ASCII",
                "offset": 147159,
                "string": "  unzip data1 -x joe   => extract all files except joe from zipfile data1.zip"
            },
            {
                "encoding": "ASCII",
                "offset": 147237,
                "string": "%s  unzip -fo foo %-6s => quietly replace existing %s if archive file newer"
            },
            {
                "encoding": "ASCII",
                "offset": 147328,
                "string": "  -K  keep setuid/setgid/tacky permissions   -M  pipe through \"more\" pager"
            },
            {
                "encoding": "ASCII",
                "offset": 147404,
                "string": " -X  restore UID/GID info"
            },
            {
                "encoding": "ASCII",
                "offset": 147456,
                "string": "modifiers:"
            },
            {
                "encoding": "ASCII",
                "offset": 147467,
                "string": "  -n  never overwrite existing files         -q  quiet mode (-qq => quieter)"
            },
            {
                "encoding": "ASCII",
                "offset": 147544,
                "string": "  -o  overwrite files WITHOUT prompting      -a  auto-convert any text files"
            },
            {
                "encoding": "ASCII",
                "offset": 147621,
                "string": "  -j  junk paths (do not make directories)   -aa treat ALL files as text"
            },
            {
                "encoding": "ASCII",
                "offset": 147694,
                "string": "  -U  use escapes for all non-ASCII Unicode  -UU ignore any Unicode fields"
            },
            {
                "encoding": "ASCII",
                "offset": 147769,
                "string": "  -C  match filenames case-insensitively     -L  make (some) names lowercase"
            },
            {
                "encoding": "ASCII",
                "offset": 147846,
                "string": " %-42s  -V  retain VMS version numbers"
            },
            {
                "encoding": "ASCII",
                "offset": 147904,
                "string": "  -T  timestamp archive to latest"
            },
            {
                "encoding": "ASCII",
                "offset": 147969,
                "string": "  -p  extract files to pipe, no messages     -l  list files (short format)"
            },
            {
                "encoding": "ASCII",
                "offset": 148044,
                "string": "  -f  freshen existing files, create none    -t  test compressed archive data"
            },
            {
                "encoding": "ASCII",
                "offset": 148122,
                "string": "  -u  update files, create if necessary      -z  display archive comment only"
            },
            {
                "encoding": "ASCII",
                "offset": 148200,
                "string": "  -v  list verbosely/show version info     %s"
            },
            {
                "encoding": "ASCII",
                "offset": 148246,
                "string": "  -x  exclude files that follow (in xlist)   -d  extract files into exdir"
            },
            {
                "encoding": "ASCII",
                "offset": 148352,
                "string": "-Z => ZipInfo mode (\"unzip -Z\" for usage)."
            },
            {
                "encoding": "ASCII",
                "offset": 148416,
                "string": "Usage: unzip %s[-opts[modifiers]] file[.zip] [list] [-x xlist] [-d exdir]"
            },
            {
                "encoding": "ASCII",
                "offset": 148490,
                "string": "  Default action is to extract files in list, except those in xlist, to exdir;"
            },
            {
                "encoding": "ASCII",
                "offset": 148569,
                "string": "  file[.zip] may be a wildcard.  %s"
            },
            {
                "encoding": "ASCII",
                "offset": 148608,
                "string": "UnZip %d.%d%d%s of %s, by Cygwin. Original by Info-ZIP."
            },
            {
                "encoding": "ASCII",
                "offset": 148672,
                "string": "  -M  page output through built-in \"more\""
            },
            {
                "encoding": "ASCII",
                "offset": 148736,
                "string": "miscellaneous options:"
            },
            {
                "encoding": "ASCII",
                "offset": 148759,
                "string": "  -h  print header line       -t  print totals for listed files or for all"
            },
            {
                "encoding": "ASCII",
                "offset": 148834,
                "string": "  -z  print zipfile comment   -T  print file times in sortable decimal format"
            },
            {
                "encoding": "ASCII",
                "offset": 148912,
                "string": "  -C  be case-insensitive   %s  -x  exclude filenames that follow from listing"
            },
            {
                "encoding": "ASCII",
                "offset": 148993,
                "string": "main listing-format options:             -s  short Unix \"ls -l\" format (def.)"
            },
            {
                "encoding": "ASCII",
                "offset": 149071,
                "string": "  -1  filenames ONLY, one per line       -m  medium Unix \"ls -l\" format"
            },
            {
                "encoding": "ASCII",
                "offset": 149143,
                "string": "  -2  just filenames but allow -h/-t/-z  -l  long Unix \"ls -l\" format"
            },
            {
                "encoding": "ASCII",
                "offset": 149213,
                "string": "                                         -v  verbose, multi-page format"
            },
            {
                "encoding": "ASCII",
                "offset": 149286,
                "string": "*, ?, [] (e.g., \"[a-j]*.zip\")"
            },
            {
                "encoding": "ASCII",
                "offset": 149344,
                "string": "ZipInfo %d.%d%d%s of %s, by Greg Roelofs and the Info-ZIP group."
            },
            {
                "encoding": "ASCII",
                "offset": 149410,
                "string": "List name, date/time, attribute, size, compression method, etc., about files"
            },
            {
                "encoding": "ASCII",
                "offset": 149487,
                "string": "in list (excluding those in xlist) contained in the specified .zip archive(s)."
            },
            {
                "encoding": "ASCII",
                "offset": 149566,
                "string": "\"file[.zip]\" may be a wildcard name containing %s."
            },
            {
                "encoding": "ASCII",
                "offset": 149618,
                "string": "   usage:  zipinfo [-12smlvChMtTz] file[.zip] [list...] [-x xlist...]"
            },
            {
                "encoding": "ASCII",
                "offset": 149688,
                "string": "      or:  unzip %s-Z%s [-12smlvChMtTz] file[.zip] [list...] [-x xlist...]"
            },
            {
                "encoding": "ASCII",
                "offset": 149792,
                "string": "caution:  both -n and -o specified; ignoring -o"
            },
            {
                "encoding": "ASCII",
                "offset": 149856,
                "string": "error:  -fn or any combination of -c, -l, -p, -t, -u and -v options invalid"
            },
            {
                "encoding": "ASCII",
                "offset": 149952,
                "string": "error:  -Z must be first option for ZipInfo mode (check UNZIP variable?)"
            },
            {
                "encoding": "ASCII",
                "offset": 150048,
                "string": "error:  must give decryption password with -P option"
            },
            {
                "encoding": "ASCII",
                "offset": 150112,
                "string": "error:  -d option used more than once (only one exdir allowed)"
            },
            {
                "encoding": "ASCII",
                "offset": 150176,
                "string": "error:  must specify directory to which to extract with -d option"
            },
            {
                "encoding": "ASCII",
                "offset": 150243,
                "string": "ZIPINFOOPT"
            },
            {
                "encoding": "ASCII",
                "offset": 150254,
                "string": "ZIPINFO"
            },
            {
                "encoding": "ASCII",
                "offset": 150262,
                "string": "UNZIPOPT"
            },
            {
                "encoding": "ASCII",
                "offset": 150271,
                "string": "%16s:  %.1024s"
            },
            {
                "encoding": "ASCII",
                "offset": 150287,
                "string": "UNZIP"
            },
            {
                "encoding": "ASCII",
                "offset": 150305,
                "string": "UnZip and ZipInfo environment options:"
            },
            {
                "encoding": "ASCII",
                "offset": 150345,
                "string": "[none]"
            },
            {
                "encoding": "ASCII",
                "offset": 150352,
                "string": "05 Jan 2007"
            },
            {
                "encoding": "ASCII",
                "offset": 150368,
                "string": "        [decryption, version %d.%d%s of %s]"
            },
            {
                "encoding": "ASCII",
                "offset": 150413,
                "string": "WILD_STOP_AT_DIR"
            },
            {
                "encoding": "ASCII",
                "offset": 150430,
                "string": "VMS_TEXT_CONV"
            },
            {
                "encoding": "ASCII",
                "offset": 150464,
                "string": "USE_BZIP2 (PKZIP 4.6+, using bzip2 lib version %s)"
            },
            {
                "encoding": "ASCII",
                "offset": 150528,
                "string": "MBCS-support (multibyte character support, MB_CUR_MAX = %u)"
            },
            {
                "encoding": "ASCII",
                "offset": 150588,
                "string": "other"
            },
            {
                "encoding": "ASCII",
                "offset": 150594,
                "string": "UTF-8"
            },
            {
                "encoding": "ASCII",
                "offset": 150624,
                "string": "UNICODE_SUPPORT [char coding: %s] (handle UTF-8 paths)"
            },
            {
                "encoding": "ASCII",
                "offset": 150688,
                "string": "USE_DEFLATE64 (PKZIP 4.x Deflate64(tm) supported)"
            },
            {
                "encoding": "ASCII",
                "offset": 150752,
                "string": "USE_UNSHRINK (PKZIP/Zip 1.x unshrinking method supported)"
            },
            {
                "encoding": "ASCII",
                "offset": 150810,
                "string": "USE_EF_UT_TIME"
            },
            {
                "encoding": "ASCII",
                "offset": 150825,
                "string": "UNIXBACKUP"
            },
            {
                "encoding": "ASCII",
                "offset": 150836,
                "string": "TIMESTAMP"
            },
            {
                "encoding": "ASCII",
                "offset": 150848,
                "string": "SYMLINKS (symbolic links supported, if RTL and file system permit)"
            },
            {
                "encoding": "ASCII",
                "offset": 150915,
                "string": "SET_DIR_ATTRIB"
            },
            {
                "encoding": "ASCII",
                "offset": 150944,
                "string": "COPYRIGHT_CLEAN (PKZIP 0.9x unreducing method not supported)"
            },
            {
                "encoding": "ASCII",
                "offset": 151005,
                "string": "ASM_CRC"
            },
            {
                "encoding": "ASCII",
                "offset": 151013,
                "string": "        %s"
            },
            {
                "encoding": "ASCII",
                "offset": 151040,
                "string": "UnZip special compilation options:"
            },
            {
                "encoding": "ASCII",
                "offset": 151104,
                "string": "Latest sources and executables are at ftp://ftp.info-zip.org/pub/infozip/ ;"
            },
            {
                "encoding": "ASCII",
                "offset": 151180,
                "string": "see ftp://ftp.info-zip.org/pub/infozip/UnZip.html for other sites."
            },
            {
                "encoding": "ASCII",
                "offset": 151264,
                "string": "warning:  -U \"escape all non-ASCII UTF-8 chars\" is not supported"
            },
            {
                "encoding": "ASCII",
                "offset": 151360,
                "string": "caution:  not extracting; -d ignored"
            },
            {
                "encoding": "ASCII",
                "offset": 151424,
                "string": "error:  command line parameter #%d exceeds internal size limit"
            },
            {
                "encoding": "ASCII",
                "offset": 151488,
                "string": "envargs:  cannot get memory for arguments"
            },
            {
                "encoding": "ASCII",
                "offset": 151531,
                "string": "[-Z] "
            },
            {
                "encoding": "ASCII",
                "offset": 151537,
                "string": "Extended Help for UnZip"
            },
            {
                "encoding": "ASCII",
                "offset": 151564,
                "string": "See the UnZip Manual for more detailed help"
            },
            {
                "encoding": "ASCII",
                "offset": 151608,
                "string": "UnZip lists and extracts files in zip archives.  The default action is to"
            },
            {
                "encoding": "ASCII",
                "offset": 151684,
                "string": "extract zipfile entries to the current directory, creating directories as"
            },
            {
                "encoding": "ASCII",
                "offset": 151760,
                "string": "needed.  With appropriate options, UnZip lists the contents of archives"
            },
            {
                "encoding": "ASCII",
                "offset": 151832,
                "string": "instead."
            },
            {
                "encoding": "ASCII",
                "offset": 151841,
                "string": "Basic unzip command line:"
            },
            {
                "encoding": "ASCII",
                "offset": 151868,
                "string": "  unzip [-Z] options archive[.zip] [file ...] [-x xfile ...] [-d exdir]"
            },
            {
                "encoding": "ASCII",
                "offset": 151940,
                "string": "Some examples:"
            },
            {
                "encoding": "ASCII",
                "offset": 151956,
                "string": "  unzip -l foo.zip        - list files in short format in archive foo.zip"
            },
            {
                "encoding": "ASCII",
                "offset": 152032,
                "string": "  unzip -t foo            - test the files in archive foo"
            },
            {
                "encoding": "ASCII",
                "offset": 152092,
                "string": "  unzip -Z foo            - list files using more detailed zipinfo format"
            },
            {
                "encoding": "ASCII",
                "offset": 152168,
                "string": "  unzip foo               - unzip the contents of foo in current dir"
            },
            {
                "encoding": "ASCII",
                "offset": 152240,
                "string": "  unzip -a foo            - unzip foo and convert text files to local OS"
            },
            {
                "encoding": "ASCII",
                "offset": 152316,
                "string": "If unzip is run in zipinfo mode, a more detailed list of archive contents"
            },
            {
                "encoding": "ASCII",
                "offset": 152392,
                "string": "is provided.  The -Z option sets zipinfo mode and changes the available"
            },
            {
                "encoding": "ASCII",
                "offset": 152464,
                "string": "options."
            },
            {
                "encoding": "ASCII",
                "offset": 152473,
                "string": "Basic zipinfo command line:"
            },
            {
                "encoding": "ASCII",
                "offset": 152504,
                "string": "  zipinfo options archive[.zip] [file ...] [-x xfile ...]"
            },
            {
                "encoding": "ASCII",
                "offset": 152564,
                "string": "  unzip -Z options archive[.zip] [file ...] [-x xfile ...]"
            },
            {
                "encoding": "ASCII",
                "offset": 152624,
                "string": "Below, Mac OS refers to Mac OS before Mac OS X.  Mac OS X is a Unix based"
            },
            {
                "encoding": "ASCII",
                "offset": 152700,
                "string": "port and is referred to as Unix Apple."
            },
            {
                "encoding": "ASCII",
                "offset": 152739,
                "string": "unzip options:"
            },
            {
                "encoding": "ASCII",
                "offset": 152756,
                "string": "  -Z   Switch to zipinfo mode.  Must be first option."
            },
            {
                "encoding": "ASCII",
                "offset": 152810,
                "string": "  -hh  Display extended help."
            },
            {
                "encoding": "ASCII",
                "offset": 152840,
                "string": "  -A   [OS/2, Unix DLL] Print extended help for DLL."
            },
            {
                "encoding": "ASCII",
                "offset": 152896,
                "string": "  -c   Extract files to stdout/screen.  As -p but include names.  Also,"
            },
            {
                "encoding": "ASCII",
                "offset": 152968,
                "string": "         -a allowed and EBCDIC conversions done if needed."
            },
            {
                "encoding": "ASCII",
                "offset": 153028,
                "string": "  -f   Freshen by extracting only if older file on disk."
            },
            {
                "encoding": "ASCII",
                "offset": 153088,
                "string": "  -l   List files using short form."
            },
            {
                "encoding": "ASCII",
                "offset": 153124,
                "string": "  -p   Extract files to pipe (stdout).  Only file data is output and all"
            },
            {
                "encoding": "ASCII",
                "offset": 153200,
                "string": "         files extracted in binary mode (as stored)."
            },
            {
                "encoding": "ASCII",
                "offset": 153253,
                "string": "  -t   Test archive files."
            },
            {
                "encoding": "ASCII",
                "offset": 153280,
                "string": "  -T   Set timestamp on archive(s) to that of newest file.  Similar to"
            },
            {
                "encoding": "ASCII",
                "offset": 153351,
                "string": "       zip -o but faster."
            },
            {
                "encoding": "ASCII",
                "offset": 153380,
                "string": "  -u   Update existing older files on disk as -f and extract new files."
            },
            {
                "encoding": "ASCII",
                "offset": 153452,
                "string": "  -v   Use verbose list format.  If given alone as unzip -v show version"
            },
            {
                "encoding": "ASCII",
                "offset": 153528,
                "string": "         information.  Also can be added to other list commands for more"
            },
            {
                "encoding": "ASCII",
                "offset": 153601,
                "string": "         verbose output."
            },
            {
                "encoding": "ASCII",
                "offset": 153628,
                "string": "  -z   Display only archive comment."
            },
            {
                "encoding": "ASCII",
                "offset": 153665,
                "string": "unzip modifiers:"
            },
            {
                "encoding": "ASCII",
                "offset": 153684,
                "string": "  -a   Convert text files to local OS format.  Convert line ends, EOF"
            },
            {
                "encoding": "ASCII",
                "offset": 153756,
                "string": "         marker, and from or to EBCDIC character set as needed."
            },
            {
                "encoding": "ASCII",
                "offset": 153820,
                "string": "  -b   Treat all files as binary.  [Tandem] Force filecode 180 ('C')."
            },
            {
                "encoding": "ASCII",
                "offset": 153892,
                "string": "         [VMS] Autoconvert binary files.  -bb forces convert of all files."
            },
            {
                "encoding": "ASCII",
                "offset": 153968,
                "string": "  -B   [UNIXBACKUP compile option enabled] Save a backup copy of each"
            },
            {
                "encoding": "ASCII",
                "offset": 154040,
                "string": "         overwritten file in foo~ or foo~99999 format."
            },
            {
                "encoding": "ASCII",
                "offset": 154096,
                "string": "  -C   Use case-insensitive matching."
            },
            {
                "encoding": "ASCII",
                "offset": 154136,
                "string": "  -D   Skip restoration of timestamps for extracted directories.  On VMS this"
            },
            {
                "encoding": "ASCII",
                "offset": 154216,
                "string": "         is on by default and -D essentially becames -DD."
            },
            {
                "encoding": "ASCII",
                "offset": 154276,
                "string": "  -DD  Skip restoration of timestamps for all entries."
            },
            {
                "encoding": "ASCII",
                "offset": 154332,
                "string": "  -E   [MacOS (not Unix Apple)]  Display contents of MacOS extra field during"
            },
            {
                "encoding": "ASCII",
                "offset": 154410,
                "string": "         restore."
            },
            {
                "encoding": "ASCII",
                "offset": 154428,
                "string": "  -F   [Acorn] Suppress removal of NFS filetype extension.  [Non-Acorn if"
            },
            {
                "encoding": "ASCII",
                "offset": 154504,
                "string": "         ACORN_FTYPE_NFS] Translate filetype and append to name."
            },
            {
                "encoding": "ASCII",
                "offset": 154572,
                "string": "  -i   [MacOS] Ignore filenames in MacOS extra field.  Instead, use name in"
            },
            {
                "encoding": "ASCII",
                "offset": 154648,
                "string": "         standard header."
            },
            {
                "encoding": "ASCII",
                "offset": 154676,
                "string": "  -j   Junk paths and deposit all files in extraction directory."
            },
            {
                "encoding": "ASCII",
                "offset": 154744,
                "string": "  -J   [BeOS] Junk file attributes.  [MacOS] Ignore MacOS specific info."
            },
            {
                "encoding": "ASCII",
                "offset": 154820,
                "string": "  -K   [AtheOS, BeOS, Unix] Restore SUID/SGID/Tacky file attributes."
            },
            {
                "encoding": "ASCII",
                "offset": 154892,
                "string": "  -L   Convert to lowercase any names from uppercase only file system."
            },
            {
                "encoding": "ASCII",
                "offset": 154964,
                "string": "  -LL  Convert all files to lowercase."
            },
            {
                "encoding": "ASCII",
                "offset": 155004,
                "string": "  -M   Pipe all output through internal pager similar to Unix more(1)."
            },
            {
                "encoding": "ASCII",
                "offset": 155076,
                "string": "  -n   Never overwrite existing files.  Skip extracting that file, no prompt."
            },
            {
                "encoding": "ASCII",
                "offset": 155156,
                "string": "  -N   [Amiga] Extract file comments as Amiga filenotes."
            },
            {
                "encoding": "ASCII",
                "offset": 155216,
                "string": "  -o   Overwrite existing files without prompting.  Useful with -f.  Use with"
            },
            {
                "encoding": "ASCII",
                "offset": 155294,
                "string": "         care."
            },
            {
                "encoding": "ASCII",
                "offset": 155312,
                "string": "  -P p Use password p to decrypt files.  THIS IS INSECURE!  Some OS show"
            },
            {
                "encoding": "ASCII",
                "offset": 155388,
                "string": "         command line to other users."
            },
            {
                "encoding": "ASCII",
                "offset": 155428,
                "string": "  -q   Perform operations quietly.  The more q (as in -qq) the quieter."
            },
            {
                "encoding": "ASCII",
                "offset": 155500,
                "string": "  -s   [OS/2, NT, MS-DOS] Convert spaces in filenames to underscores."
            },
            {
                "encoding": "ASCII",
                "offset": 155572,
                "string": "  -S   [VMS] Convert text files (-a, -aa) into Stream_LF format."
            },
            {
                "encoding": "ASCII",
                "offset": 155640,
                "string": "  -U   [UNICODE enabled] Show non-local characters as #Uxxxx or #Lxxxxxx ASCII"
            },
            {
                "encoding": "ASCII",
                "offset": 155720,
                "string": "         text escapes where x is hex digit.  [Old] -U used to leave names"
            },
            {
                "encoding": "ASCII",
                "offset": 155796,
                "string": "         uppercase if created on MS-DOS, VMS, etc.  See -L."
            },
            {
                "encoding": "ASCII",
                "offset": 155856,
                "string": "  -UU  [UNICODE enabled] Disable use of stored UTF-8 paths.  Note that UTF-8"
            },
            {
                "encoding": "ASCII",
                "offset": 155936,
                "string": "         paths stored as native local paths are still processed as Unicode."
            },
            {
                "encoding": "ASCII",
                "offset": 156012,
                "string": "  -V   Retain VMS file version numbers."
            },
            {
                "encoding": "ASCII",
                "offset": 156052,
                "string": "  -W   [Only if WILD_STOP_AT_DIR] Modify pattern matching so ? and * do not"
            },
            {
                "encoding": "ASCII",
                "offset": 156128,
                "string": "         match directory separator /, but ** does.  Allows matching at specific"
            },
            {
                "encoding": "ASCII",
                "offset": 156208,
                "string": "         directory levels."
            },
            {
                "encoding": "ASCII",
                "offset": 156236,
                "string": "  -X   [VMS, Unix, OS/2, NT, Tandem] Restore UICs and ACL entries under VMS,"
            },
            {
                "encoding": "ASCII",
                "offset": 156316,
                "string": "         or UIDs/GIDs under Unix, or ACLs under certain network-enabled"
            },
            {
                "encoding": "ASCII",
                "offset": 156388,
                "string": "         versions of OS/2, or security ACLs under Windows NT.  Can require"
            },
            {
                "encoding": "ASCII",
                "offset": 156463,
                "string": "         user privileges."
            },
            {
                "encoding": "ASCII",
                "offset": 156492,
                "string": "  -XX  [NT] Extract NT security ACLs after trying to enable additional"
            },
            {
                "encoding": "ASCII",
                "offset": 156563,
                "string": "         system privileges."
            },
            {
                "encoding": "ASCII",
                "offset": 156592,
                "string": "  -Y   [VMS] Treat archived name endings of .nnn as VMS version numbers."
            },
            {
                "encoding": "ASCII",
                "offset": 156668,
                "string": "  -$   [MS-DOS, OS/2, NT] Restore volume label if extraction medium is"
            },
            {
                "encoding": "ASCII",
                "offset": 156740,
                "string": "         removable.  -$$ allows fixed media (hard drives) to be labeled."
            },
            {
                "encoding": "ASCII",
                "offset": 156816,
                "string": "  -/ e [Acorn] Use e as extension list."
            },
            {
                "encoding": "ASCII",
                "offset": 156856,
                "string": "  -:   [All but Acorn, VM/CMS, MVS, Tandem] Allow extract archive members into"
            },
            {
                "encoding": "ASCII",
                "offset": 156936,
                "string": "         locations outside of current extraction root folder.  This allows"
            },
            {
                "encoding": "ASCII",
                "offset": 157012,
                "string": "         paths such as ../foo to be extracted above the current extraction"
            },
            {
                "encoding": "ASCII",
                "offset": 157088,
                "string": "         directory, which can be a security problem."
            },
            {
                "encoding": "ASCII",
                "offset": 157144,
                "string": "  -^   [Unix] Allow control characters in names of extracted entries.  Usually"
            },
            {
                "encoding": "ASCII",
                "offset": 157224,
                "string": "         this is not a good thing and should be avoided."
            },
            {
                "encoding": "ASCII",
                "offset": 157284,
                "string": "  -2   [VMS] Force unconditional conversion of names to ODS-compatible names."
            },
            {
                "encoding": "ASCII",
                "offset": 157364,
                "string": "         Default is to exploit destination file system, preserving cases and"
            },
            {
                "encoding": "ASCII",
                "offset": 157444,
                "string": "         extended name characters on ODS5 and applying ODS2 filtering on ODS2."
            },
            {
                "encoding": "ASCII",
                "offset": 157523,
                "string": "Wildcards:"
            },
            {
                "encoding": "ASCII",
                "offset": 157536,
                "string": "  Internally unzip supports the following wildcards:"
            },
            {
                "encoding": "ASCII",
                "offset": 157592,
                "string": "    ?       (or %% or #, depending on OS) matches any single character"
            },
            {
                "encoding": "ASCII",
                "offset": 157664,
                "string": "    *       matches any number of characters, including zero"
            },
            {
                "encoding": "ASCII",
                "offset": 157728,
                "string": "    [list]  matches char in list (regex), can do range [ac-f], all but [!bf]"
            },
            {
                "encoding": "ASCII",
                "offset": 157808,
                "string": "  If port supports [], must escape [ as [[]"
            },
            {
                "encoding": "ASCII",
                "offset": 157852,
                "string": "  For shells that expand wildcards, escape (\\* or \"*\") so unzip can recurse."
            },
            {
                "encoding": "ASCII",
                "offset": 157929,
                "string": "Include and Exclude:"
            },
            {
                "encoding": "ASCII",
                "offset": 157952,
                "string": "  -i pattern pattern ...   include files that match a pattern"
            },
            {
                "encoding": "ASCII",
                "offset": 158016,
                "string": "  -x pattern pattern ...   exclude files that match a pattern"
            },
            {
                "encoding": "ASCII",
                "offset": 158080,
                "string": "  Patterns are paths with optional wildcards and match paths as stored in"
            },
            {
                "encoding": "ASCII",
                "offset": 158156,
                "string": "  archive.  Exclude and include lists end at next option or end of line."
            },
            {
                "encoding": "ASCII",
                "offset": 158232,
                "string": "    unzip archive -x pattern pattern ..."
            },
            {
                "encoding": "ASCII",
                "offset": 158276,
                "string": "Multi-part (split) archives (archives created as a set of split files):"
            },
            {
                "encoding": "ASCII",
                "offset": 158348,
                "string": "  Currently split archives are not readable by unzip.  A workaround is"
            },
            {
                "encoding": "ASCII",
                "offset": 158420,
                "string": "  to use zip to convert the split archive to a single-file archive and"
            },
            {
                "encoding": "ASCII",
                "offset": 158492,
                "string": "  use unzip on that.  See the manual page for Zip 3.0 or later."
            },
            {
                "encoding": "ASCII",
                "offset": 158556,
                "string": "Streaming (piping into unzip):"
            },
            {
                "encoding": "ASCII",
                "offset": 158588,
                "string": "  Currently unzip does not support streaming.  The funzip utility can be"
            },
            {
                "encoding": "ASCII",
                "offset": 158664,
                "string": "  used to process the first entry in a stream."
            },
            {
                "encoding": "ASCII",
                "offset": 158711,
                "string": "    cat archive | funzip"
            },
            {
                "encoding": "ASCII",
                "offset": 158736,
                "string": "Testing archives:"
            },
            {
                "encoding": "ASCII",
                "offset": 158756,
                "string": "  -t        test contents of archive"
            },
            {
                "encoding": "ASCII",
                "offset": 158796,
                "string": "  This can be modified using -q for quieter operation, and -qq for even"
            },
            {
                "encoding": "ASCII",
                "offset": 158868,
                "string": "  quieter operation."
            },
            {
                "encoding": "ASCII",
                "offset": 158889,
                "string": "Unicode:"
            },
            {
                "encoding": "ASCII",
                "offset": 158900,
                "string": "  If compiled with Unicode support, unzip automatically handles archives"
            },
            {
                "encoding": "ASCII",
                "offset": 158976,
                "string": "  with Unicode entries.  Currently Unicode on Win32 systems is limited."
            },
            {
                "encoding": "ASCII",
                "offset": 159048,
                "string": "  Characters not in the current character set are shown as ASCII escapes"
            },
            {
                "encoding": "ASCII",
                "offset": 159124,
                "string": "  in the form #Uxxxx where the Unicode character number fits in 16 bits,"
            },
            {
                "encoding": "ASCII",
                "offset": 159200,
                "string": "  or #Lxxxxxx where it doesn't, where x is the ASCII character for a hex"
            },
            {
                "encoding": "ASCII",
                "offset": 159273,
                "string": "  digit."
            },
            {
                "encoding": "ASCII",
                "offset": 159284,
                "string": "zipinfo options (these are used in zipinfo mode (unzip -Z ...)):"
            },
            {
                "encoding": "ASCII",
                "offset": 159352,
                "string": "  -1  List names only, one per line.  No headers/trailers.  Good for scripts."
            },
            {
                "encoding": "ASCII",
                "offset": 159432,
                "string": "  -2  List names only as -1, but include headers, trailers, and comments."
            },
            {
                "encoding": "ASCII",
                "offset": 159508,
                "string": "  -s  List archive entries in short Unix ls -l format.  Default list format."
            },
            {
                "encoding": "ASCII",
                "offset": 159588,
                "string": "  -m  List in long Unix ls -l format.  As -s, but includes compression %."
            },
            {
                "encoding": "ASCII",
                "offset": 159664,
                "string": "  -l  List in long Unix ls -l format.  As -m, but compression in bytes."
            },
            {
                "encoding": "ASCII",
                "offset": 159736,
                "string": "  -v  List zipfile information in verbose, multi-page format."
            },
            {
                "encoding": "ASCII",
                "offset": 159800,
                "string": "  -h  List header line.  Includes archive name, actual size, total files."
            },
            {
                "encoding": "ASCII",
                "offset": 159876,
                "string": "  -M  Pipe all output through internal pager similar to Unix more(1) command."
            },
            {
                "encoding": "ASCII",
                "offset": 159956,
                "string": "  -t  List totals for files listed or for all files.  Includes uncompressed"
            },
            {
                "encoding": "ASCII",
                "offset": 160032,
                "string": "        and compressed sizes, and compression factors."
            },
            {
                "encoding": "ASCII",
                "offset": 160088,
                "string": "  -T  Print file dates and times in a sortable decimal format (yymmdd.hhmmss)"
            },
            {
                "encoding": "ASCII",
                "offset": 160168,
                "string": "        Default date and time format is a more human-readable version."
            },
            {
                "encoding": "ASCII",
                "offset": 160240,
                "string": "  -U  [UNICODE] If entry has a UTF-8 Unicode path, display any characters"
            },
            {
                "encoding": "ASCII",
                "offset": 160316,
                "string": "        not in current character set as text #Uxxxx and #Lxxxxxx escapes"
            },
            {
                "encoding": "ASCII",
                "offset": 160392,
                "string": "        representing the Unicode character number of the character in hex."
            },
            {
                "encoding": "ASCII",
                "offset": 160468,
                "string": "  -UU [UNICODE]  Disable use of any UTF-8 path information."
            },
            {
                "encoding": "ASCII",
                "offset": 160528,
                "string": "  -z  Include archive comment if any in listing."
            },
            {
                "encoding": "ASCII",
                "offset": 160577,
                "string": "funzip stream extractor:"
            },
            {
                "encoding": "ASCII",
                "offset": 160604,
                "string": "  funzip extracts the first member in an archive to stdout.  Typically"
            },
            {
                "encoding": "ASCII",
                "offset": 160676,
                "string": "  used to unzip the first member of a stream or pipe.  If a file argument"
            },
            {
                "encoding": "ASCII",
                "offset": 160752,
                "string": "  is given, read from that file instead of stdin."
            },
            {
                "encoding": "ASCII",
                "offset": 160802,
                "string": "funzip command line:"
            },
            {
                "encoding": "ASCII",
                "offset": 160824,
                "string": "  funzip [-password] [input[.zip|.gz]]"
            },
            {
                "encoding": "ASCII",
                "offset": 160863,
                "string": "unzipsfx self extractor:"
            },
            {
                "encoding": "ASCII",
                "offset": 160888,
                "string": "  Self-extracting archives made with unzipsfx are no more (or less)"
            },
            {
                "encoding": "ASCII",
                "offset": 160956,
                "string": "  portable across different operating systems than unzip executables."
            },
            {
                "encoding": "ASCII",
                "offset": 161028,
                "string": "  In general, a self-extracting archive made on a particular Unix system,"
            },
            {
                "encoding": "ASCII",
                "offset": 161104,
                "string": "  for example, will only self-extract under the same flavor of Unix."
            },
            {
                "encoding": "ASCII",
                "offset": 161176,
                "string": "  Regular unzip may still be used to extract embedded archive however."
            },
            {
                "encoding": "ASCII",
                "offset": 161247,
                "string": "unzipsfx command line:"
            },
            {
                "encoding": "ASCII",
                "offset": 161272,
                "string": "  <unzipsfx+archive_filename>  [-options] [file(s) ... [-x xfile(s) ...]]"
            },
            {
                "encoding": "ASCII",
                "offset": 161346,
                "string": "unzipsfx options:"
            },
            {
                "encoding": "ASCII",
                "offset": 161364,
                "string": "  -c, -p - Output to pipe.  (See above for unzip.)"
            },
            {
                "encoding": "ASCII",
                "offset": 161416,
                "string": "  -f, -u - Freshen and Update, as for unzip."
            },
            {
                "encoding": "ASCII",
                "offset": 161464,
                "string": "  -t     - Test embedded archive.  (Can be used to list contents.)"
            },
            {
                "encoding": "ASCII",
                "offset": 161532,
                "string": "  -z     - Print archive comment.  (See unzip above.)"
            },
            {
                "encoding": "ASCII",
                "offset": 161586,
                "string": "unzipsfx modifiers:"
            },
            {
                "encoding": "ASCII",
                "offset": 161608,
                "string": "  Most unzip modifiers are supported.  These include"
            },
            {
                "encoding": "ASCII",
                "offset": 161664,
                "string": "  -a     - Convert text files."
            },
            {
                "encoding": "ASCII",
                "offset": 161695,
                "string": "  -n     - Never overwrite."
            },
            {
                "encoding": "ASCII",
                "offset": 161724,
                "string": "  -o     - Overwrite without prompting."
            },
            {
                "encoding": "ASCII",
                "offset": 161764,
                "string": "  -q     - Quiet operation."
            },
            {
                "encoding": "ASCII",
                "offset": 161792,
                "string": "  -C     - Match names case-insensitively."
            },
            {
                "encoding": "ASCII",
                "offset": 161835,
                "string": "  -j     - Junk paths."
            },
            {
                "encoding": "ASCII",
                "offset": 161860,
                "string": "  -V     - Keep version numbers."
            },
            {
                "encoding": "ASCII",
                "offset": 161896,
                "string": "  -s     - Convert spaces to underscores."
            },
            {
                "encoding": "ASCII",
                "offset": 161940,
                "string": "  -$     - Restore volume label."
            },
            {
                "encoding": "ASCII",
                "offset": 161976,
                "string": "If unzipsfx compiled with SFX_EXDIR defined, -d option also available:"
            },
            {
                "encoding": "ASCII",
                "offset": 162048,
                "string": "  -d exd - Extract to directory exd."
            },
            {
                "encoding": "ASCII",
                "offset": 162088,
                "string": "By default, all files extracted to current directory.  This option"
            },
            {
                "encoding": "ASCII",
                "offset": 162156,
                "string": "forces extraction to specified directory."
            },
            {
                "encoding": "ASCII",
                "offset": 162200,
                "string": "See unzipsfx manual page for more information."
            },
            {
                "encoding": "ASCII",
                "offset": 162568,
                "string": "UTF-8"
            },
            {
                "encoding": "ASCII",
                "offset": 163168,
                "string": " compressed WinNT security data missing (%d bytes)%s"
            },
            {
                "encoding": "ASCII",
                "offset": 163232,
                "string": " compressed EA data missing (%d bytes)%s"
            },
            {
                "encoding": "ASCII",
                "offset": 163296,
                "string": "error [%s]:  bad extra-field CRC %08lx (should be %08lx)"
            },
            {
                "encoding": "ASCII",
                "offset": 163361,
                "string": "error:  unsupported extra-field compression type (%u)--skipping"
            },
            {
                "encoding": "ASCII",
                "offset": 163426,
                "string": "inflate"
            },
            {
                "encoding": "ASCII",
                "offset": 163434,
                "string": "invalid compressed data to "
            },
            {
                "encoding": "ASCII",
                "offset": 163462,
                "string": "not enough memory to "
            },
            {
                "encoding": "ASCII",
                "offset": 163485,
                "string": "  error:  %s%s"
            },
            {
                "encoding": "ASCII",
                "offset": 163616,
                "string": "%lu file%s skipped because of incorrect password."
            },
            {
                "encoding": "ASCII",
                "offset": 163680,
                "string": "%lu file%s skipped because of unsupported compression or encoding."
            },
            {
                "encoding": "ASCII",
                "offset": 163776,
                "string": "No errors detected in %s for the %lu file%s tested."
            },
            {
                "encoding": "ASCII",
                "offset": 163840,
                "string": "No errors detected in compressed data of %s."
            },
            {
                "encoding": "ASCII",
                "offset": 163904,
                "string": "Caution:  zero files tested in %s."
            },
            {
                "encoding": "ASCII",
                "offset": 163968,
                "string": "At least one %serror was detected in %s."
            },
            {
                "encoding": "ASCII",
                "offset": 164032,
                "string": "     failed setting times/attribs for %lu dir entries"
            },
            {
                "encoding": "ASCII",
                "offset": 164096,
                "string": "warning:  set times/attribs failed for %s"
            },
            {
                "encoding": "ASCII",
                "offset": 164160,
                "string": "warning:  cannot alloc memory to sort dir times/perms/etc."
            },
            {
                "encoding": "ASCII",
                "offset": 164224,
                "string": "finishing deferred symbolic links:"
            },
            {
                "encoding": "ASCII",
                "offset": 164260,
                "string": "%s:  bad file comment length"
            },
            {
                "encoding": "ASCII",
                "offset": 164320,
                "string": "%s:  bad extra field length (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 164356,
                "string": "%s:  bad filename length (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 164416,
                "string": "%s:  warning, no memory for comparison with local header"
            },
            {
                "encoding": "ASCII",
                "offset": 164480,
                "string": "   skipping: %-22s  unsupported compression method %u"
            },
            {
                "encoding": "ASCII",
                "offset": 164535,
                "string": "PPMd"
            },
            {
                "encoding": "ASCII",
                "offset": 164540,
                "string": "WavPack"
            },
            {
                "encoding": "ASCII",
                "offset": 164548,
                "string": "IBM LZ77"
            },
            {
                "encoding": "ASCII",
                "offset": 164557,
                "string": "IBM/Terse"
            },
            {
                "encoding": "ASCII",
                "offset": 164567,
                "string": "LZMA"
            },
            {
                "encoding": "ASCII",
                "offset": 164572,
                "string": "bzip2"
            },
            {
                "encoding": "ASCII",
                "offset": 164578,
                "string": "DCL implode"
            },
            {
                "encoding": "ASCII",
                "offset": 164590,
                "string": "deflate64"
            },
            {
                "encoding": "ASCII",
                "offset": 164600,
                "string": "deflate"
            },
            {
                "encoding": "ASCII",
                "offset": 164608,
                "string": "tokenize"
            },
            {
                "encoding": "ASCII",
                "offset": 164617,
                "string": "implode"
            },
            {
                "encoding": "ASCII",
                "offset": 164625,
                "string": "reduce"
            },
            {
                "encoding": "ASCII",
                "offset": 164632,
                "string": "shrink"
            },
            {
                "encoding": "ASCII",
                "offset": 164639,
                "string": "store"
            },
            {
                "encoding": "ASCII",
                "offset": 164672,
                "string": "   skipping: %-22s  `%s' method not supported"
            },
            {
                "encoding": "ASCII",
                "offset": 164737,
                "string": "%s:  stored in VMS format.  Extract anyway? (y/n) "
            },
            {
                "encoding": "ASCII",
                "offset": 164800,
                "string": "   skipping: %-22s  need %s compat. v%u.%u (can do v%u.%u)"
            },
            {
                "encoding": "ASCII",
                "offset": 164860,
                "string": "error:  invalid response [%s]"
            },
            {
                "encoding": "ASCII",
                "offset": 164891,
                "string": "new name: "
            },
            {
                "encoding": "ASCII",
                "offset": 164928,
                "string": " NULL"
            },
            {
                "encoding": "ASCII",
                "offset": 164934,
                "string": "(EOF or read error, treating as \"[N]one\" ...)"
            },
            {
                "encoding": "ASCII",
                "offset": 164992,
                "string": "replace %s? [y]es, [n]o, [A]ll, [N]one, [r]ename: "
            },
            {
                "encoding": "ASCII",
                "offset": 165056,
                "string": "   skipping: %-22s  %svolume label"
            },
            {
                "encoding": "ASCII",
                "offset": 165120,
                "string": "warning:  cannot alloc memory for dir times/permissions/UID/GID"
            },
            {
                "encoding": "ASCII",
                "offset": 165216,
                "string": "warning:  stripped absolute path spec from %s"
            },
            {
                "encoding": "ASCII",
                "offset": 165280,
                "string": "warning:  %s appears to use backslashes as path separators"
            },
            {
                "encoding": "ASCII",
                "offset": 165344,
                "string": "   skipping: %-22s  unable to get password"
            },
            {
                "encoding": "ASCII",
                "offset": 165408,
                "string": "   skipping: %-22s  incorrect password"
            },
            {
                "encoding": "ASCII",
                "offset": 165472,
                "string": "%s:  ucsize %s <> csize %s for STORED entry"
            },
            {
                "encoding": "ASCII",
                "offset": 165516,
                "string": "         continuing with \"compressed\" size value"
            },
            {
                "encoding": "ASCII",
                "offset": 165568,
                "string": "%s:  mismatching \"local\" filename (%s),"
            },
            {
                "encoding": "ASCII",
                "offset": 165608,
                "string": "         continuing with \"central\" filename version"
            },
            {
                "encoding": "ASCII",
                "offset": 165664,
                "string": "file #%lu (%s):"
            },
            {
                "encoding": "ASCII",
                "offset": 165680,
                "string": "         mismatch between local and central GPF bit 11 (\"UTF-8\"),"
            },
            {
                "encoding": "ASCII",
                "offset": 165746,
                "string": "         continuing with central flag (IsUTF8 = %d)"
            },
            {
                "encoding": "ASCII",
                "offset": 165799,
                "string": "file #%lu:  bad local header"
            },
            {
                "encoding": "ASCII",
                "offset": 165829,
                "string": "local header sig"
            },
            {
                "encoding": "ASCII",
                "offset": 165856,
                "string": "file #%lu:  bad zipfile offset (%s):  %ld"
            },
            {
                "encoding": "ASCII",
                "offset": 165920,
                "string": "  (attempting to re-compensate)"
            },
            {
                "encoding": "ASCII",
                "offset": 165984,
                "string": "    (may instead be incorrect password)"
            },
            {
                "encoding": "ASCII",
                "offset": 166048,
                "string": " bad CRC %08lx  (should be %08lx)"
            },
            {
                "encoding": "ASCII",
                "offset": 166112,
                "string": "warning:  %s is probably truncated"
            },
            {
                "encoding": "ASCII",
                "offset": 166176,
                "string": "%s:  unknown compression method"
            },
            {
                "encoding": "ASCII",
                "offset": 166209,
                "string": "bunzip"
            },
            {
                "encoding": "ASCII",
                "offset": 166216,
                "string": "explode"
            },
            {
                "encoding": "ASCII",
                "offset": 166240,
                "string": "%s  %s:  %s bytes required to uncompress to %s bytes;"
            },
            {
                "encoding": "ASCII",
                "offset": 166294,
                "string": "    %s      supposed to require %s bytes%s%s%s"
            },
            {
                "encoding": "ASCII",
                "offset": 166342,
                "string": "  error:  %s%s %s"
            },
            {
                "encoding": "ASCII",
                "offset": 166361,
                "string": "unshrink"
            },
            {
                "encoding": "ASCII",
                "offset": 166370,
                "string": "%8sing: %-22s  %s%s"
            },
            {
                "encoding": "ASCII",
                "offset": 166400,
                "string": " unsupported NTSD EAs version %d"
            },
            {
                "encoding": "ASCII",
                "offset": 166464,
                "string": " unknown compression method for EAs (%u)"
            },
            {
                "encoding": "ASCII",
                "offset": 166528,
                "string": " bad CRC for extended attributes"
            },
            {
                "encoding": "ASCII",
                "offset": 166592,
                "string": " unknown error on extended attributes"
            },
            {
                "encoding": "ASCII",
                "offset": 166656,
                "string": " out of memory while inflating EAs"
            },
            {
                "encoding": "ASCII",
                "offset": 166720,
                "string": " invalid compressed data for EAs"
            },
            {
                "encoding": "ASCII",
                "offset": 166784,
                "string": "bad extra-field entry:"
            },
            {
                "encoding": "ASCII",
                "offset": 166807,
                "string": "      EF block length (%u bytes) exceeds remaining EF data (%u bytes)"
            },
            {
                "encoding": "ASCII",
                "offset": 166878,
                "string": "  %-22s -> %s"
            },
            {
                "encoding": "ASCII",
                "offset": 166912,
                "string": "warning:  deferred symlink (%s) failed:"
            },
            {
                "encoding": "ASCII",
                "offset": 166952,
                "string": "          invalid placeholder file"
            },
            {
                "encoding": "ASCII",
                "offset": 167008,
                "string": "warning:  deferred symlink (%s) failed:"
            },
            {
                "encoding": "ASCII",
                "offset": 167048,
                "string": "          out of memory"
            },
            {
                "encoding": "ASCII",
                "offset": 167081,
                "string": "test"
            },
            {
                "encoding": "ASCII",
                "offset": 167086,
                "string": "%-22s "
            },
            {
                "encoding": "ASCII",
                "offset": 167093,
                "string": "link"
            },
            {
                "encoding": "ASCII",
                "offset": 167100,
                "string": "inflat"
            },
            {
                "encoding": "ASCII",
                "offset": 167107,
                "string": "explod"
            },
            {
                "encoding": "ASCII",
                "offset": 167114,
                "string": "bunzipp"
            },
            {
                "encoding": "ASCII",
                "offset": 167132,
                "string": "warning"
            },
            {
                "encoding": "ASCII",
                "offset": 167140,
                "string": "error"
            },
            {
                "encoding": "ASCII",
                "offset": 167146,
                "string": "extract"
            },
            {
                "encoding": "ASCII",
                "offset": 167156,
                "string": "[text]  "
            },
            {
                "encoding": "ASCII",
                "offset": 167165,
                "string": "[binary]"
            },
            {
                "encoding": "ASCII",
                "offset": 167174,
                "string": "[empty] "
            },
            {
                "encoding": "ASCII",
                "offset": 167243,
                "string": "lseek"
            },
            {
                "encoding": "ASCII",
                "offset": 167249,
                "string": "local"
            },
            {
                "encoding": "ASCII",
                "offset": 167255,
                "string": "central"
            },
            {
                "encoding": "ASCII",
                "offset": 167265,
                "string": "warning-"
            },
            {
                "encoding": "ASCII",
                "offset": 167274,
                "string": "symlink error"
            },
            {
                "encoding": "ASCII",
                "offset": 167391,
                "string": "++--+-+"
            },
            {
                "encoding": "ASCII",
                "offset": 167400,
                "string": "++--"
            },
            {
                "encoding": "ASCII",
                "offset": 167464,
                "string": "^%S<O????''\"\""
            },
            {
                "encoding": "ASCII",
                "offset": 167478,
                "string": "--~Ts>o??Y"
            },
            {
                "encoding": "ASCII",
                "offset": 167584,
                "string": "warning:  Converted unicode filename too long--truncating."
            },
            {
                "encoding": "ASCII",
                "offset": 167648,
                "string": "warning:  extra field too long (%d).  Ignoring..."
            },
            {
                "encoding": "ASCII",
                "offset": 167712,
                "string": "warning:  filename too long--truncating."
            },
            {
                "encoding": "ASCII",
                "offset": 167776,
                "string": "--- Press `Q' to quit, or any other key to continue ---"
            },
            {
                "encoding": "ASCII",
                "offset": 167840,
                "string": "%s exists and is a symbolic link%s."
            },
            {
                "encoding": "ASCII",
                "offset": 167904,
                "string": "error:  zipfile probably corrupt (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 167943,
                "string": "password incorrect--reenter: "
            },
            {
                "encoding": "ASCII",
                "offset": 167973,
                "string": "Enter password: "
            },
            {
                "encoding": "ASCII",
                "offset": 167990,
                "string": "[%s] %s password: "
            },
            {
                "encoding": "ASCII",
                "offset": 168033,
                "string": "                                                         "
            },
            {
                "encoding": "ASCII",
                "offset": 168092,
                "string": "--More--(%lu)"
            },
            {
                "encoding": "ASCII",
                "offset": 168128,
                "string": "%s:  write error (disk full?).  Continue? (y/n/^C) "
            },
            {
                "encoding": "ASCII",
                "offset": 168180,
                "string": "error:  zipfile read error"
            },
            {
                "encoding": "ASCII",
                "offset": 168224,
                "string": "error:  cannot create %s"
            },
            {
                "encoding": "ASCII",
                "offset": 168249,
                "string": "        %s"
            },
            {
                "encoding": "ASCII",
                "offset": 168288,
                "string": "error:  cannot delete old %s"
            },
            {
                "encoding": "ASCII",
                "offset": 168317,
                "string": "        %s"
            },
            {
                "encoding": "ASCII",
                "offset": 168352,
                "string": "error:  cannot rename old %s"
            },
            {
                "encoding": "ASCII",
                "offset": 168381,
                "string": "        %s"
            },
            {
                "encoding": "ASCII",
                "offset": 168416,
                "string": "error:  cannot open zipfile [ %s ]"
            },
            {
                "encoding": "ASCII",
                "offset": 168451,
                "string": "        %s"
            },
            {
                "encoding": "ASCII",
                "offset": 168492,
                "string": "[Warning: CRC error, discarding PKWARE extra field]"
            },
            {
                "encoding": "ASCII",
                "offset": 168568,
                "string": "bus error"
            },
            {
                "encoding": "ASCII",
                "offset": 168578,
                "string": "segmentation violation"
            },
            {
                "encoding": "ASCII",
                "offset": 168601,
                "string": "illegal instruction"
            },
            {
                "encoding": "ASCII",
                "offset": 168621,
                "string": " with no real file"
            },
            {
                "encoding": "ASCII",
                "offset": 169100,
                "string": "(incomplete l-tree)  "
            },
            {
                "encoding": "ASCII",
                "offset": 169122,
                "string": "(incomplete d-tree)  "
            },
            {
                "encoding": "ASCII",
                "offset": 169152,
                "string": "---------                     -------"
            },
            {
                "encoding": "ASCII",
                "offset": 169190,
                "string": "%s                     %lu file%s"
            },
            {
                "encoding": "ASCII",
                "offset": 169248,
                "string": "--------          -------  ---                            -------"
            },
            {
                "encoding": "ASCII",
                "offset": 169314,
                "string": "%s         %s %4s                            %lu file%s"
            },
            {
                "encoding": "ASCII",
                "offset": 169376,
                "string": "%s  %02u%c%02u%c%02u %02u:%02u  %c"
            },
            {
                "encoding": "ASCII",
                "offset": 169440,
                "string": "%s  %-7s%s %4s %02u%c%02u%c%02u %02u:%02u %08lx %c"
            },
            {
                "encoding": "ASCII",
                "offset": 169491,
                "string": "%c%d%%"
            },
            {
                "encoding": "ASCII",
                "offset": 169498,
                "string": "100%%"
            },
            {
                "encoding": "ASCII",
                "offset": 169504,
                "string": "--------  ------  ------- ---- ---------- ----- --------  ----"
            },
            {
                "encoding": "ASCII",
                "offset": 169568,
                "string": " Length   Method    Size  Cmpr    Date    Time   CRC-32   Name"
            },
            {
                "encoding": "ASCII",
                "offset": 169632,
                "string": "---------  ---------- -----   ----"
            },
            {
                "encoding": "ASCII",
                "offset": 169696,
                "string": "  Length      Date    Time    Name"
            },
            {
                "encoding": "ASCII",
                "offset": 169760,
                "string": "%s (\"^\" ==> case"
            },
            {
                "encoding": "ASCII",
                "offset": 169777,
                "string": "%s   conversion)"
            },
            {
                "encoding": "ASCII",
                "offset": 169797,
                "string": "NXFS"
            },
            {
                "encoding": "ASCII",
                "offset": 169824,
                "string": "Stored"
            },
            {
                "encoding": "ASCII",
                "offset": 169832,
                "string": "Shrunk"
            },
            {
                "encoding": "ASCII",
                "offset": 169840,
                "string": "Reduce1"
            },
            {
                "encoding": "ASCII",
                "offset": 169848,
                "string": "Reduce2"
            },
            {
                "encoding": "ASCII",
                "offset": 169856,
                "string": "Reduce3"
            },
            {
                "encoding": "ASCII",
                "offset": 169864,
                "string": "Reduce4"
            },
            {
                "encoding": "ASCII",
                "offset": 169872,
                "string": "Implode"
            },
            {
                "encoding": "ASCII",
                "offset": 169880,
                "string": "Token"
            },
            {
                "encoding": "ASCII",
                "offset": 169888,
                "string": "Defl:#"
            },
            {
                "encoding": "ASCII",
                "offset": 169896,
                "string": "Def64#"
            },
            {
                "encoding": "ASCII",
                "offset": 169904,
                "string": "ImplDCL"
            },
            {
                "encoding": "ASCII",
                "offset": 169912,
                "string": "BZip2"
            },
            {
                "encoding": "ASCII",
                "offset": 169920,
                "string": "LZMA"
            },
            {
                "encoding": "ASCII",
                "offset": 169928,
                "string": "Terse"
            },
            {
                "encoding": "ASCII",
                "offset": 169936,
                "string": "IBMLZ77"
            },
            {
                "encoding": "ASCII",
                "offset": 169944,
                "string": "WavPack"
            },
            {
                "encoding": "ASCII",
                "offset": 169952,
                "string": "PPMd"
            },
            {
                "encoding": "ASCII",
                "offset": 169960,
                "string": "Unk:###"
            },
            {
                "encoding": "ASCII",
                "offset": 169974,
                "string": "%03u"
            },
            {
                "encoding": "ASCII",
                "offset": 170017,
                "string": "warning:  Unicode Path checksum invalid"
            },
            {
                "encoding": "ASCII",
                "offset": 170081,
                "string": "warning:  Unicode Path version > 1"
            },
            {
                "encoding": "ASCII",
                "offset": 170117,
                "string": "No zipfiles found."
            },
            {
                "encoding": "ASCII",
                "offset": 170144,
                "string": "%d \"zipfiles\" were directories."
            },
            {
                "encoding": "ASCII",
                "offset": 170177,
                "string": "1 \"zipfile\" was a directory."
            },
            {
                "encoding": "ASCII",
                "offset": 170208,
                "string": "%d file%s had no zipfile directory."
            },
            {
                "encoding": "ASCII",
                "offset": 170272,
                "string": "%d archive%s had fatal errors."
            },
            {
                "encoding": "ASCII",
                "offset": 170304,
                "string": "%d archive%s had warnings but no fatal errors."
            },
            {
                "encoding": "ASCII",
                "offset": 170368,
                "string": "%d archive%s successfully processed."
            },
            {
                "encoding": "ASCII",
                "offset": 170432,
                "string": "error:  cannot allocate unzip buffers"
            },
            {
                "encoding": "ASCII",
                "offset": 170471,
                "string": "Updated time stamp for %s."
            },
            {
                "encoding": "ASCII",
                "offset": 170528,
                "string": "warning:  cannot set time for %s"
            },
            {
                "encoding": "ASCII",
                "offset": 170592,
                "string": "error [%s]:  reported length of central directory is"
            },
            {
                "encoding": "ASCII",
                "offset": 170645,
                "string": "  %s bytes too long (Atari STZip zipfile?  J.H.Holm ZIPSPLIT 1.1"
            },
            {
                "encoding": "ASCII",
                "offset": 170710,
                "string": "  zipfile?).  Compensating..."
            },
            {
                "encoding": "ASCII",
                "offset": 170752,
                "string": "error [%s]:  start of central directory not found;"
            },
            {
                "encoding": "ASCII",
                "offset": 170803,
                "string": "  zipfile corrupt."
            },
            {
                "encoding": "ASCII",
                "offset": 170848,
                "string": "warning [%s]:  zipfile is empty"
            },
            {
                "encoding": "ASCII",
                "offset": 170912,
                "string": "warning [%s]:  %s extra byte%s at beginning or within zipfile"
            },
            {
                "encoding": "ASCII",
                "offset": 170974,
                "string": "  (attempting to process anyway)"
            },
            {
                "encoding": "ASCII",
                "offset": 171008,
                "string": "error [%s]:  NULL central directory offset"
            },
            {
                "encoding": "ASCII",
                "offset": 171051,
                "string": "  (attempting to process anyway)"
            },
            {
                "encoding": "ASCII",
                "offset": 171104,
                "string": "error [%s]:  missing %s bytes in zipfile"
            },
            {
                "encoding": "ASCII",
                "offset": 171145,
                "string": "  (attempting to process anyway)"
            },
            {
                "encoding": "ASCII",
                "offset": 171200,
                "string": "warning [%s]:  zipfile claims to be last disk of a multi-part archive;"
            },
            {
                "encoding": "ASCII",
                "offset": 171271,
                "string": "  attempting to process anyway, assuming all parts have been concatenated"
            },
            {
                "encoding": "ASCII",
                "offset": 171345,
                "string": "  together in order.  Expect \"errors\" and warnings...true multi-part support"
            },
            {
                "encoding": "ASCII",
                "offset": 171422,
                "string": "  doesn't exist yet (coming soon)."
            },
            {
                "encoding": "ASCII",
                "offset": 171489,
                "string": "warning [%s]:  end-of-central-directory record claims this"
            },
            {
                "encoding": "ASCII",
                "offset": 171548,
                "string": "  is disk %lu but that the central directory starts on disk %lu; this is a"
            },
            {
                "encoding": "ASCII",
                "offset": 171623,
                "string": "  contradiction.  Attempting to process anyway."
            },
            {
                "encoding": "ASCII",
                "offset": 171681,
                "string": "   [%s]:"
            },
            {
                "encoding": "ASCII",
                "offset": 171690,
                "string": "     Zipfile is disk %lu of a multi-disk archive, and this is not the disk on"
            },
            {
                "encoding": "ASCII",
                "offset": 171768,
                "string": "     which the central zipfile directory begins (disk %lu)."
            },
            {
                "encoding": "ASCII",
                "offset": 171840,
                "string": "note:  %s may be a plain executable, not an archive"
            },
            {
                "encoding": "ASCII",
                "offset": 171893,
                "string": "Archive:  %s"
            },
            {
                "encoding": "ASCII",
                "offset": 171936,
                "string": "Trying to read large file (> 2 GiB) without large file support"
            },
            {
                "encoding": "ASCII",
                "offset": 172000,
                "string": "%s:  cannot find or open %s, %s.zip or %s."
            },
            {
                "encoding": "ASCII",
                "offset": 172044,
                "string": "unzip"
            },
            {
                "encoding": "ASCII",
                "offset": 172064,
                "string": "%s:  cannot find zipfile directory in one of %s or"
            },
            {
                "encoding": "ASCII",
                "offset": 172115,
                "string": "        %s%s.zip, and cannot find %s, period."
            },
            {
                "encoding": "ASCII",
                "offset": 172192,
                "string": "  End-of-central-directory signature not found.  Either this file is not"
            },
            {
                "encoding": "ASCII",
                "offset": 172265,
                "string": "  a zipfile, or it constitutes one disk of a multi-part archive.  In the"
            },
            {
                "encoding": "ASCII",
                "offset": 172338,
                "string": "  latter case the central directory and zipfile comment will be found on"
            },
            {
                "encoding": "ASCII",
                "offset": 172411,
                "string": "  the last disk(s) of this archive."
            },
            {
                "encoding": "ASCII",
                "offset": 172449,
                "string": "caution:  zipfile comment truncated"
            },
            {
                "encoding": "ASCII",
                "offset": 172513,
                "string": "  The zipfile comment is truncated."
            },
            {
                "encoding": "ASCII",
                "offset": 172576,
                "string": "========================= zipfile comment ends ==========================="
            },
            {
                "encoding": "ASCII",
                "offset": 172672,
                "string": "======================== zipfile comment begins =========================="
            },
            {
                "encoding": "ASCII",
                "offset": 172768,
                "string": "The zipfile comment is %u bytes long and contains the following text:"
            },
            {
                "encoding": "ASCII",
                "offset": 172839,
                "string": "There is no zipfile comment."
            },
            {
                "encoding": "ASCII",
                "offset": 172896,
                "string": "error: End-of-centdir-64 signature not where expected (prepended bytes?)"
            },
            {
                "encoding": "ASCII",
                "offset": 172969,
                "string": "  (attempting to process anyway)"
            },
            {
                "encoding": "ASCII",
                "offset": 173024,
                "string": "fatal error: read failure while seeking for End-of-centdir-64 signature."
            },
            {
                "encoding": "ASCII",
                "offset": 173097,
                "string": "  This zipfile is corrupt."
            },
            {
                "encoding": "ASCII",
                "offset": 173128,
                "string": "[%s]"
            },
            {
                "encoding": "ASCII",
                "offset": 173141,
                "string": "%sEmpty zipfile."
            },
            {
                "encoding": "ASCII",
                "offset": 173161,
                "string": "s were"
            },
            {
                "encoding": "ASCII",
                "offset": 173168,
                "string": " was"
            },
            {
                "encoding": "ASCII",
                "offset": 173184,
                "string": "/dev/tty"
            },
            {
                "encoding": "ASCII",
                "offset": 173194,
                "string": "(line too long--try again)"
            },
            {
                "encoding": "ASCII",
                "offset": 173224,
                "string": "error: internal fatal libbzip2 error number %d"
            },
            {
                "encoding": "ASCII",
                "offset": 173312,
                "string": "%lu file%s, %s bytes uncompressed, %s bytes compressed:  %s%d.%d%%"
            },
            {
                "encoding": "ASCII",
                "offset": 173409,
                "string": "Central directory entry #%lu:"
            },
            {
                "encoding": "ASCII",
                "offset": 173439,
                "string": "---------------------------"
            },
            {
                "encoding": "ASCII",
                "offset": 173469,
                "string": "%02u-%s-%02u %02u:%02u"
            },
            {
                "encoding": "ASCII",
                "offset": 173492,
                "string": "%04u%02u%02u.%02u%02u%02u"
            },
            {
                "encoding": "ASCII",
                "offset": 173518,
                "string": "%u %s %u %02u:%02u:%02u"
            },
            {
                "encoding": "ASCII",
                "offset": 173542,
                "string": "%03d"
            },
            {
                "encoding": "ASCII",
                "offset": 173547,
                "string": "???? ??? ?? ??:??:??"
            },
            {
                "encoding": "ASCII",
                "offset": 173568,
                "string": "-------------------------- file comment ends -----------------------------"
            },
            {
                "encoding": "ASCII",
                "offset": 173665,
                "string": "------------------------- file comment begins ----------------------------"
            },
            {
                "encoding": "ASCII",
                "offset": 173742,
                "string": "  There is no file comment."
            },
            {
                "encoding": "ASCII",
                "offset": 173792,
                "string": "GMT modification/access times only"
            },
            {
                "encoding": "ASCII",
                "offset": 173856,
                "string": "GMT modification/access times and Unix UID/GID"
            },
            {
                "encoding": "ASCII",
                "offset": 173921,
                "string": "  There %s a local extra field with ID 0x%04x (%s) and"
            },
            {
                "encoding": "ASCII",
                "offset": 173976,
                "string": "  %u data bytes (%s)."
            },
            {
                "encoding": "ASCII",
                "offset": 173999,
                "string": ".  The first"
            },
            {
                "encoding": "ASCII",
                "offset": 174012,
                "string": "    20 are:  "
            },
            {
                "encoding": "ASCII",
                "offset": 174050,
                "string": "    The 128-bit MD5 signature is %s"
            },
            {
                "encoding": "ASCII",
                "offset": 174086,
                "string": "Object"
            },
            {
                "encoding": "ASCII",
                "offset": 174093,
                "string": "Edit"
            },
            {
                "encoding": "ASCII",
                "offset": 174098,
                "string": "Key Sequenced"
            },
            {
                "encoding": "ASCII",
                "offset": 174112,
                "string": "Entry Sequenced"
            },
            {
                "encoding": "ASCII",
                "offset": 174128,
                "string": "Relative"
            },
            {
                "encoding": "ASCII",
                "offset": 174137,
                "string": "Unstructured"
            },
            {
                "encoding": "ASCII",
                "offset": 174178,
                "string": "    The file was originally a Tandem %s file, with file code %u"
            },
            {
                "encoding": "ASCII",
                "offset": 174274,
                "string": "    The AOS/VS extra field revision is %d.%d"
            },
            {
                "encoding": "ASCII",
                "offset": 174338,
                "string": "    The QDOS extra field subtype is `%c%c%c%c'"
            },
            {
                "encoding": "ASCII",
                "offset": 174402,
                "string": "    The local extra field has %lu bytes of %scompressed BeOS file attributes"
            },
            {
                "encoding": "ASCII",
                "offset": 174498,
                "string": "    The local extra field has %lu bytes of %scompressed AtheOS file attributes"
            },
            {
                "encoding": "ASCII",
                "offset": 174579,
                "string": "    File is marked as %s"
            },
            {
                "encoding": "ASCII",
                "offset": 174626,
                "string": "    The Mac long filename is %s"
            },
            {
                "encoding": "ASCII",
                "offset": 174658,
                "string": "Resource-fork"
            },
            {
                "encoding": "ASCII",
                "offset": 174672,
                "string": "Data-fork"
            },
            {
                "encoding": "ASCII",
                "offset": 174690,
                "string": "    File is marked as %s, File Dates are in %d Bit"
            },
            {
                "encoding": "ASCII",
                "offset": 174754,
                "string": "    The local extra field has %lu bytes of %scompressed Macintosh"
            },
            {
                "encoding": "ASCII",
                "offset": 174820,
                "string": "    finder attributes"
            },
            {
                "encoding": "ASCII",
                "offset": 174842,
                "string": " %02x"
            },
            {
                "encoding": "ASCII",
                "offset": 174848,
                "string": ". The first"
            },
            {
                "encoding": "ASCII",
                "offset": 174860,
                "string": "    24 UTF8 bytes in the extra field (V%u, ASCII name CRC `%.8lx') are:"
            },
            {
                "encoding": "ASCII",
                "offset": 174946,
                "string": "    The UTF8 data of the extra field (V%u, ASCII name CRC `%.8lx') are:"
            },
            {
                "encoding": "ASCII",
                "offset": 175042,
                "string": "    The local extra field has UTC/GMT %s time%s"
            },
            {
                "encoding": "ASCII",
                "offset": 175090,
                "string": "creation"
            },
            {
                "encoding": "ASCII",
                "offset": 175099,
                "string": "access"
            },
            {
                "encoding": "ASCII",
                "offset": 175106,
                "string": "modification"
            },
            {
                "encoding": "ASCII",
                "offset": 175119,
                "string": "compressed(?)"
            },
            {
                "encoding": "ASCII",
                "offset": 175133,
                "string": "deflated"
            },
            {
                "encoding": "ASCII",
                "offset": 175142,
                "string": "run-length encoded"
            },
            {
                "encoding": "ASCII",
                "offset": 175161,
                "string": "stored"
            },
            {
                "encoding": "ASCII",
                "offset": 175168,
                "string": ".  The extra"
            },
            {
                "encoding": "ASCII",
                "offset": 175181,
                "string": "    field is %s and has %u bytes of VMS %s information%s"
            },
            {
                "encoding": "ASCII",
                "offset": 175266,
                "string": "    The local extra field has %lu bytes of NT security descriptor data"
            },
            {
                "encoding": "ASCII",
                "offset": 175362,
                "string": "    The local extra field has %lu bytes of access control list information"
            },
            {
                "encoding": "ASCII",
                "offset": 175458,
                "string": "    The local extra field has %lu bytes of OS/2 extended attributes."
            },
            {
                "encoding": "ASCII",
                "offset": 175527,
                "string": "    (May not match OS/2 \"dir\" amount due to storage method)"
            },
            {
                "encoding": "ASCII",
                "offset": 175617,
                "string": "  - A subfield with ID 0x%04x (%s) and %u data bytes"
            },
            {
                "encoding": "ASCII",
                "offset": 175670,
                "string": "unknown"
            },
            {
                "encoding": "ASCII",
                "offset": 175678,
                "string": "Theos"
            },
            {
                "encoding": "ASCII",
                "offset": 175684,
                "string": "SmartZip Macintosh"
            },
            {
                "encoding": "ASCII",
                "offset": 175703,
                "string": "Tandem NSK"
            },
            {
                "encoding": "ASCII",
                "offset": 175714,
                "string": "ASi Unix"
            },
            {
                "encoding": "ASCII",
                "offset": 175723,
                "string": "Fred Kantor MD5"
            },
            {
                "encoding": "ASCII",
                "offset": 175739,
                "string": "Acorn SparkFS"
            },
            {
                "encoding": "ASCII",
                "offset": 175753,
                "string": "AOS/VS"
            },
            {
                "encoding": "ASCII",
                "offset": 175760,
                "string": "SMS/QDOS"
            },
            {
                "encoding": "ASCII",
                "offset": 175769,
                "string": "BeOS"
            },
            {
                "encoding": "ASCII",
                "offset": 175774,
                "string": "AtheOS"
            },
            {
                "encoding": "ASCII",
                "offset": 175785,
                "string": "VM/CMS"
            },
            {
                "encoding": "ASCII",
                "offset": 175792,
                "string": "ZipIt Macintosh (short)"
            },
            {
                "encoding": "ASCII",
                "offset": 175816,
                "string": "ZipIt Macintosh"
            },
            {
                "encoding": "ASCII",
                "offset": 175832,
                "string": "old Info-ZIP Macintosh"
            },
            {
                "encoding": "ASCII",
                "offset": 175855,
                "string": "new Info-ZIP Macintosh"
            },
            {
                "encoding": "ASCII",
                "offset": 175878,
                "string": "UTF8 entry comment"
            },
            {
                "encoding": "ASCII",
                "offset": 175897,
                "string": "UTF8 path name"
            },
            {
                "encoding": "ASCII",
                "offset": 175912,
                "string": "universal time"
            },
            {
                "encoding": "ASCII",
                "offset": 175927,
                "string": "Unix UID/GID (any size)"
            },
            {
                "encoding": "ASCII",
                "offset": 175951,
                "string": "Unix UID/GID (16-bit)"
            },
            {
                "encoding": "ASCII",
                "offset": 175973,
                "string": "old Info-ZIP Unix/OS2/NT"
            },
            {
                "encoding": "ASCII",
                "offset": 175998,
                "string": "PKWARE Unix"
            },
            {
                "encoding": "ASCII",
                "offset": 176010,
                "string": "PKWARE Win32"
            },
            {
                "encoding": "ASCII",
                "offset": 176023,
                "string": "Info-ZIP VMS"
            },
            {
                "encoding": "ASCII",
                "offset": 176036,
                "string": "PKWARE VMS"
            },
            {
                "encoding": "ASCII",
                "offset": 176047,
                "string": "Security Descriptor"
            },
            {
                "encoding": "ASCII",
                "offset": 176067,
                "string": "OS/2 ACL"
            },
            {
                "encoding": "ASCII",
                "offset": 176076,
                "string": "OS/2"
            },
            {
                "encoding": "ASCII",
                "offset": 176081,
                "string": "PKWARE AV"
            },
            {
                "encoding": "ASCII",
                "offset": 176091,
                "string": "PKWARE 64-bit sizes"
            },
            {
                "encoding": "ASCII",
                "offset": 176129,
                "string": "  error: EF data block (type 0x%04x) size %u exceeds remaining extra field"
            },
            {
                "encoding": "ASCII",
                "offset": 176204,
                "string": "         space %u; block length has been truncated."
            },
            {
                "encoding": "ASCII",
                "offset": 176289,
                "string": "  The central-directory extra field contains:"
            },
            {
                "encoding": "ASCII",
                "offset": 176352,
                "string": "  MS-DOS file attributes (%02X hex):                %s%s%s%s%s%s%s%s"
            },
            {
                "encoding": "ASCII",
                "offset": 176448,
                "string": "  MS-DOS file attributes (%02X hex):                read-only"
            },
            {
                "encoding": "ASCII",
                "offset": 176512,
                "string": "  MS-DOS file attributes (%02X hex):                none"
            },
            {
                "encoding": "ASCII",
                "offset": 176576,
                "string": "  non-MSDOS external file attributes:             %06lX hex"
            },
            {
                "encoding": "ASCII",
                "offset": 176640,
                "string": "  Unix file attributes (%06o octal):            %s"
            },
            {
                "encoding": "ASCII",
                "offset": 176704,
                "string": "  Theos file attributes (%04X hex):               %s"
            },
            {
                "encoding": "ASCII",
                "offset": 176758,
                "string": "???         "
            },
            {
                "encoding": "ASCII",
                "offset": 176771,
                "string": "386 program "
            },
            {
                "encoding": "ASCII",
                "offset": 176784,
                "string": "286 program "
            },
            {
                "encoding": "ASCII",
                "offset": 176797,
                "string": " 86 program "
            },
            {
                "encoding": "ASCII",
                "offset": 176810,
                "string": "Indexed     "
            },
            {
                "encoding": "ASCII",
                "offset": 176823,
                "string": "Keyed       "
            },
            {
                "encoding": "ASCII",
                "offset": 176836,
                "string": "Direct      "
            },
            {
                "encoding": "ASCII",
                "offset": 176849,
                "string": "Sequential  "
            },
            {
                "encoding": "ASCII",
                "offset": 176862,
                "string": "Directory   "
            },
            {
                "encoding": "ASCII",
                "offset": 176875,
                "string": "Library     "
            },
            {
                "encoding": "ASCII",
                "offset": 176896,
                "string": "  Amiga file attributes (%06o octal):           %s"
            },
            {
                "encoding": "ASCII",
                "offset": 176960,
                "string": "  VMS file attributes (%06o octal):             %s"
            },
            {
                "encoding": "ASCII",
                "offset": 177024,
                "string": "  apparent file type:                             %s"
            },
            {
                "encoding": "ASCII",
                "offset": 177088,
                "string": "  disk number on which file begins:               disk %lu"
            },
            {
                "encoding": "ASCII",
                "offset": 177152,
                "string": "  length of file comment:                         %u characters"
            },
            {
                "encoding": "ASCII",
                "offset": 177248,
                "string": "  length of extra field:                          %u bytes"
            },
            {
                "encoding": "ASCII",
                "offset": 177312,
                "string": "  length of filename:                             %u characters"
            },
            {
                "encoding": "ASCII",
                "offset": 177408,
                "string": "  uncompressed size:                              %s bytes"
            },
            {
                "encoding": "ASCII",
                "offset": 177472,
                "string": "  compressed size:                                %s bytes"
            },
            {
                "encoding": "ASCII",
                "offset": 177536,
                "string": "  32-bit CRC value (hex):                         %.8lx"
            },
            {
                "encoding": "ASCII",
                "offset": 177597,
                "string": "local"
            },
            {
                "encoding": "ASCII",
                "offset": 177632,
                "string": "  file last modified on (UT extra field modtime): %s %s"
            },
            {
                "encoding": "ASCII",
                "offset": 177696,
                "string": "  file last modified on (DOS date/time):          %s"
            },
            {
                "encoding": "ASCII",
                "offset": 177760,
                "string": "  extended local header:                          %s"
            },
            {
                "encoding": "ASCII",
                "offset": 177824,
                "string": "  file security status:                           %sencrypted"
            },
            {
                "encoding": "ASCII",
                "offset": 177888,
                "string": "  compression sub-type (deflation):               %s"
            },
            {
                "encoding": "ASCII",
                "offset": 177952,
                "string": "  number of Shannon-Fano trees (implosion):       %c"
            },
            {
                "encoding": "ASCII",
                "offset": 178016,
                "string": "  size of sliding dictionary (implosion):         %cK"
            },
            {
                "encoding": "ASCII",
                "offset": 178080,
                "string": "  compression method:                             %s"
            },
            {
                "encoding": "ASCII",
                "offset": 178144,
                "string": "  minimum software version required to extract:   %u.%u"
            },
            {
                "encoding": "ASCII",
                "offset": 178208,
                "string": "  minimum file system compatibility required:     %s"
            },
            {
                "encoding": "ASCII",
                "offset": 178272,
                "string": "  version of encoding software:                   %u.%u"
            },
            {
                "encoding": "ASCII",
                "offset": 178336,
                "string": "  file system or operating system of origin:      %s"
            },
            {
                "encoding": "ASCII",
                "offset": 178390,
                "string": "unknown (%d)"
            },
            {
                "encoding": "ASCII",
                "offset": 178433,
                "string": "  offset of local header from start of archive:   %s (%sh) bytes"
            },
            {
                "encoding": "ASCII",
                "offset": 178528,
                "string": "  There are an extra %s bytes preceding this file."
            },
            {
                "encoding": "ASCII",
                "offset": 178581,
                "string": "superfast"
            },
            {
                "encoding": "ASCII",
                "offset": 178591,
                "string": "fast"
            },
            {
                "encoding": "ASCII",
                "offset": 178596,
                "string": "maximum"
            },
            {
                "encoding": "ASCII",
                "offset": 178604,
                "string": "normal"
            },
            {
                "encoding": "ASCII",
                "offset": 178611,
                "string": "PPMd-ed"
            },
            {
                "encoding": "ASCII",
                "offset": 178619,
                "string": "WavPacked"
            },
            {
                "encoding": "ASCII",
                "offset": 178629,
                "string": "LZ77-compressed (IBM)"
            },
            {
                "encoding": "ASCII",
                "offset": 178651,
                "string": "tersed (IBM)"
            },
            {
                "encoding": "ASCII",
                "offset": 178664,
                "string": "LZMA-ed"
            },
            {
                "encoding": "ASCII",
                "offset": 178672,
                "string": "bzipped"
            },
            {
                "encoding": "ASCII",
                "offset": 178680,
                "string": "imploded (PK DCL)"
            },
            {
                "encoding": "ASCII",
                "offset": 178698,
                "string": "deflated (enhanced-64k)"
            },
            {
                "encoding": "ASCII",
                "offset": 178722,
                "string": "deflated"
            },
            {
                "encoding": "ASCII",
                "offset": 178731,
                "string": "tokenized"
            },
            {
                "encoding": "ASCII",
                "offset": 178741,
                "string": "imploded"
            },
            {
                "encoding": "ASCII",
                "offset": 178750,
                "string": "reduced (factor 4)"
            },
            {
                "encoding": "ASCII",
                "offset": 178769,
                "string": "reduced (factor 3)"
            },
            {
                "encoding": "ASCII",
                "offset": 178788,
                "string": "reduced (factor 2)"
            },
            {
                "encoding": "ASCII",
                "offset": 178807,
                "string": "reduced (factor 1)"
            },
            {
                "encoding": "ASCII",
                "offset": 178826,
                "string": "shrunk"
            },
            {
                "encoding": "ASCII",
                "offset": 178833,
                "string": "none (stored)"
            },
            {
                "encoding": "ASCII",
                "offset": 178847,
                "string": "AtheOS"
            },
            {
                "encoding": "ASCII",
                "offset": 178854,
                "string": "Mac OS/X (Darwin)"
            },
            {
                "encoding": "ASCII",
                "offset": 178872,
                "string": "Theos"
            },
            {
                "encoding": "ASCII",
                "offset": 178878,
                "string": "Tandem NSK"
            },
            {
                "encoding": "ASCII",
                "offset": 178889,
                "string": "BeOS"
            },
            {
                "encoding": "ASCII",
                "offset": 178898,
                "string": "Win32 VFAT"
            },
            {
                "encoding": "ASCII",
                "offset": 178909,
                "string": "Acorn RISC OS"
            },
            {
                "encoding": "ASCII",
                "offset": 178923,
                "string": "SMS/QDOS"
            },
            {
                "encoding": "ASCII",
                "offset": 178932,
                "string": "NTFS"
            },
            {
                "encoding": "ASCII",
                "offset": 178937,
                "string": "TOPS-20"
            },
            {
                "encoding": "ASCII",
                "offset": 178945,
                "string": "CP/M"
            },
            {
                "encoding": "ASCII",
                "offset": 178950,
                "string": "Z-System"
            },
            {
                "encoding": "ASCII",
                "offset": 178959,
                "string": "Macintosh HFS"
            },
            {
                "encoding": "ASCII",
                "offset": 178973,
                "string": "OS/2 or NT HPFS"
            },
            {
                "encoding": "ASCII",
                "offset": 178989,
                "string": "Atari ST"
            },
            {
                "encoding": "ASCII",
                "offset": 178998,
                "string": "VM/CMS"
            },
            {
                "encoding": "ASCII",
                "offset": 179005,
                "string": "Unix"
            },
            {
                "encoding": "ASCII",
                "offset": 179014,
                "string": "Amiga"
            },
            {
                "encoding": "ASCII",
                "offset": 179020,
                "string": "MS-DOS, OS/2 or NT FAT"
            },
            {
                "encoding": "ASCII",
                "offset": 179074,
                "string": "    The associated file has type code `0x%lx' and creator code `0x%lx'"
            },
            {
                "encoding": "ASCII",
                "offset": 179170,
                "string": "    The associated file has type code `%c%c%c%c' and creator code `%c%c%c%c'"
            },
            {
                "encoding": "ASCII",
                "offset": 179264,
                "string": "Zip file size: %s bytes, number of entries: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 179328,
                "string": "  %s of the archive entries %s contained within this zipfile volume,"
            },
            {
                "encoding": "ASCII",
                "offset": 179397,
                "string": "  out of a total of %s %s."
            },
            {
                "encoding": "ASCII",
                "offset": 179456,
                "string": "  of %s (%sh) bytes.  The entire"
            },
            {
                "encoding": "ASCII",
                "offset": 179489,
                "string": "  central directory is %s (%sh) bytes long."
            },
            {
                "encoding": "ASCII",
                "offset": 179552,
                "string": "  This zipfile constitutes disk %lu of a multi-part archive.  The central"
            },
            {
                "encoding": "ASCII",
                "offset": 179626,
                "string": "  directory starts on disk %lu at an offset within that archive part"
            },
            {
                "encoding": "ASCII",
                "offset": 179712,
                "string": "  and its (expected) offset in bytes from the beginning of the zipfile"
            },
            {
                "encoding": "ASCII",
                "offset": 179783,
                "string": "  is %s (%sh)."
            },
            {
                "encoding": "ASCII",
                "offset": 179808,
                "string": "  This zipfile constitutes the sole disk of a single-part archive; its"
            },
            {
                "encoding": "ASCII",
                "offset": 179879,
                "string": "  central directory contains %s %s."
            },
            {
                "encoding": "ASCII",
                "offset": 179915,
                "string": "  The central directory is %s (%sh) bytes long,"
            },
            {
                "encoding": "ASCII",
                "offset": 179968,
                "string": "  Actual end-cent-dir record offset:   %s (%sh)"
            },
            {
                "encoding": "ASCII",
                "offset": 180016,
                "string": "  Expected end-cent-dir record offset: %s (%sh)"
            },
            {
                "encoding": "ASCII",
                "offset": 180064,
                "string": "  (based on the length of the central directory and its expected offset)"
            },
            {
                "encoding": "ASCII",
                "offset": 180160,
                "string": "  Zip archive file size:               %s (%sh)"
            },
            {
                "encoding": "ASCII",
                "offset": 180224,
                "string": "-------------------------------"
            },
            {
                "encoding": "ASCII",
                "offset": 180289,
                "string": "End-of-central-directory record:"
            },
            {
                "encoding": "ASCII",
                "offset": 180687,
                "string": "entry"
            },
            {
                "encoding": "ASCII",
                "offset": 180693,
                "string": "entries"
            },
            {
                "encoding": "ASCII",
                "offset": 180784,
                "string": "NXFS"
            },
            {
                "encoding": "ASCII",
                "offset": 180928,
                "string": "stor"
            },
            {
                "encoding": "ASCII",
                "offset": 180933,
                "string": "shrk"
            },
            {
                "encoding": "ASCII",
                "offset": 180938,
                "string": "re:1"
            },
            {
                "encoding": "ASCII",
                "offset": 180943,
                "string": "re:2"
            },
            {
                "encoding": "ASCII",
                "offset": 180948,
                "string": "re:3"
            },
            {
                "encoding": "ASCII",
                "offset": 180953,
                "string": "re:4"
            },
            {
                "encoding": "ASCII",
                "offset": 180958,
                "string": "i#:#"
            },
            {
                "encoding": "ASCII",
                "offset": 180963,
                "string": "tokn"
            },
            {
                "encoding": "ASCII",
                "offset": 180968,
                "string": "def#"
            },
            {
                "encoding": "ASCII",
                "offset": 180973,
                "string": "d64#"
            },
            {
                "encoding": "ASCII",
                "offset": 180978,
                "string": "dcli"
            },
            {
                "encoding": "ASCII",
                "offset": 180983,
                "string": "bzp2"
            },
            {
                "encoding": "ASCII",
                "offset": 180988,
                "string": "lzma"
            },
            {
                "encoding": "ASCII",
                "offset": 180993,
                "string": "ters"
            },
            {
                "encoding": "ASCII",
                "offset": 180998,
                "string": "lz77"
            },
            {
                "encoding": "ASCII",
                "offset": 181003,
                "string": "wavp"
            },
            {
                "encoding": "ASCII",
                "offset": 181008,
                "string": "ppmd"
            },
            {
                "encoding": "ASCII",
                "offset": 181013,
                "string": "u###"
            },
            {
                "encoding": "ASCII",
                "offset": 181023,
                "string": "not "
            },
            {
                "encoding": "ASCII",
                "offset": 181035,
                "string": "text"
            },
            {
                "encoding": "ASCII",
                "offset": 181040,
                "string": "ebcdic"
            },
            {
                "encoding": "ASCII",
                "offset": 181047,
                "string": "binary"
            },
            {
                "encoding": "ASCII",
                "offset": 181058,
                "string": "lnk "
            },
            {
                "encoding": "ASCII",
                "offset": 181063,
                "string": "arc "
            },
            {
                "encoding": "ASCII",
                "offset": 181068,
                "string": "dir "
            },
            {
                "encoding": "ASCII",
                "offset": 181073,
                "string": "lab "
            },
            {
                "encoding": "ASCII",
                "offset": 181078,
                "string": "sys "
            },
            {
                "encoding": "ASCII",
                "offset": 181083,
                "string": "hid "
            },
            {
                "encoding": "ASCII",
                "offset": 181088,
                "string": "rdo "
            },
            {
                "encoding": "ASCII",
                "offset": 181093,
                "string": "%u.%u"
            },
            {
                "encoding": "ASCII",
                "offset": 181101,
                "string": "%s %s %s "
            },
            {
                "encoding": "ASCII",
                "offset": 181114,
                "string": " %s %s "
            },
            {
                "encoding": "ASCII",
                "offset": 181122,
                "string": "%03u"
            },
            {
                "encoding": "ASCII",
                "offset": 181127,
                "string": "XABPRO"
            },
            {
                "encoding": "ASCII",
                "offset": 181134,
                "string": "XABFHC"
            },
            {
                "encoding": "ASCII",
                "offset": 181141,
                "string": "unknown"
            },
            {
                "encoding": "ASCII",
                "offset": 181155,
                "string": ".r.-...     %u.%u"
            },
            {
                "encoding": "ASCII",
                "offset": 181173,
                "string": "may be"
            },
            {
                "encoding": "ASCII",
                "offset": 181180,
                "string": "%3d%%"
            },
            {
                "encoding": "ASCII",
                "offset": 181190,
                "string": "%02x"
            },
            {
                "encoding": "ASCII",
                "offset": 181217,
                "string": "XABALL"
            },
            {
                "encoding": "ASCII",
                "offset": 181224,
                "string": "XABRDT"
            },
            {
                "encoding": "ASCII",
                "offset": 181231,
                "string": "XABDAT"
            },
            {
                "encoding": "ASCII",
                "offset": 181238,
                "string": "XABKEY"
            },
            {
                "encoding": "ASCII",
                "offset": 181245,
                "string": "version"
            },
            {
                "encoding": "ASCII",
                "offset": 181376,
                "string": "warning:  cannot set permissions for %s"
            },
            {
                "encoding": "ASCII",
                "offset": 181416,
                "string": "          %s"
            },
            {
                "encoding": "ASCII",
                "offset": 181440,
                "string": "warning:  cannot set modif./access times for %s"
            },
            {
                "encoding": "ASCII",
                "offset": 181488,
                "string": "          %s"
            },
            {
                "encoding": "ASCII",
                "offset": 181504,
                "string": "warning:  cannot set UID %lu and/or GID %lu for %s"
            },
            {
                "encoding": "ASCII",
                "offset": 181555,
                "string": "          %s"
            },
            {
                "encoding": "ASCII",
                "offset": 181600,
                "string": " (warning) cannot set modif./access times"
            },
            {
                "encoding": "ASCII",
                "offset": 181642,
                "string": "          %s"
            },
            {
                "encoding": "ASCII",
                "offset": 181664,
                "string": " (warning) cannot set UID %lu and/or GID %lu"
            },
            {
                "encoding": "ASCII",
                "offset": 181709,
                "string": "          %s"
            },
            {
                "encoding": "ASCII",
                "offset": 181728,
                "string": "warning:  cannot allocate wildcard buffers"
            },
            {
                "encoding": "ASCII",
                "offset": 181896,
                "string": "checkdir error:  path too long: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 181932,
                "string": "checkdir warning:  path too long; truncating"
            },
            {
                "encoding": "ASCII",
                "offset": 181977,
                "string": "                   %s"
            },
            {
                "encoding": "ASCII",
                "offset": 181999,
                "string": "                -> %s"
            },
            {
                "encoding": "ASCII",
                "offset": 182024,
                "string": "checkdir error:  %s exists but is not directory"
            },
            {
                "encoding": "ASCII",
                "offset": 182072,
                "string": "                 unable to process %s."
            },
            {
                "encoding": "ASCII",
                "offset": 182112,
                "string": "checkdir error:  cannot create %s"
            },
            {
                "encoding": "ASCII",
                "offset": 182146,
                "string": "                 %s"
            },
            {
                "encoding": "ASCII",
                "offset": 182166,
                "string": "                 unable to process %s."
            },
            {
                "encoding": "ASCII",
                "offset": 182208,
                "string": "checkdir:  cannot create extraction directory: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 182258,
                "string": "           %s"
            },
            {
                "encoding": "ASCII",
                "offset": 182276,
                "string": "warning:  skipped \"../\" path component(s) in %s"
            },
            {
                "encoding": "ASCII",
                "offset": 182328,
                "string": "mapname:  conversion of %s failed"
            },
            {
                "encoding": "ASCII",
                "offset": 182363,
                "string": "   creating: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 182380,
                "string": "chmod (directory attributes) error"
            },
            {
                "encoding": "ASCII",
                "offset": 182416,
                "string": "Could not read directory attributes"
            },
            {
                "encoding": "ASCII",
                "offset": 182816,
                "string": "warning:  symbolic link (%s) failed: mem alloc overflow"
            },
            {
                "encoding": "ASCII",
                "offset": 182876,
                "string": "warning:  symbolic link (%s) failed"
            },
            {
                "encoding": "ASCII",
                "offset": 182916,
                "string": "fchmod (file attributes) error"
            },
            {
                "encoding": "ASCII",
                "offset": 182947,
                "string": "-> %s "
            },
            {
                "encoding": "ASCII",
                "offset": 182956,
                "string": "warning:  symbolic link (%s) failed: no mem"
            },
            {
                "encoding": "ASCII",
                "offset": 183001,
                "string": "Apr 18 2010"
            },
            {
                "encoding": "ASCII",
                "offset": 183013,
                "string": " on "
            },
            {
                "encoding": "ASCII",
                "offset": 183018,
                "string": " (Cygwin)"
            },
            {
                "encoding": "ASCII",
                "offset": 183028,
                "string": "Unix"
            },
            {
                "encoding": "ASCII",
                "offset": 183033,
                "string": "3.4.4 (msys special)"
            },
            {
                "encoding": "ASCII",
                "offset": 183054,
                "string": "gcc "
            },
            {
                "encoding": "ASCII",
                "offset": 183072,
                "string": "1.0.5, 10-Dec-2007"
            },
            {
                "encoding": "ASCII",
                "offset": 183256,
                "string": "<unknown module>: "
            },
            {
                "encoding": "ASCII",
                "offset": 183280,
                "string": "Cygwin runtime failure: "
            },
            {
                "encoding": "ASCII",
                "offset": 183320,
                "string": "  VirtualQuery failed for %d bytes at address %p"
            },
            {
                "encoding": "ASCII",
                "offset": 183372,
                "string": "  Unknown pseudo relocation bit size %d."
            },
            {
                "encoding": "ASCII",
                "offset": 183416,
                "string": "  Unknown pseudo relocation protocol version %d."
            },
            {
                "encoding": "ASCII",
                "offset": 185022,
                "string": "__errno"
            },
            {
                "encoding": "ASCII",
                "offset": 185032,
                "string": "__main"
            },
            {
                "encoding": "ASCII",
                "offset": 185042,
                "string": "__mb_cur_max"
            },
            {
                "encoding": "ASCII",
                "offset": 185058,
                "string": "_ctype_"
            },
            {
                "encoding": "ASCII",
                "offset": 185068,
                "string": "_timezone"
            },
            {
                "encoding": "ASCII",
                "offset": 185080,
                "string": "abort"
            },
            {
                "encoding": "ASCII",
                "offset": 185088,
                "string": "calloc"
            },
            {
                "encoding": "ASCII",
                "offset": 185098,
                "string": "chmod"
            },
            {
                "encoding": "ASCII",
                "offset": 185106,
                "string": "chown"
            },
            {
                "encoding": "ASCII",
                "offset": 185114,
                "string": "close"
            },
            {
                "encoding": "ASCII",
                "offset": 185122,
                "string": "closedir"
            },
            {
                "encoding": "ASCII",
                "offset": 185134,
                "string": "cygwin_conv_to_posix_path"
            },
            {
                "encoding": "ASCII",
                "offset": 185162,
                "string": "cygwin_internal"
            },
            {
                "encoding": "ASCII",
                "offset": 185180,
                "string": "dll_crt0__FP11per_process"
            },
            {
                "encoding": "ASCII",
                "offset": 185208,
                "string": "exit"
            },
            {
                "encoding": "ASCII",
                "offset": 185216,
                "string": "fchmod"
            },
            {
                "encoding": "ASCII",
                "offset": 185226,
                "string": "fchown"
            },
            {
                "encoding": "ASCII",
                "offset": 185236,
                "string": "fclose"
            },
            {
                "encoding": "ASCII",
                "offset": 185246,
                "string": "fflush"
            },
            {
                "encoding": "ASCII",
                "offset": 185256,
                "string": "fgets"
            },
            {
                "encoding": "ASCII",
                "offset": 185264,
                "string": "fileno"
            },
            {
                "encoding": "ASCII",
                "offset": 185274,
                "string": "fopen"
            },
            {
                "encoding": "ASCII",
                "offset": 185282,
                "string": "fprintf"
            },
            {
                "encoding": "ASCII",
                "offset": 185292,
                "string": "fputc"
            },
            {
                "encoding": "ASCII",
                "offset": 185300,
                "string": "fputs"
            },
            {
                "encoding": "ASCII",
                "offset": 185308,
                "string": "fread"
            },
            {
                "encoding": "ASCII",
                "offset": 185316,
                "string": "free"
            },
            {
                "encoding": "ASCII",
                "offset": 185324,
                "string": "getenv"
            },
            {
                "encoding": "ASCII",
                "offset": 185334,
                "string": "gmtime"
            },
            {
                "encoding": "ASCII",
                "offset": 185344,
                "string": "ioctl"
            },
            {
                "encoding": "ASCII",
                "offset": 185352,
                "string": "isatty"
            },
            {
                "encoding": "ASCII",
                "offset": 185362,
                "string": "lchown"
            },
            {
                "encoding": "ASCII",
                "offset": 185372,
                "string": "localtime"
            },
            {
                "encoding": "ASCII",
                "offset": 185384,
                "string": "lseek"
            },
            {
                "encoding": "ASCII",
                "offset": 185392,
                "string": "lstat"
            },
            {
                "encoding": "ASCII",
                "offset": 185400,
                "string": "malloc"
            },
            {
                "encoding": "ASCII",
                "offset": 185410,
                "string": "mblen"
            },
            {
                "encoding": "ASCII",
                "offset": 185418,
                "string": "memcpy"
            },
            {
                "encoding": "ASCII",
                "offset": 185428,
                "string": "memset"
            },
            {
                "encoding": "ASCII",
                "offset": 185438,
                "string": "mkdir"
            },
            {
                "encoding": "ASCII",
                "offset": 185446,
                "string": "open"
            },
            {
                "encoding": "ASCII",
                "offset": 185454,
                "string": "opendir"
            },
            {
                "encoding": "ASCII",
                "offset": 185464,
                "string": "perror"
            },
            {
                "encoding": "ASCII",
                "offset": 185474,
                "string": "putc"
            },
            {
                "encoding": "ASCII",
                "offset": 185482,
                "string": "qsort"
            },
            {
                "encoding": "ASCII",
                "offset": 185490,
                "string": "read"
            },
            {
                "encoding": "ASCII",
                "offset": 185498,
                "string": "readdir"
            },
            {
                "encoding": "ASCII",
                "offset": 185508,
                "string": "realloc"
            },
            {
                "encoding": "ASCII",
                "offset": 185518,
                "string": "rename"
            },
            {
                "encoding": "ASCII",
                "offset": 185528,
                "string": "rewind"
            },
            {
                "encoding": "ASCII",
                "offset": 185538,
                "string": "setlocale"
            },
            {
                "encoding": "ASCII",
                "offset": 185550,
                "string": "signal"
            },
            {
                "encoding": "ASCII",
                "offset": 185560,
                "string": "sprintf"
            },
            {
                "encoding": "ASCII",
                "offset": 185570,
                "string": "stat"
            },
            {
                "encoding": "ASCII",
                "offset": 185578,
                "string": "strcat"
            },
            {
                "encoding": "ASCII",
                "offset": 185588,
                "string": "strchr"
            },
            {
                "encoding": "ASCII",
                "offset": 185598,
                "string": "strcmp"
            },
            {
                "encoding": "ASCII",
                "offset": 185608,
                "string": "strcpy"
            },
            {
                "encoding": "ASCII",
                "offset": 185618,
                "string": "strerror"
            },
            {
                "encoding": "ASCII",
                "offset": 185630,
                "string": "strlen"
            },
            {
                "encoding": "ASCII",
                "offset": 185640,
                "string": "strncpy"
            },
            {
                "encoding": "ASCII",
                "offset": 185650,
                "string": "strrchr"
            },
            {
                "encoding": "ASCII",
                "offset": 185660,
                "string": "symlink"
            },
            {
                "encoding": "ASCII",
                "offset": 185670,
                "string": "tcgetattr"
            },
            {
                "encoding": "ASCII",
                "offset": 185682,
                "string": "tcsetattr"
            },
            {
                "encoding": "ASCII",
                "offset": 185694,
                "string": "tzset"
            },
            {
                "encoding": "ASCII",
                "offset": 185702,
                "string": "umask"
            },
            {
                "encoding": "ASCII",
                "offset": 185710,
                "string": "unlink"
            },
            {
                "encoding": "ASCII",
                "offset": 185720,
                "string": "utime"
            },
            {
                "encoding": "ASCII",
                "offset": 185728,
                "string": "vsnprintf"
            },
            {
                "encoding": "ASCII",
                "offset": 185740,
                "string": "write"
            },
            {
                "encoding": "ASCII",
                "offset": 185748,
                "string": "GetModuleFileNameA"
            },
            {
                "encoding": "ASCII",
                "offset": 185770,
                "string": "GetModuleHandleA"
            },
            {
                "encoding": "ASCII",
                "offset": 185790,
                "string": "GetStdHandle"
            },
            {
                "encoding": "ASCII",
                "offset": 185806,
                "string": "VirtualProtect"
            },
            {
                "encoding": "ASCII",
                "offset": 185824,
                "string": "VirtualQuery"
            },
            {
                "encoding": "ASCII",
                "offset": 185840,
                "string": "WriteFile"
            },
            {
                "encoding": "ASCII",
                "offset": 186136,
                "string": "msys-1.0.dll"
            },
            {
                "encoding": "ASCII",
                "offset": 186176,
                "string": "KERNEL32.dll"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 162908,
                "string": " !\"#$%&'()*+,-./0123456789:;<=>?@A"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 163098,
                "string": " !\"#$%&'()*+,-./0123456789:;<=>?@AB"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 168800,
                "string": "#+3;CScs"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 168928,
                "string": "#+3;CScs"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 168980,
                "string": "!1Aa"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 169966,
                "string": "#u89"
            }
        ],
        "tight_strings": [
            {
                "encoding": "ASCII",
                "frame_offset": 9307,
                "function": 4326240,
                "offset": 2705,
                "original_stack_pointer": 3216244656,
                "program_counter": 4326340,
                "stack_pointer": 3216232640,
                "string": ">??~=>>|<==z;<<x:;;v9::t899r788p677n566l455j344h233f122d011b/00`.//^-..\\,--Z+,,X*++V)**T())R'((P&''N%&&L$%%J#$$H\"##F!\"\"D !!B"
            }
        ]
    },
    "is_malicious": false
}