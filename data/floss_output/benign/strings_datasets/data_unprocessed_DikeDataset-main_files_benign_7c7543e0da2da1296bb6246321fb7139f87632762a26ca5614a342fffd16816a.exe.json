{
    "analysis": {
        "enable_decoded_strings": false,
        "enable_stack_strings": false,
        "enable_static_strings": true,
        "enable_tight_strings": false,
        "functions": {
            "analyzed_decoded_strings": 0,
            "analyzed_stack_strings": 0,
            "analyzed_tight_strings": 0,
            "decoding_function_scores": {},
            "discovered": 0,
            "library": 0
        }
    },
    "metadata": {
        "file_path": "data/unprocessed/DikeDataset-main/files/benign/7c7543e0da2da1296bb6246321fb7139f87632762a26ca5614a342fffd16816a.exe",
        "imagebase": 0,
        "min_length": 4,
        "runtime": {
            "decoded_strings": 0.0,
            "find_features": 0.0,
            "stack_strings": 0.0,
            "start_date": "2023-02-10T15:46:43.385589Z",
            "static_strings": 0.01,
            "tight_strings": 0.0,
            "total": 0.01,
            "vivisect": 0.0
        },
        "version": "v2.2.0-0-g783dd8f"
    },
    "strings": {
        "decoded_strings": [],
        "stack_strings": [],
        "static_strings": [
            {
                "encoding": "ASCII",
                "offset": 77,
                "string": "!This program cannot be run in DOS mode."
            },
            {
                "encoding": "ASCII",
                "offset": 376,
                "string": ".text"
            },
            {
                "encoding": "ASCII",
                "offset": 414,
                "string": "P`.data"
            },
            {
                "encoding": "ASCII",
                "offset": 456,
                "string": ".data_cy"
            },
            {
                "encoding": "ASCII",
                "offset": 496,
                "string": ".bss"
            },
            {
                "encoding": "ASCII",
                "offset": 536,
                "string": ".idata"
            },
            {
                "encoding": "ASCII",
                "offset": 2125,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 2809,
                "string": "]tYC9"
            },
            {
                "encoding": "ASCII",
                "offset": 2839,
                "string": "L[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 4039,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 4762,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 5779,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 5860,
                "string": "Cu\\1"
            },
            {
                "encoding": "ASCII",
                "offset": 6568,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 6768,
                "string": "r\t9]"
            },
            {
                "encoding": "ASCII",
                "offset": 7206,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 7383,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 7846,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 11720,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 11906,
                "string": ";CB9"
            },
            {
                "encoding": "ASCII",
                "offset": 11922,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 11978,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 12705,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 12845,
                "string": "t\t<-u"
            },
            {
                "encoding": "ASCII",
                "offset": 13279,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 13524,
                "string": "}$@;E"
            },
            {
                "encoding": "ASCII",
                "offset": 13858,
                "string": "9Wtb"
            },
            {
                "encoding": "ASCII",
                "offset": 13878,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 16350,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 17028,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 17093,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 17658,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 17731,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 18216,
                "string": "r\t9u"
            },
            {
                "encoding": "ASCII",
                "offset": 18477,
                "string": "r\t9u"
            },
            {
                "encoding": "ASCII",
                "offset": 21931,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 22358,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 23137,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 23443,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 23985,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 24207,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 24434,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 25270,
                "string": ",0<\t"
            },
            {
                "encoding": "ASCII",
                "offset": 25360,
                "string": "uu;]"
            },
            {
                "encoding": "ASCII",
                "offset": 25446,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 25473,
                "string": "\\[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 28179,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 29728,
                "string": "alnum"
            },
            {
                "encoding": "ASCII",
                "offset": 29734,
                "string": "alpha"
            },
            {
                "encoding": "ASCII",
                "offset": 29740,
                "string": "blank"
            },
            {
                "encoding": "ASCII",
                "offset": 29746,
                "string": "cntrl"
            },
            {
                "encoding": "ASCII",
                "offset": 29752,
                "string": "digit"
            },
            {
                "encoding": "ASCII",
                "offset": 29758,
                "string": "graph"
            },
            {
                "encoding": "ASCII",
                "offset": 29764,
                "string": "lower"
            },
            {
                "encoding": "ASCII",
                "offset": 29770,
                "string": "print"
            },
            {
                "encoding": "ASCII",
                "offset": 29776,
                "string": "punct"
            },
            {
                "encoding": "ASCII",
                "offset": 29782,
                "string": "space"
            },
            {
                "encoding": "ASCII",
                "offset": 29788,
                "string": "upper"
            },
            {
                "encoding": "ASCII",
                "offset": 29794,
                "string": "xdigit"
            },
            {
                "encoding": "ASCII",
                "offset": 29872,
                "string": "complement"
            },
            {
                "encoding": "ASCII",
                "offset": 29883,
                "string": "delete"
            },
            {
                "encoding": "ASCII",
                "offset": 29890,
                "string": "squeeze-repeats"
            },
            {
                "encoding": "ASCII",
                "offset": 29906,
                "string": "truncate-set1"
            },
            {
                "encoding": "ASCII",
                "offset": 29920,
                "string": "help"
            },
            {
                "encoding": "ASCII",
                "offset": 29925,
                "string": "version"
            },
            {
                "encoding": "ASCII",
                "offset": 30064,
                "string": "Try `%s --help' for more information."
            },
            {
                "encoding": "ASCII",
                "offset": 30104,
                "string": "Usage: %s [OPTION]... SET1 [SET2]"
            },
            {
                "encoding": "ASCII",
                "offset": 30140,
                "string": "Translate, squeeze, and/or delete characters from standard input,"
            },
            {
                "encoding": "ASCII",
                "offset": 30206,
                "string": "writing to standard output."
            },
            {
                "encoding": "ASCII",
                "offset": 30235,
                "string": "  -c, -C, --complement    first complement SET1"
            },
            {
                "encoding": "ASCII",
                "offset": 30283,
                "string": "  -d, --delete            delete characters in SET1, do not translate"
            },
            {
                "encoding": "ASCII",
                "offset": 30353,
                "string": "  -s, --squeeze-repeats   replace each input sequence of a repeated character"
            },
            {
                "encoding": "ASCII",
                "offset": 30431,
                "string": "                            that is listed in SET1 with a single occurrence"
            },
            {
                "encoding": "ASCII",
                "offset": 30507,
                "string": "                            of that character"
            },
            {
                "encoding": "ASCII",
                "offset": 30553,
                "string": "  -t, --truncate-set1     first truncate SET1 to length of SET2"
            },
            {
                "encoding": "ASCII",
                "offset": 30620,
                "string": "      --help     display this help and exit"
            },
            {
                "encoding": "ASCII",
                "offset": 30668,
                "string": "      --version  output version information and exit"
            },
            {
                "encoding": "ASCII",
                "offset": 30725,
                "string": "SETs are specified as strings of characters.  Most represent themselves."
            },
            {
                "encoding": "ASCII",
                "offset": 30798,
                "string": "Interpreted sequences are:"
            },
            {
                "encoding": "ASCII",
                "offset": 30826,
                "string": "  \\NNN            character with octal value NNN (1 to 3 octal digits)"
            },
            {
                "encoding": "ASCII",
                "offset": 30897,
                "string": "  \\\\              backslash"
            },
            {
                "encoding": "ASCII",
                "offset": 30925,
                "string": "  \\a              audible BEL"
            },
            {
                "encoding": "ASCII",
                "offset": 30955,
                "string": "  \\b              backspace"
            },
            {
                "encoding": "ASCII",
                "offset": 30983,
                "string": "  \\f              form feed"
            },
            {
                "encoding": "ASCII",
                "offset": 31011,
                "string": "  \\n              new line"
            },
            {
                "encoding": "ASCII",
                "offset": 31038,
                "string": "  \\r              return"
            },
            {
                "encoding": "ASCII",
                "offset": 31063,
                "string": "  \\t              horizontal tab"
            },
            {
                "encoding": "ASCII",
                "offset": 31100,
                "string": "  \\v              vertical tab"
            },
            {
                "encoding": "ASCII",
                "offset": 31131,
                "string": "  CHAR1-CHAR2     all characters from CHAR1 to CHAR2 in ascending order"
            },
            {
                "encoding": "ASCII",
                "offset": 31203,
                "string": "  [CHAR*]         in SET2, copies of CHAR until length of SET1"
            },
            {
                "encoding": "ASCII",
                "offset": 31266,
                "string": "  [CHAR*REPEAT]   REPEAT copies of CHAR, REPEAT octal if starting with 0"
            },
            {
                "encoding": "ASCII",
                "offset": 31339,
                "string": "  [:alnum:]       all letters and digits"
            },
            {
                "encoding": "ASCII",
                "offset": 31380,
                "string": "  [:alpha:]       all letters"
            },
            {
                "encoding": "ASCII",
                "offset": 31410,
                "string": "  [:blank:]       all horizontal whitespace"
            },
            {
                "encoding": "ASCII",
                "offset": 31454,
                "string": "  [:cntrl:]       all control characters"
            },
            {
                "encoding": "ASCII",
                "offset": 31495,
                "string": "  [:digit:]       all digits"
            },
            {
                "encoding": "ASCII",
                "offset": 31528,
                "string": "  [:graph:]       all printable characters, not including space"
            },
            {
                "encoding": "ASCII",
                "offset": 31592,
                "string": "  [:lower:]       all lower case letters"
            },
            {
                "encoding": "ASCII",
                "offset": 31633,
                "string": "  [:print:]       all printable characters, including space"
            },
            {
                "encoding": "ASCII",
                "offset": 31693,
                "string": "  [:punct:]       all punctuation characters"
            },
            {
                "encoding": "ASCII",
                "offset": 31738,
                "string": "  [:space:]       all horizontal or vertical whitespace"
            },
            {
                "encoding": "ASCII",
                "offset": 31794,
                "string": "  [:upper:]       all upper case letters"
            },
            {
                "encoding": "ASCII",
                "offset": 31835,
                "string": "  [:xdigit:]      all hexadecimal digits"
            },
            {
                "encoding": "ASCII",
                "offset": 31876,
                "string": "  [=CHAR=]        all characters which are equivalent to CHAR"
            },
            {
                "encoding": "ASCII",
                "offset": 31941,
                "string": "Translation occurs if -d is not given and both SET1 and SET2 appear."
            },
            {
                "encoding": "ASCII",
                "offset": 32010,
                "string": "-t may be used only when translating.  SET2 is extended to length of"
            },
            {
                "encoding": "ASCII",
                "offset": 32079,
                "string": "SET1 by repeating its last character as necessary.  "
            },
            {
                "encoding": "ASCII",
                "offset": 32132,
                "string": "Excess characters"
            },
            {
                "encoding": "ASCII",
                "offset": 32150,
                "string": "of SET2 are ignored.  Only [:lower:] and [:upper:] are guaranteed to"
            },
            {
                "encoding": "ASCII",
                "offset": 32219,
                "string": "expand in ascending order; used in SET2 while translating, they may"
            },
            {
                "encoding": "ASCII",
                "offset": 32287,
                "string": "only be used in pairs to specify case conversion.  "
            },
            {
                "encoding": "ASCII",
                "offset": 32340,
                "string": "-s uses SET1 if not"
            },
            {
                "encoding": "ASCII",
                "offset": 32360,
                "string": "translating nor deleting; else squeezing uses SET2 and occurs after"
            },
            {
                "encoding": "ASCII",
                "offset": 32428,
                "string": "translation or deletion."
            },
            {
                "encoding": "ASCII",
                "offset": 32455,
                "string": "Report bugs to <%s>."
            },
            {
                "encoding": "ASCII",
                "offset": 32477,
                "string": "bug-coreutils@gnu.org"
            },
            {
                "encoding": "ASCII",
                "offset": 32548,
                "string": "warning: the ambiguous octal escape \\%c%c%c is being"
            },
            {
                "encoding": "ASCII",
                "offset": 32601,
                "string": "\tinterpreted as the 2-byte sequence \\0%c%c, %c"
            },
            {
                "encoding": "ASCII",
                "offset": 32648,
                "string": "range-endpoints of `%s-%s' are in reverse collating sequence order"
            },
            {
                "encoding": "ASCII",
                "offset": 32716,
                "string": "/usr/src/coreutils/coreutils-5.97/src/tr.c"
            },
            {
                "encoding": "ASCII",
                "offset": 32759,
                "string": "list->tail"
            },
            {
                "encoding": "ASCII",
                "offset": 32770,
                "string": "\\%03o"
            },
            {
                "encoding": "ASCII",
                "offset": 32776,
                "string": "start_idx + 1 < es->len"
            },
            {
                "encoding": "ASCII",
                "offset": 32816,
                "string": "invalid repeat count %s in [c*n] construct"
            },
            {
                "encoding": "ASCII",
                "offset": 32868,
                "string": "%s: equivalence class operand must be a single character"
            },
            {
                "encoding": "ASCII",
                "offset": 32928,
                "string": "missing equivalence class character `[==]'"
            },
            {
                "encoding": "ASCII",
                "offset": 32972,
                "string": "missing character class name `[::]'"
            },
            {
                "encoding": "ASCII",
                "offset": 33008,
                "string": "invalid character class %s"
            },
            {
                "encoding": "ASCII",
                "offset": 33035,
                "string": "i < N_CHARS"
            },
            {
                "encoding": "ASCII",
                "offset": 33048,
                "string": "is_char_class_member (p->u.char_class, s->state)"
            },
            {
                "encoding": "ASCII",
                "offset": 33120,
                "string": "too many characters in set"
            },
            {
                "encoding": "ASCII",
                "offset": 33148,
                "string": "p->u.range.last_char >= p->u.range.first_char"
            },
            {
                "encoding": "ASCII",
                "offset": 33216,
                "string": "s1->length > s2->length"
            },
            {
                "encoding": "ASCII",
                "offset": 33240,
                "string": "translating"
            },
            {
                "encoding": "ASCII",
                "offset": 33252,
                "string": "s2->length > 0"
            },
            {
                "encoding": "ASCII",
                "offset": 33267,
                "string": "i >= 0"
            },
            {
                "encoding": "ASCII",
                "offset": 33296,
                "string": "when translating, the only character classes that may appear in"
            },
            {
                "encoding": "ASCII",
                "offset": 33360,
                "string": "string2 are `upper' and `lower'"
            },
            {
                "encoding": "ASCII",
                "offset": 33392,
                "string": "the [c*] construct may appear in string2 only when translating"
            },
            {
                "encoding": "ASCII",
                "offset": 33456,
                "string": "the [c*] repeat construct may not appear in string1"
            },
            {
                "encoding": "ASCII",
                "offset": 33508,
                "string": "only one [c*] repeat construct may appear in string2"
            },
            {
                "encoding": "ASCII",
                "offset": 33564,
                "string": "[=c=] expressions may not appear in string2 when translating"
            },
            {
                "encoding": "ASCII",
                "offset": 33628,
                "string": "when translating with complemented character classes,"
            },
            {
                "encoding": "ASCII",
                "offset": 33682,
                "string": "string2 must map all characters in the domain to one"
            },
            {
                "encoding": "ASCII",
                "offset": 33736,
                "string": "when not truncating set1, string2 must be non-empty"
            },
            {
                "encoding": "ASCII",
                "offset": 33788,
                "string": "write error"
            },
            {
                "encoding": "ASCII",
                "offset": 33801,
                "string": "coreutils"
            },
            {
                "encoding": "ASCII",
                "offset": 33811,
                "string": "/usr/share/locale"
            },
            {
                "encoding": "ASCII",
                "offset": 33829,
                "string": "+cCdst"
            },
            {
                "encoding": "ASCII",
                "offset": 33836,
                "string": "missing operand"
            },
            {
                "encoding": "ASCII",
                "offset": 33852,
                "string": "extra operand %s"
            },
            {
                "encoding": "ASCII",
                "offset": 33869,
                "string": "missing operand after %s"
            },
            {
                "encoding": "ASCII",
                "offset": 33896,
                "string": "Two strings must be given when both deleting and squeezing repeats."
            },
            {
                "encoding": "ASCII",
                "offset": 33964,
                "string": "Two strings must be given when translating."
            },
            {
                "encoding": "ASCII",
                "offset": 34012,
                "string": "read error"
            },
            {
                "encoding": "ASCII",
                "offset": 34023,
                "string": "standard input"
            },
            {
                "encoding": "ASCII",
                "offset": 34040,
                "string": "misaligned [:upper:] and/or [:lower:] construct"
            },
            {
                "encoding": "ASCII",
                "offset": 34088,
                "string": "Only one string may be given when deleting without squeezing repeats."
            },
            {
                "encoding": "ASCII",
                "offset": 34158,
                "string": "ch != -1 || truncate_set1"
            },
            {
                "encoding": "ASCII",
                "offset": 34184,
                "string": "get_next (s2, NULL) == -1 || truncate_set1"
            },
            {
                "encoding": "ASCII",
                "offset": 34227,
                "string": "Jim Meyering"
            },
            {
                "encoding": "ASCII",
                "offset": 34240,
                "string": "5.97"
            },
            {
                "encoding": "ASCII",
                "offset": 34245,
                "string": "GNU coreutils"
            },
            {
                "encoding": "ASCII",
                "offset": 34262,
                "string": "c1 == -1 || truncate_set1"
            },
            {
                "encoding": "ASCII",
                "offset": 34307,
                "string": "POSIXLY_CORRECT"
            },
            {
                "encoding": "ASCII",
                "offset": 34324,
                "string": "%s: unrecognized option `%c%s'"
            },
            {
                "encoding": "ASCII",
                "offset": 34357,
                "string": "%s: illegal option -- %c"
            },
            {
                "encoding": "ASCII",
                "offset": 34384,
                "string": "%s: option `%c%s' doesn't allow an argument"
            },
            {
                "encoding": "ASCII",
                "offset": 34429,
                "string": "%s: invalid option -- %c"
            },
            {
                "encoding": "ASCII",
                "offset": 34456,
                "string": "%s: option `%s' requires an argument"
            },
            {
                "encoding": "ASCII",
                "offset": 34494,
                "string": "%s: option `%s' is ambiguous"
            },
            {
                "encoding": "ASCII",
                "offset": 34524,
                "string": "%s: option requires an argument -- %c"
            },
            {
                "encoding": "ASCII",
                "offset": 34564,
                "string": "%s: unrecognized option `--%s'"
            },
            {
                "encoding": "ASCII",
                "offset": 34596,
                "string": "%s: option `-W %s' is ambiguous"
            },
            {
                "encoding": "ASCII",
                "offset": 34632,
                "string": "%s: option `--%s' doesn't allow an argument"
            },
            {
                "encoding": "ASCII",
                "offset": 34680,
                "string": "%s: option `-W %s' doesn't allow an argument"
            },
            {
                "encoding": "ASCII",
                "offset": 34728,
                "string": "%s (%s) %s"
            },
            {
                "encoding": "ASCII",
                "offset": 34745,
                "string": "This is free software.  You may redistribute copies of it under the terms of"
            },
            {
                "encoding": "ASCII",
                "offset": 34822,
                "string": "the GNU General Public License <http://www.gnu.org/licenses/gpl.html>."
            },
            {
                "encoding": "ASCII",
                "offset": 34893,
                "string": "There is NO WARRANTY, to the extent permitted by law."
            },
            {
                "encoding": "ASCII",
                "offset": 34952,
                "string": "Written by %s, %s, %s,"
            },
            {
                "encoding": "ASCII",
                "offset": 34975,
                "string": "%s, %s, %s, %s,"
            },
            {
                "encoding": "ASCII",
                "offset": 34991,
                "string": "%s, %s, and others."
            },
            {
                "encoding": "ASCII",
                "offset": 35012,
                "string": "Written by %s, %s, %s,"
            },
            {
                "encoding": "ASCII",
                "offset": 35035,
                "string": "%s, %s, %s, %s,"
            },
            {
                "encoding": "ASCII",
                "offset": 35051,
                "string": "%s, and %s."
            },
            {
                "encoding": "ASCII",
                "offset": 35064,
                "string": "Written by %s, %s, %s,"
            },
            {
                "encoding": "ASCII",
                "offset": 35087,
                "string": "%s, %s, %s, %s,"
            },
            {
                "encoding": "ASCII",
                "offset": 35103,
                "string": "and %s."
            },
            {
                "encoding": "ASCII",
                "offset": 35112,
                "string": "Written by %s, %s, %s,"
            },
            {
                "encoding": "ASCII",
                "offset": 35135,
                "string": "%s, %s, %s, and %s."
            },
            {
                "encoding": "ASCII",
                "offset": 35156,
                "string": "Written by %s, %s, %s,"
            },
            {
                "encoding": "ASCII",
                "offset": 35179,
                "string": "%s, %s, and %s."
            },
            {
                "encoding": "ASCII",
                "offset": 35196,
                "string": "Written by %s, %s, %s,"
            },
            {
                "encoding": "ASCII",
                "offset": 35219,
                "string": "%s, and %s."
            },
            {
                "encoding": "ASCII",
                "offset": 35232,
                "string": "Written by %s, %s, %s,"
            },
            {
                "encoding": "ASCII",
                "offset": 35255,
                "string": "and %s."
            },
            {
                "encoding": "ASCII",
                "offset": 35264,
                "string": "Written by %s, %s, and %s."
            },
            {
                "encoding": "ASCII",
                "offset": 35292,
                "string": "Written by %s and %s."
            },
            {
                "encoding": "ASCII",
                "offset": 35315,
                "string": "Written by %s."
            },
            {
                "encoding": "ASCII",
                "offset": 35331,
                "string": "%s %s"
            },
            {
                "encoding": "ASCII",
                "offset": 35380,
                "string": "write error"
            },
            {
                "encoding": "ASCII",
                "offset": 35392,
                "string": "%s: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 35404,
                "string": "/usr/src/coreutils/coreutils-5.97/lib/xstrtol.c"
            },
            {
                "encoding": "ASCII",
                "offset": 35452,
                "string": "0 <= strtol_base && strtol_base <= 36"
            },
            {
                "encoding": "ASCII",
                "offset": 35708,
                "string": ": %s"
            },
            {
                "encoding": "ASCII",
                "offset": 35713,
                "string": "Unknown system error"
            },
            {
                "encoding": "ASCII",
                "offset": 35734,
                "string": "%s: "
            },
            {
                "encoding": "ASCII",
                "offset": 35739,
                "string": "%s:%d: "
            },
            {
                "encoding": "ASCII",
                "offset": 35776,
                "string": "Copyright %s %d Free Software Foundation, Inc."
            },
            {
                "encoding": "ASCII",
                "offset": 35840,
                "string": "literal"
            },
            {
                "encoding": "ASCII",
                "offset": 35848,
                "string": "shell"
            },
            {
                "encoding": "ASCII",
                "offset": 35854,
                "string": "shell-always"
            },
            {
                "encoding": "ASCII",
                "offset": 35869,
                "string": "escape"
            },
            {
                "encoding": "ASCII",
                "offset": 35876,
                "string": "locale"
            },
            {
                "encoding": "ASCII",
                "offset": 35883,
                "string": "clocale"
            },
            {
                "encoding": "ASCII",
                "offset": 36512,
                "string": "memory exhausted"
            },
            {
                "encoding": "ASCII",
                "offset": 36532,
                "string": "<unknown module>: "
            },
            {
                "encoding": "ASCII",
                "offset": 36556,
                "string": "Cygwin runtime failure: "
            },
            {
                "encoding": "ASCII",
                "offset": 36596,
                "string": "  VirtualQuery failed for %d bytes at address %p"
            },
            {
                "encoding": "ASCII",
                "offset": 36648,
                "string": "  Unknown pseudo relocation bit size %d."
            },
            {
                "encoding": "ASCII",
                "offset": 36692,
                "string": "  Unknown pseudo relocation protocol version %d."
            },
            {
                "encoding": "ASCII",
                "offset": 37842,
                "string": "__assert"
            },
            {
                "encoding": "ASCII",
                "offset": 37854,
                "string": "__errno"
            },
            {
                "encoding": "ASCII",
                "offset": 37864,
                "string": "__main"
            },
            {
                "encoding": "ASCII",
                "offset": 37874,
                "string": "_ctype_"
            },
            {
                "encoding": "ASCII",
                "offset": 37884,
                "string": "abort"
            },
            {
                "encoding": "ASCII",
                "offset": 37892,
                "string": "atexit"
            },
            {
                "encoding": "ASCII",
                "offset": 37902,
                "string": "calloc"
            },
            {
                "encoding": "ASCII",
                "offset": 37912,
                "string": "close"
            },
            {
                "encoding": "ASCII",
                "offset": 37920,
                "string": "cygwin_conv_to_posix_path"
            },
            {
                "encoding": "ASCII",
                "offset": 37948,
                "string": "cygwin_internal"
            },
            {
                "encoding": "ASCII",
                "offset": 37966,
                "string": "dll_crt0__FP11per_process"
            },
            {
                "encoding": "ASCII",
                "offset": 37994,
                "string": "exit"
            },
            {
                "encoding": "ASCII",
                "offset": 38002,
                "string": "fclose"
            },
            {
                "encoding": "ASCII",
                "offset": 38012,
                "string": "fflush"
            },
            {
                "encoding": "ASCII",
                "offset": 38022,
                "string": "fputs"
            },
            {
                "encoding": "ASCII",
                "offset": 38030,
                "string": "free"
            },
            {
                "encoding": "ASCII",
                "offset": 38038,
                "string": "fwrite"
            },
            {
                "encoding": "ASCII",
                "offset": 38048,
                "string": "getenv"
            },
            {
                "encoding": "ASCII",
                "offset": 38058,
                "string": "malloc"
            },
            {
                "encoding": "ASCII",
                "offset": 38068,
                "string": "memcpy"
            },
            {
                "encoding": "ASCII",
                "offset": 38078,
                "string": "memset"
            },
            {
                "encoding": "ASCII",
                "offset": 38088,
                "string": "putc"
            },
            {
                "encoding": "ASCII",
                "offset": 38096,
                "string": "read"
            },
            {
                "encoding": "ASCII",
                "offset": 38104,
                "string": "realloc"
            },
            {
                "encoding": "ASCII",
                "offset": 38114,
                "string": "setlocale"
            },
            {
                "encoding": "ASCII",
                "offset": 38126,
                "string": "strchr"
            },
            {
                "encoding": "ASCII",
                "offset": 38136,
                "string": "strcmp"
            },
            {
                "encoding": "ASCII",
                "offset": 38146,
                "string": "strerror"
            },
            {
                "encoding": "ASCII",
                "offset": 38158,
                "string": "strlen"
            },
            {
                "encoding": "ASCII",
                "offset": 38168,
                "string": "strncmp"
            },
            {
                "encoding": "ASCII",
                "offset": 38178,
                "string": "vsnprintf"
            },
            {
                "encoding": "ASCII",
                "offset": 38190,
                "string": "__printf__"
            },
            {
                "encoding": "ASCII",
                "offset": 38206,
                "string": "libintl_bindtextdomain"
            },
            {
                "encoding": "ASCII",
                "offset": 38234,
                "string": "libintl_fprintf"
            },
            {
                "encoding": "ASCII",
                "offset": 38254,
                "string": "libintl_gettext"
            },
            {
                "encoding": "ASCII",
                "offset": 38274,
                "string": "libintl_sprintf"
            },
            {
                "encoding": "ASCII",
                "offset": 38294,
                "string": "libintl_textdomain"
            },
            {
                "encoding": "ASCII",
                "offset": 38318,
                "string": "libintl_vfprintf"
            },
            {
                "encoding": "ASCII",
                "offset": 38338,
                "string": "GetModuleFileNameA"
            },
            {
                "encoding": "ASCII",
                "offset": 38360,
                "string": "GetModuleHandleA"
            },
            {
                "encoding": "ASCII",
                "offset": 38380,
                "string": "GetStdHandle"
            },
            {
                "encoding": "ASCII",
                "offset": 38396,
                "string": "VirtualProtect"
            },
            {
                "encoding": "ASCII",
                "offset": 38414,
                "string": "VirtualQuery"
            },
            {
                "encoding": "ASCII",
                "offset": 38430,
                "string": "WriteFile"
            },
            {
                "encoding": "ASCII",
                "offset": 38564,
                "string": "msys-1.0.dll"
            },
            {
                "encoding": "ASCII",
                "offset": 38608,
                "string": "msys-intl-8.dll"
            },
            {
                "encoding": "ASCII",
                "offset": 38648,
                "string": "KERNEL32.dll"
            }
        ],
        "tight_strings": []
    },
    "is_malicious": false
}