{
    "analysis": {
        "enable_decoded_strings": false,
        "enable_stack_strings": false,
        "enable_static_strings": true,
        "enable_tight_strings": false,
        "functions": {
            "analyzed_decoded_strings": 0,
            "analyzed_stack_strings": 0,
            "analyzed_tight_strings": 0,
            "decoding_function_scores": {},
            "discovered": 0,
            "library": 0
        }
    },
    "metadata": {
        "file_path": "data/unprocessed/DikeDataset-main/files/benign/84a9fc2e2c07213baa97f6bb3f8e21d050705c7fb2144493fd9cb1b805318fce.exe",
        "imagebase": 0,
        "min_length": 4,
        "runtime": {
            "decoded_strings": 0.0,
            "find_features": 0.0,
            "stack_strings": 0.0,
            "start_date": "2023-02-10T15:02:41.652726Z",
            "static_strings": 0.0087,
            "tight_strings": 0.0,
            "total": 0.0087,
            "vivisect": 0.0
        },
        "version": "v2.2.0-0-g783dd8f"
    },
    "strings": {
        "decoded_strings": [],
        "stack_strings": [],
        "static_strings": [
            {
                "encoding": "ASCII",
                "offset": 77,
                "string": "!This program cannot be run in DOS mode."
            },
            {
                "encoding": "ASCII",
                "offset": 376,
                "string": ".text"
            },
            {
                "encoding": "ASCII",
                "offset": 414,
                "string": "P`.data"
            },
            {
                "encoding": "ASCII",
                "offset": 456,
                "string": ".data_cy"
            },
            {
                "encoding": "ASCII",
                "offset": 496,
                "string": ".bss"
            },
            {
                "encoding": "ASCII",
                "offset": 536,
                "string": ".idata"
            },
            {
                "encoding": "ASCII",
                "offset": 1772,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 2070,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 4070,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 4274,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 4503,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 4544,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 5203,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 5695,
                "string": "l[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 6028,
                "string": "l[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 6458,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 7835,
                "string": "l[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 8595,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 16154,
                "string": ";0tP"
            },
            {
                "encoding": "ASCII",
                "offset": 16224,
                "string": ";0t+"
            },
            {
                "encoding": "ASCII",
                "offset": 16305,
                "string": ";0t."
            },
            {
                "encoding": "ASCII",
                "offset": 16538,
                "string": "L[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 16708,
                "string": "L[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 16865,
                "string": "t3~x"
            },
            {
                "encoding": "ASCII",
                "offset": 16912,
                "string": "L[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 17745,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 17885,
                "string": "t\t<-u"
            },
            {
                "encoding": "ASCII",
                "offset": 18319,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 18564,
                "string": "}$@;E"
            },
            {
                "encoding": "ASCII",
                "offset": 18898,
                "string": "9Wtb"
            },
            {
                "encoding": "ASCII",
                "offset": 18918,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 21390,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 22068,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 22133,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 23274,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 23347,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 23832,
                "string": "r\t9u"
            },
            {
                "encoding": "ASCII",
                "offset": 24093,
                "string": "r\t9u"
            },
            {
                "encoding": "ASCII",
                "offset": 26923,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 27350,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 28129,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 28435,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 28977,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 29199,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 29426,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 30262,
                "string": ",0<\t"
            },
            {
                "encoding": "ASCII",
                "offset": 30352,
                "string": "uu;]"
            },
            {
                "encoding": "ASCII",
                "offset": 30438,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 30465,
                "string": "\\[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 33219,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 35584,
                "string": "A:aBbcDdeFfHhIij:LlN:OoS:st:vw::Xx"
            },
            {
                "encoding": "ASCII",
                "offset": 35619,
                "string": "skip-bytes"
            },
            {
                "encoding": "ASCII",
                "offset": 35630,
                "string": "address-radix"
            },
            {
                "encoding": "ASCII",
                "offset": 35644,
                "string": "read-bytes"
            },
            {
                "encoding": "ASCII",
                "offset": 35655,
                "string": "format"
            },
            {
                "encoding": "ASCII",
                "offset": 35662,
                "string": "output-duplicates"
            },
            {
                "encoding": "ASCII",
                "offset": 35680,
                "string": "strings"
            },
            {
                "encoding": "ASCII",
                "offset": 35688,
                "string": "traditional"
            },
            {
                "encoding": "ASCII",
                "offset": 35700,
                "string": "width"
            },
            {
                "encoding": "ASCII",
                "offset": 35706,
                "string": "help"
            },
            {
                "encoding": "ASCII",
                "offset": 35711,
                "string": "version"
            },
            {
                "encoding": "ASCII",
                "offset": 35920,
                "string": "Try `%s --help' for more information."
            },
            {
                "encoding": "ASCII",
                "offset": 35960,
                "string": "Usage: %s [OPTION]... [FILE]..."
            },
            {
                "encoding": "ASCII",
                "offset": 35992,
                "string": "  or:  %s [-abcdfilosx]... [FILE] [[+]OFFSET[.][b]]"
            },
            {
                "encoding": "ASCII",
                "offset": 36044,
                "string": "  or:  %s --traditional [OPTION]... [FILE] [[+]OFFSET[.][b] [+][LABEL][.][b]]"
            },
            {
                "encoding": "ASCII",
                "offset": 36125,
                "string": "Write an unambiguous representation, octal bytes by default,"
            },
            {
                "encoding": "ASCII",
                "offset": 36186,
                "string": "of FILE to standard output.  With more than one FILE argument,"
            },
            {
                "encoding": "ASCII",
                "offset": 36249,
                "string": "concatenate them in the listed order to form the input."
            },
            {
                "encoding": "ASCII",
                "offset": 36305,
                "string": "With no FILE, or when FILE is -, read standard input."
            },
            {
                "encoding": "ASCII",
                "offset": 36364,
                "string": "All arguments to long options are mandatory for short options."
            },
            {
                "encoding": "ASCII",
                "offset": 36428,
                "string": "  -A, --address-radix=RADIX   decide how file offsets are printed"
            },
            {
                "encoding": "ASCII",
                "offset": 36494,
                "string": "  -j, --skip-bytes=BYTES      skip BYTES input bytes first"
            },
            {
                "encoding": "ASCII",
                "offset": 36556,
                "string": "  -N, --read-bytes=BYTES      limit dump to BYTES input bytes"
            },
            {
                "encoding": "ASCII",
                "offset": 36618,
                "string": "  -S, --strings[=BYTES]       output strings of at least BYTES graphic chars"
            },
            {
                "encoding": "ASCII",
                "offset": 36695,
                "string": "  -t, --format=TYPE           select output format or formats"
            },
            {
                "encoding": "ASCII",
                "offset": 36757,
                "string": "  -v, --output-duplicates     do not use * to mark line suppression"
            },
            {
                "encoding": "ASCII",
                "offset": 36825,
                "string": "  -w, --width[=BYTES]         output BYTES bytes per output line"
            },
            {
                "encoding": "ASCII",
                "offset": 36890,
                "string": "      --traditional           accept arguments in traditional form"
            },
            {
                "encoding": "ASCII",
                "offset": 36960,
                "string": "      --help     display this help and exit"
            },
            {
                "encoding": "ASCII",
                "offset": 37008,
                "string": "      --version  output version information and exit"
            },
            {
                "encoding": "ASCII",
                "offset": 37065,
                "string": "Traditional format specifications may be intermixed; they accumulate:"
            },
            {
                "encoding": "ASCII",
                "offset": 37135,
                "string": "  -a   same as -t a,  select named characters"
            },
            {
                "encoding": "ASCII",
                "offset": 37181,
                "string": "  -b   same as -t o1, select octal bytes"
            },
            {
                "encoding": "ASCII",
                "offset": 37222,
                "string": "  -c   same as -t c,  select ASCII characters or backslash escapes"
            },
            {
                "encoding": "ASCII",
                "offset": 37289,
                "string": "  -d   same as -t u2, select unsigned decimal 2-byte units"
            },
            {
                "encoding": "ASCII",
                "offset": 37352,
                "string": "  -f   same as -t fF, select floats"
            },
            {
                "encoding": "ASCII",
                "offset": 37388,
                "string": "  -i   same as -t dI, select decimal ints"
            },
            {
                "encoding": "ASCII",
                "offset": 37430,
                "string": "  -l   same as -t dL, select decimal longs"
            },
            {
                "encoding": "ASCII",
                "offset": 37473,
                "string": "  -o   same as -t o2, select octal 2-byte units"
            },
            {
                "encoding": "ASCII",
                "offset": 37521,
                "string": "  -s   same as -t d2, select decimal 2-byte units"
            },
            {
                "encoding": "ASCII",
                "offset": 37571,
                "string": "  -x   same as -t x2, select hexadecimal 2-byte units"
            },
            {
                "encoding": "ASCII",
                "offset": 37629,
                "string": "If first and second call formats both apply, the second format is assumed"
            },
            {
                "encoding": "ASCII",
                "offset": 37703,
                "string": "if the last operand begins with + or (if there are 2 operands) a digit."
            },
            {
                "encoding": "ASCII",
                "offset": 37775,
                "string": "An OFFSET operand means -j OFFSET.  LABEL is the pseudo-address"
            },
            {
                "encoding": "ASCII",
                "offset": 37839,
                "string": "at first byte printed, incremented when dump is progressing."
            },
            {
                "encoding": "ASCII",
                "offset": 37900,
                "string": "For OFFSET and LABEL, a 0x or 0X prefix indicates hexadecimal;"
            },
            {
                "encoding": "ASCII",
                "offset": 37963,
                "string": "suffixes may be . for octal and b for multiply by 512."
            },
            {
                "encoding": "ASCII",
                "offset": 38019,
                "string": "TYPE is made up of one or more of these specifications:"
            },
            {
                "encoding": "ASCII",
                "offset": 38076,
                "string": "  a          named character"
            },
            {
                "encoding": "ASCII",
                "offset": 38105,
                "string": "  c          ASCII character or backslash escape"
            },
            {
                "encoding": "ASCII",
                "offset": 38156,
                "string": "  d[SIZE]    signed decimal, SIZE bytes per integer"
            },
            {
                "encoding": "ASCII",
                "offset": 38208,
                "string": "  f[SIZE]    floating point, SIZE bytes per integer"
            },
            {
                "encoding": "ASCII",
                "offset": 38260,
                "string": "  o[SIZE]    octal, SIZE bytes per integer"
            },
            {
                "encoding": "ASCII",
                "offset": 38303,
                "string": "  u[SIZE]    unsigned decimal, SIZE bytes per integer"
            },
            {
                "encoding": "ASCII",
                "offset": 38357,
                "string": "  x[SIZE]    hexadecimal, SIZE bytes per integer"
            },
            {
                "encoding": "ASCII",
                "offset": 38409,
                "string": "SIZE is a number.  For TYPE in doux, SIZE may also be C for"
            },
            {
                "encoding": "ASCII",
                "offset": 38469,
                "string": "sizeof(char), S for sizeof(short), I for sizeof(int) or L for"
            },
            {
                "encoding": "ASCII",
                "offset": 38531,
                "string": "sizeof(long).  If TYPE is f, SIZE may also be F for sizeof(float), D"
            },
            {
                "encoding": "ASCII",
                "offset": 38600,
                "string": "for sizeof(double) or L for sizeof(long double)."
            },
            {
                "encoding": "ASCII",
                "offset": 38653,
                "string": "RADIX is d for decimal, o for octal, x for hexadecimal or n for none."
            },
            {
                "encoding": "ASCII",
                "offset": 38723,
                "string": "BYTES is hexadecimal with 0x or 0X prefix, it is multiplied by 512"
            },
            {
                "encoding": "ASCII",
                "offset": 38790,
                "string": "with b suffix, by 1024 with k and by 1048576 with m.  Adding a z suffix to"
            },
            {
                "encoding": "ASCII",
                "offset": 38865,
                "string": "any type adds a display of printable characters to the end of each line"
            },
            {
                "encoding": "ASCII",
                "offset": 38937,
                "string": "of output.  "
            },
            {
                "encoding": "ASCII",
                "offset": 38952,
                "string": "--string without a number implies 3.  --width without a number"
            },
            {
                "encoding": "ASCII",
                "offset": 39015,
                "string": "implies 32.  By default, od uses -A o -t d2 -w 16."
            },
            {
                "encoding": "ASCII",
                "offset": 39068,
                "string": "Report bugs to <%s>."
            },
            {
                "encoding": "ASCII",
                "offset": 39090,
                "string": "bug-coreutils@gnu.org"
            },
            {
                "encoding": "ASCII",
                "offset": 39112,
                "string": "invalid character `%c' in type string %s"
            },
            {
                "encoding": "ASCII",
                "offset": 39156,
                "string": "invalid type string %s;"
            },
            {
                "encoding": "ASCII",
                "offset": 39180,
                "string": "this system doesn't provide a %lu-byte integral type"
            },
            {
                "encoding": "ASCII",
                "offset": 39236,
                "string": "/usr/src/coreutils/coreutils-5.97/src/od.c"
            },
            {
                "encoding": "ASCII",
                "offset": 39279,
                "string": "tspec != NULL"
            },
            {
                "encoding": "ASCII",
                "offset": 39296,
                "string": "invalid type string %s;"
            },
            {
                "encoding": "ASCII",
                "offset": 39320,
                "string": "this system doesn't provide a %lu-byte floating point type"
            },
            {
                "encoding": "ASCII",
                "offset": 39388,
                "string": " %%%d%s"
            },
            {
                "encoding": "ASCII",
                "offset": 39396,
                "string": " %%%d.%de"
            },
            {
                "encoding": "ASCII",
                "offset": 39406,
                "string": "invalid type string %s"
            },
            {
                "encoding": "ASCII",
                "offset": 39438,
                "string": " %%0%d%s"
            },
            {
                "encoding": "ASCII",
                "offset": 39447,
                "string": " %%%d.%dLe"
            },
            {
                "encoding": "ASCII",
                "offset": 39468,
                "string": "strlen (tspec->fmt_string) < FMT_BYTES_ALLOCATED"
            },
            {
                "encoding": "ASCII",
                "offset": 39648,
                "string": "  %c"
            },
            {
                "encoding": "ASCII",
                "offset": 39653,
                "string": "%03o"
            },
            {
                "encoding": "ASCII",
                "offset": 39658,
                "string": " %3s"
            },
            {
                "encoding": "ASCII",
                "offset": 39756,
                "string": "standard input"
            },
            {
                "encoding": "ASCII",
                "offset": 39777,
                "string": "write error"
            },
            {
                "encoding": "ASCII",
                "offset": 39789,
                "string": "%s: read error"
            },
            {
                "encoding": "ASCII",
                "offset": 39804,
                "string": "cannot skip past end of combined input"
            },
            {
                "encoding": "ASCII",
                "offset": 39843,
                "string": "0123456789abcdef"
            },
            {
                "encoding": "ASCII",
                "offset": 39872,
                "string": "0 < n && n <= bytes_per_block"
            },
            {
                "encoding": "ASCII",
                "offset": 39904,
                "string": "n_bytes_read == bytes_per_block"
            },
            {
                "encoding": "ASCII",
                "offset": 39988,
                "string": "coreutils"
            },
            {
                "encoding": "ASCII",
                "offset": 39998,
                "string": "/usr/share/locale"
            },
            {
                "encoding": "ASCII",
                "offset": 40019,
                "string": "width specification"
            },
            {
                "encoding": "ASCII",
                "offset": 40039,
                "string": "%s `%s' too large"
            },
            {
                "encoding": "ASCII",
                "offset": 40070,
                "string": "skip argument"
            },
            {
                "encoding": "ASCII",
                "offset": 40112,
                "string": "invalid output address radix `%c'; it must be one character from [doxn]"
            },
            {
                "encoding": "ASCII",
                "offset": 40184,
                "string": "Jim Meyering"
            },
            {
                "encoding": "ASCII",
                "offset": 40197,
                "string": "5.97"
            },
            {
                "encoding": "ASCII",
                "offset": 40205,
                "string": "GNU coreutils"
            },
            {
                "encoding": "ASCII",
                "offset": 40219,
                "string": "limit argument"
            },
            {
                "encoding": "ASCII",
                "offset": 40237,
                "string": "s != next"
            },
            {
                "encoding": "ASCII",
                "offset": 40247,
                "string": "minimum string length"
            },
            {
                "encoding": "ASCII",
                "offset": 40269,
                "string": "%s is too large"
            },
            {
                "encoding": "ASCII",
                "offset": 40285,
                "string": "invalid %s `%s'"
            },
            {
                "encoding": "ASCII",
                "offset": 40301,
                "string": "s != NULL"
            },
            {
                "encoding": "ASCII",
                "offset": 40312,
                "string": "invalid character following %s in `%s'"
            },
            {
                "encoding": "ASCII",
                "offset": 40352,
                "string": "no type may be specified when dumping strings"
            },
            {
                "encoding": "ASCII",
                "offset": 40400,
                "string": "skip-bytes + read-bytes is too large"
            },
            {
                "encoding": "ASCII",
                "offset": 40440,
                "string": "warning: invalid width %lu; using %d instead"
            },
            {
                "encoding": "ASCII",
                "offset": 40485,
                "string": "extra operand %s"
            },
            {
                "encoding": "ASCII",
                "offset": 40504,
                "string": "Compatibility mode supports at most one file."
            },
            {
                "encoding": "ASCII",
                "offset": 41603,
                "string": "POSIXLY_CORRECT"
            },
            {
                "encoding": "ASCII",
                "offset": 41620,
                "string": "%s: unrecognized option `%c%s'"
            },
            {
                "encoding": "ASCII",
                "offset": 41653,
                "string": "%s: illegal option -- %c"
            },
            {
                "encoding": "ASCII",
                "offset": 41680,
                "string": "%s: option `%c%s' doesn't allow an argument"
            },
            {
                "encoding": "ASCII",
                "offset": 41725,
                "string": "%s: invalid option -- %c"
            },
            {
                "encoding": "ASCII",
                "offset": 41752,
                "string": "%s: option `%s' requires an argument"
            },
            {
                "encoding": "ASCII",
                "offset": 41790,
                "string": "%s: option `%s' is ambiguous"
            },
            {
                "encoding": "ASCII",
                "offset": 41820,
                "string": "%s: option requires an argument -- %c"
            },
            {
                "encoding": "ASCII",
                "offset": 41860,
                "string": "%s: unrecognized option `--%s'"
            },
            {
                "encoding": "ASCII",
                "offset": 41892,
                "string": "%s: option `-W %s' is ambiguous"
            },
            {
                "encoding": "ASCII",
                "offset": 41928,
                "string": "%s: option `--%s' doesn't allow an argument"
            },
            {
                "encoding": "ASCII",
                "offset": 41976,
                "string": "%s: option `-W %s' doesn't allow an argument"
            },
            {
                "encoding": "ASCII",
                "offset": 42024,
                "string": "%s (%s) %s"
            },
            {
                "encoding": "ASCII",
                "offset": 42041,
                "string": "This is free software.  You may redistribute copies of it under the terms of"
            },
            {
                "encoding": "ASCII",
                "offset": 42118,
                "string": "the GNU General Public License <http://www.gnu.org/licenses/gpl.html>."
            },
            {
                "encoding": "ASCII",
                "offset": 42189,
                "string": "There is NO WARRANTY, to the extent permitted by law."
            },
            {
                "encoding": "ASCII",
                "offset": 42248,
                "string": "Written by %s, %s, %s,"
            },
            {
                "encoding": "ASCII",
                "offset": 42271,
                "string": "%s, %s, %s, %s,"
            },
            {
                "encoding": "ASCII",
                "offset": 42287,
                "string": "%s, %s, and others."
            },
            {
                "encoding": "ASCII",
                "offset": 42308,
                "string": "Written by %s, %s, %s,"
            },
            {
                "encoding": "ASCII",
                "offset": 42331,
                "string": "%s, %s, %s, %s,"
            },
            {
                "encoding": "ASCII",
                "offset": 42347,
                "string": "%s, and %s."
            },
            {
                "encoding": "ASCII",
                "offset": 42360,
                "string": "Written by %s, %s, %s,"
            },
            {
                "encoding": "ASCII",
                "offset": 42383,
                "string": "%s, %s, %s, %s,"
            },
            {
                "encoding": "ASCII",
                "offset": 42399,
                "string": "and %s."
            },
            {
                "encoding": "ASCII",
                "offset": 42408,
                "string": "Written by %s, %s, %s,"
            },
            {
                "encoding": "ASCII",
                "offset": 42431,
                "string": "%s, %s, %s, and %s."
            },
            {
                "encoding": "ASCII",
                "offset": 42452,
                "string": "Written by %s, %s, %s,"
            },
            {
                "encoding": "ASCII",
                "offset": 42475,
                "string": "%s, %s, and %s."
            },
            {
                "encoding": "ASCII",
                "offset": 42492,
                "string": "Written by %s, %s, %s,"
            },
            {
                "encoding": "ASCII",
                "offset": 42515,
                "string": "%s, and %s."
            },
            {
                "encoding": "ASCII",
                "offset": 42528,
                "string": "Written by %s, %s, %s,"
            },
            {
                "encoding": "ASCII",
                "offset": 42551,
                "string": "and %s."
            },
            {
                "encoding": "ASCII",
                "offset": 42560,
                "string": "Written by %s, %s, and %s."
            },
            {
                "encoding": "ASCII",
                "offset": 42588,
                "string": "Written by %s and %s."
            },
            {
                "encoding": "ASCII",
                "offset": 42611,
                "string": "Written by %s."
            },
            {
                "encoding": "ASCII",
                "offset": 42627,
                "string": "%s %s"
            },
            {
                "encoding": "ASCII",
                "offset": 42676,
                "string": "write error"
            },
            {
                "encoding": "ASCII",
                "offset": 42688,
                "string": "%s: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 42700,
                "string": "/usr/src/coreutils/coreutils-5.97/lib/xstrtol.c"
            },
            {
                "encoding": "ASCII",
                "offset": 42748,
                "string": "0 <= strtol_base && strtol_base <= 36"
            },
            {
                "encoding": "ASCII",
                "offset": 43004,
                "string": ": %s"
            },
            {
                "encoding": "ASCII",
                "offset": 43009,
                "string": "Unknown system error"
            },
            {
                "encoding": "ASCII",
                "offset": 43030,
                "string": "%s: "
            },
            {
                "encoding": "ASCII",
                "offset": 43035,
                "string": "%s:%d: "
            },
            {
                "encoding": "ASCII",
                "offset": 43072,
                "string": "Copyright %s %d Free Software Foundation, Inc."
            },
            {
                "encoding": "ASCII",
                "offset": 43136,
                "string": "literal"
            },
            {
                "encoding": "ASCII",
                "offset": 43144,
                "string": "shell"
            },
            {
                "encoding": "ASCII",
                "offset": 43150,
                "string": "shell-always"
            },
            {
                "encoding": "ASCII",
                "offset": 43165,
                "string": "escape"
            },
            {
                "encoding": "ASCII",
                "offset": 43172,
                "string": "locale"
            },
            {
                "encoding": "ASCII",
                "offset": 43179,
                "string": "clocale"
            },
            {
                "encoding": "ASCII",
                "offset": 43808,
                "string": "memory exhausted"
            },
            {
                "encoding": "ASCII",
                "offset": 43828,
                "string": "<unknown module>: "
            },
            {
                "encoding": "ASCII",
                "offset": 43852,
                "string": "Cygwin runtime failure: "
            },
            {
                "encoding": "ASCII",
                "offset": 43892,
                "string": "  VirtualQuery failed for %d bytes at address %p"
            },
            {
                "encoding": "ASCII",
                "offset": 43944,
                "string": "  Unknown pseudo relocation bit size %d."
            },
            {
                "encoding": "ASCII",
                "offset": 43988,
                "string": "  Unknown pseudo relocation protocol version %d."
            },
            {
                "encoding": "ASCII",
                "offset": 45562,
                "string": "__assert"
            },
            {
                "encoding": "ASCII",
                "offset": 45574,
                "string": "__errno"
            },
            {
                "encoding": "ASCII",
                "offset": 45584,
                "string": "__main"
            },
            {
                "encoding": "ASCII",
                "offset": 45594,
                "string": "_ctype_"
            },
            {
                "encoding": "ASCII",
                "offset": 45604,
                "string": "abort"
            },
            {
                "encoding": "ASCII",
                "offset": 45612,
                "string": "atexit"
            },
            {
                "encoding": "ASCII",
                "offset": 45622,
                "string": "calloc"
            },
            {
                "encoding": "ASCII",
                "offset": 45632,
                "string": "cygwin_conv_to_posix_path"
            },
            {
                "encoding": "ASCII",
                "offset": 45660,
                "string": "cygwin_internal"
            },
            {
                "encoding": "ASCII",
                "offset": 45678,
                "string": "dll_crt0__FP11per_process"
            },
            {
                "encoding": "ASCII",
                "offset": 45706,
                "string": "exit"
            },
            {
                "encoding": "ASCII",
                "offset": 45714,
                "string": "fclose"
            },
            {
                "encoding": "ASCII",
                "offset": 45724,
                "string": "fflush"
            },
            {
                "encoding": "ASCII",
                "offset": 45734,
                "string": "fgetc"
            },
            {
                "encoding": "ASCII",
                "offset": 45742,
                "string": "fileno"
            },
            {
                "encoding": "ASCII",
                "offset": 45752,
                "string": "fopen"
            },
            {
                "encoding": "ASCII",
                "offset": 45760,
                "string": "fputs"
            },
            {
                "encoding": "ASCII",
                "offset": 45768,
                "string": "fread"
            },
            {
                "encoding": "ASCII",
                "offset": 45776,
                "string": "free"
            },
            {
                "encoding": "ASCII",
                "offset": 45784,
                "string": "fseek"
            },
            {
                "encoding": "ASCII",
                "offset": 45792,
                "string": "fstat"
            },
            {
                "encoding": "ASCII",
                "offset": 45800,
                "string": "fwrite"
            },
            {
                "encoding": "ASCII",
                "offset": 45810,
                "string": "getenv"
            },
            {
                "encoding": "ASCII",
                "offset": 45820,
                "string": "malloc"
            },
            {
                "encoding": "ASCII",
                "offset": 45830,
                "string": "memcpy"
            },
            {
                "encoding": "ASCII",
                "offset": 45840,
                "string": "memset"
            },
            {
                "encoding": "ASCII",
                "offset": 45850,
                "string": "putc"
            },
            {
                "encoding": "ASCII",
                "offset": 45858,
                "string": "realloc"
            },
            {
                "encoding": "ASCII",
                "offset": 45868,
                "string": "setlocale"
            },
            {
                "encoding": "ASCII",
                "offset": 45880,
                "string": "setvbuf"
            },
            {
                "encoding": "ASCII",
                "offset": 45890,
                "string": "strchr"
            },
            {
                "encoding": "ASCII",
                "offset": 45900,
                "string": "strcmp"
            },
            {
                "encoding": "ASCII",
                "offset": 45910,
                "string": "strerror"
            },
            {
                "encoding": "ASCII",
                "offset": 45922,
                "string": "strlen"
            },
            {
                "encoding": "ASCII",
                "offset": 45932,
                "string": "strncmp"
            },
            {
                "encoding": "ASCII",
                "offset": 45942,
                "string": "vsnprintf"
            },
            {
                "encoding": "ASCII",
                "offset": 45954,
                "string": "__printf__"
            },
            {
                "encoding": "ASCII",
                "offset": 45970,
                "string": "libintl_bindtextdomain"
            },
            {
                "encoding": "ASCII",
                "offset": 45998,
                "string": "libintl_fprintf"
            },
            {
                "encoding": "ASCII",
                "offset": 46018,
                "string": "libintl_gettext"
            },
            {
                "encoding": "ASCII",
                "offset": 46038,
                "string": "libintl_sprintf"
            },
            {
                "encoding": "ASCII",
                "offset": 46058,
                "string": "libintl_textdomain"
            },
            {
                "encoding": "ASCII",
                "offset": 46082,
                "string": "libintl_vfprintf"
            },
            {
                "encoding": "ASCII",
                "offset": 46102,
                "string": "GetModuleFileNameA"
            },
            {
                "encoding": "ASCII",
                "offset": 46124,
                "string": "GetModuleHandleA"
            },
            {
                "encoding": "ASCII",
                "offset": 46144,
                "string": "GetStdHandle"
            },
            {
                "encoding": "ASCII",
                "offset": 46160,
                "string": "VirtualProtect"
            },
            {
                "encoding": "ASCII",
                "offset": 46178,
                "string": "VirtualQuery"
            },
            {
                "encoding": "ASCII",
                "offset": 46194,
                "string": "WriteFile"
            },
            {
                "encoding": "ASCII",
                "offset": 46348,
                "string": "msys-1.0.dll"
            },
            {
                "encoding": "ASCII",
                "offset": 46392,
                "string": "msys-intl-8.dll"
            },
            {
                "encoding": "ASCII",
                "offset": 46432,
                "string": "KERNEL32.dll"
            }
        ],
        "tight_strings": []
    },
    "is_malicious": false
}