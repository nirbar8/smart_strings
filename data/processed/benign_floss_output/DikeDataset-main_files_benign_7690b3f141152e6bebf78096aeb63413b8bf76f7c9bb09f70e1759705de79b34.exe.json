{
    "analysis": {
        "enable_decoded_strings": false,
        "enable_stack_strings": false,
        "enable_static_strings": true,
        "enable_tight_strings": false,
        "functions": {
            "analyzed_decoded_strings": 0,
            "analyzed_stack_strings": 0,
            "analyzed_tight_strings": 0,
            "decoding_function_scores": {},
            "discovered": 0,
            "library": 0
        }
    },
    "metadata": {
        "file_path": "DikeDataset-main/files/benign/7690b3f141152e6bebf78096aeb63413b8bf76f7c9bb09f70e1759705de79b34.exe",
        "imagebase": 0,
        "min_length": 4,
        "runtime": {
            "decoded_strings": 0.0,
            "find_features": 0.0,
            "stack_strings": 0.0,
            "start_date": "2023-02-10T03:49:03.642207Z",
            "static_strings": 0.1029,
            "tight_strings": 0.0,
            "total": 0.1029,
            "vivisect": 0.0
        },
        "version": "v2.2.0-0-g783dd8f"
    },
    "strings": {
        "decoded_strings": [],
        "stack_strings": [],
        "static_strings": [
            {
                "encoding": "ASCII",
                "offset": 77,
                "string": "!This program cannot be run in DOS mode."
            },
            {
                "encoding": "ASCII",
                "offset": 376,
                "string": ".text"
            },
            {
                "encoding": "ASCII",
                "offset": 414,
                "string": "P`.data"
            },
            {
                "encoding": "ASCII",
                "offset": 456,
                "string": ".data_cy"
            },
            {
                "encoding": "ASCII",
                "offset": 496,
                "string": ".bss"
            },
            {
                "encoding": "ASCII",
                "offset": 536,
                "string": ".idata"
            },
            {
                "encoding": "ASCII",
                "offset": 2257,
                "string": "$ bG"
            },
            {
                "encoding": "ASCII",
                "offset": 2635,
                "string": "$$bG"
            },
            {
                "encoding": "ASCII",
                "offset": 2660,
                "string": "$3bG"
            },
            {
                "encoding": "ASCII",
                "offset": 2696,
                "string": "$8bG"
            },
            {
                "encoding": "ASCII",
                "offset": 3056,
                "string": "$PbG"
            },
            {
                "encoding": "ASCII",
                "offset": 3670,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 3730,
                "string": "$sbG"
            },
            {
                "encoding": "ASCII",
                "offset": 3784,
                "string": "$PbG"
            },
            {
                "encoding": "ASCII",
                "offset": 3994,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 4811,
                "string": "$\\cG"
            },
            {
                "encoding": "ASCII",
                "offset": 4998,
                "string": "$gcG"
            },
            {
                "encoding": "ASCII",
                "offset": 5066,
                "string": "$pcG"
            },
            {
                "encoding": "ASCII",
                "offset": 5118,
                "string": "$tcG"
            },
            {
                "encoding": "ASCII",
                "offset": 5260,
                "string": "$tcG"
            },
            {
                "encoding": "ASCII",
                "offset": 5536,
                "string": "-t01"
            },
            {
                "encoding": "ASCII",
                "offset": 5727,
                "string": "$pcG"
            },
            {
                "encoding": "ASCII",
                "offset": 5739,
                "string": "$gcG"
            },
            {
                "encoding": "ASCII",
                "offset": 6346,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 6507,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 6826,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 7037,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 7373,
                "string": "$'dG"
            },
            {
                "encoding": "ASCII",
                "offset": 7406,
                "string": "$3dG"
            },
            {
                "encoding": "ASCII",
                "offset": 7737,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 7755,
                "string": "$'dG"
            },
            {
                "encoding": "ASCII",
                "offset": 7778,
                "string": "$3dG"
            },
            {
                "encoding": "ASCII",
                "offset": 7842,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 8110,
                "string": "$DdG"
            },
            {
                "encoding": "ASCII",
                "offset": 8152,
                "string": "$cdG"
            },
            {
                "encoding": "ASCII",
                "offset": 8964,
                "string": "/bin"
            },
            {
                "encoding": "ASCII",
                "offset": 9099,
                "string": "/bin"
            },
            {
                "encoding": "ASCII",
                "offset": 10051,
                "string": "$(eG"
            },
            {
                "encoding": "ASCII",
                "offset": 10347,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 10480,
                "string": "$0fG"
            },
            {
                "encoding": "ASCII",
                "offset": 10493,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 10689,
                "string": "u1C;"
            },
            {
                "encoding": "ASCII",
                "offset": 10919,
                "string": "$\\fG"
            },
            {
                "encoding": "ASCII",
                "offset": 11448,
                "string": "$hfG"
            },
            {
                "encoding": "ASCII",
                "offset": 13039,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 20844,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 21010,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 21159,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 21700,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 22724,
                "string": "\\[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 22745,
                "string": "\\[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 23281,
                "string": "&t,~1"
            },
            {
                "encoding": "ASCII",
                "offset": 23293,
                "string": ";t ]1"
            },
            {
                "encoding": "ASCII",
                "offset": 23477,
                "string": ";]tG"
            },
            {
                "encoding": "ASCII",
                "offset": 23769,
                "string": ";dtg"
            },
            {
                "encoding": "ASCII",
                "offset": 24668,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 25148,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 25636,
                "string": "L[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 26947,
                "string": "L[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 27889,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 28520,
                "string": ":!ut"
            },
            {
                "encoding": "ASCII",
                "offset": 30645,
                "string": "L[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 32821,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 32979,
                "string": "L[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 33469,
                "string": "L[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 35549,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 38473,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 38573,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 39498,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 39599,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 39992,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 40857,
                "string": ",0<\tw"
            },
            {
                "encoding": "ASCII",
                "offset": 40888,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 41010,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 41040,
                "string": ",0<\tw"
            },
            {
                "encoding": "ASCII",
                "offset": 41253,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 41271,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 41782,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 41826,
                "string": "<0]u"
            },
            {
                "encoding": "ASCII",
                "offset": 42370,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 42438,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 43243,
                "string": ";/t\""
            },
            {
                "encoding": "ASCII",
                "offset": 43744,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 43817,
                "string": ",0<\tv+"
            },
            {
                "encoding": "ASCII",
                "offset": 43860,
                "string": ",0<\tw"
            },
            {
                "encoding": "ASCII",
                "offset": 44209,
                "string": "\"t)C"
            },
            {
                "encoding": "ASCII",
                "offset": 44425,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 44482,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 44553,
                "string": ";~t3"
            },
            {
                "encoding": "ASCII",
                "offset": 44851,
                "string": "St_B9"
            },
            {
                "encoding": "ASCII",
                "offset": 44994,
                "string": "t=f9"
            },
            {
                "encoding": "ASCII",
                "offset": 45741,
                "string": "\"t C9"
            },
            {
                "encoding": "ASCII",
                "offset": 45754,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 46671,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 46850,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 47987,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 48375,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 50464,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 53774,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 54495,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 55580,
                "string": ";\ttP"
            },
            {
                "encoding": "ASCII",
                "offset": 55960,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 56577,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 57573,
                "string": "u\tX[]"
            },
            {
                "encoding": "ASCII",
                "offset": 61073,
                "string": "gfff"
            },
            {
                "encoding": "ASCII",
                "offset": 61162,
                "string": "gffff"
            },
            {
                "encoding": "ASCII",
                "offset": 61320,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 61530,
                "string": "\\[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 61582,
                "string": ",0<\tw"
            },
            {
                "encoding": "ASCII",
                "offset": 62669,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 62800,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 63309,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 63899,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 65149,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 65510,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 66370,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 66635,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 66921,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 67258,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 67395,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 67872,
                "string": "|_~X9U"
            },
            {
                "encoding": "ASCII",
                "offset": 67959,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 69063,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 69531,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 69961,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 70363,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 70808,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 73182,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 73383,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 74584,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 74714,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 75968,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 77416,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 78225,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 78274,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 78514,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 78915,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 80474,
                "string": "5(*G"
            },
            {
                "encoding": "ASCII",
                "offset": 80763,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 82575,
                "string": "0[^]"
            },
            {
                "encoding": "ASCII",
                "offset": 82592,
                "string": "gfff"
            },
            {
                "encoding": "ASCII",
                "offset": 83473,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 83865,
                "string": "\\[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 84167,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 87875,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 87904,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 88040,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 89665,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 89830,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 91077,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 91152,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 91883,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 92006,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 92591,
                "string": "t19C"
            },
            {
                "encoding": "ASCII",
                "offset": 92767,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 92933,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 92943,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 93173,
                "string": "to;U"
            },
            {
                "encoding": "ASCII",
                "offset": 93299,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 93864,
                "string": "$@zA"
            },
            {
                "encoding": "ASCII",
                "offset": 94429,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 94816,
                "string": "ta\tQ"
            },
            {
                "encoding": "ASCII",
                "offset": 95729,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 95976,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 96147,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 96440,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 96644,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 98924,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 99194,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 99375,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 99452,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 100032,
                "string": "<etT"
            },
            {
                "encoding": "ASCII",
                "offset": 100115,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 100946,
                "string": "L[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 106740,
                "string": "/tx~0"
            },
            {
                "encoding": "ASCII",
                "offset": 107451,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 107610,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 108099,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 108218,
                "string": "<tZ1"
            },
            {
                "encoding": "ASCII",
                "offset": 108343,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 108441,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 108567,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 108825,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 108869,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 110214,
                "string": "tH< "
            },
            {
                "encoding": "ASCII",
                "offset": 110329,
                "string": "l[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 110793,
                "string": "l[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 110803,
                "string": ",0<\tv>"
            },
            {
                "encoding": "ASCII",
                "offset": 111222,
                "string": ";=t?"
            },
            {
                "encoding": "ASCII",
                "offset": 111247,
                "string": ";=tX"
            },
            {
                "encoding": "ASCII",
                "offset": 111450,
                "string": "=tmK"
            },
            {
                "encoding": "ASCII",
                "offset": 111534,
                "string": "tU< "
            },
            {
                "encoding": "ASCII",
                "offset": 112133,
                "string": ",0<\t"
            },
            {
                "encoding": "ASCII",
                "offset": 112328,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 113374,
                "string": "<unk"
            },
            {
                "encoding": "ASCII",
                "offset": 113381,
                "string": "nownf"
            },
            {
                "encoding": "ASCII",
                "offset": 113588,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 114007,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 115382,
                "string": "u(H9"
            },
            {
                "encoding": "ASCII",
                "offset": 116144,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 116869,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 117210,
                "string": "u*C9"
            },
            {
                "encoding": "ASCII",
                "offset": 117751,
                "string": "t'9H"
            },
            {
                "encoding": "ASCII",
                "offset": 117976,
                "string": "t+9r"
            },
            {
                "encoding": "ASCII",
                "offset": 118814,
                "string": "Done"
            },
            {
                "encoding": "ASCII",
                "offset": 119719,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 119842,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 119901,
                "string": "tx95l"
            },
            {
                "encoding": "ASCII",
                "offset": 120643,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 120923,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 121489,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 121585,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 121908,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 122326,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 123396,
                "string": "t/95l"
            },
            {
                "encoding": "ASCII",
                "offset": 123590,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 123853,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 124284,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 124321,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 124573,
                "string": "t#Hy"
            },
            {
                "encoding": "ASCII",
                "offset": 124605,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 124639,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 125368,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 125800,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 126313,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 126463,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 127169,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 127535,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 127604,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 128167,
                "string": "F95@"
            },
            {
                "encoding": "ASCII",
                "offset": 128261,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 128800,
                "string": "t.C9"
            },
            {
                "encoding": "ASCII",
                "offset": 129038,
                "string": "tsr."
            },
            {
                "encoding": "ASCII",
                "offset": 131490,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 131529,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 131774,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 131939,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 132368,
                "string": "tlC9"
            },
            {
                "encoding": "ASCII",
                "offset": 132434,
                "string": "t?C9"
            },
            {
                "encoding": "ASCII",
                "offset": 133101,
                "string": "\"t'@"
            },
            {
                "encoding": "ASCII",
                "offset": 133121,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 133199,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 133307,
                "string": "\"tKF"
            },
            {
                "encoding": "ASCII",
                "offset": 133327,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 133808,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 133851,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 134088,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 134181,
                "string": ">`CF"
            },
            {
                "encoding": "ASCII",
                "offset": 134532,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 134941,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 135018,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 135680,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 136422,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 136632,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 136676,
                "string": "<$ts"
            },
            {
                "encoding": "ASCII",
                "offset": 137034,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 137089,
                "string": "<3\\t1"
            },
            {
                "encoding": "ASCII",
                "offset": 137132,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 137241,
                "string": "t7;]"
            },
            {
                "encoding": "ASCII",
                "offset": 137293,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 137327,
                "string": "'u>C"
            },
            {
                "encoding": "ASCII",
                "offset": 137439,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 137548,
                "string": "}bF;u"
            },
            {
                "encoding": "ASCII",
                "offset": 137562,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 137653,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 137845,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 138500,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 138883,
                "string": "t\t9u"
            },
            {
                "encoding": "ASCII",
                "offset": 139118,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 139464,
                "string": "tF;}"
            },
            {
                "encoding": "ASCII",
                "offset": 139547,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 139583,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 140020,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 140592,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 140901,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 141205,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 143071,
                "string": "8*t."
            },
            {
                "encoding": "ASCII",
                "offset": 143116,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 143218,
                "string": "\"tCC"
            },
            {
                "encoding": "ASCII",
                "offset": 143358,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 143414,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 145260,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 145331,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 145480,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 145800,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 145898,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 145966,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 146172,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 146362,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 146808,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 147349,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 148278,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 148342,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 148439,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 148554,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 148764,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 149397,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 149587,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 150692,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 150729,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 151189,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 151429,
                "string": "L[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 152199,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 152365,
                "string": ",0<\tv"
            },
            {
                "encoding": "ASCII",
                "offset": 152515,
                "string": "<@ti<*"
            },
            {
                "encoding": "ASCII",
                "offset": 153352,
                "string": ",0<\tvb"
            },
            {
                "encoding": "ASCII",
                "offset": 153433,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 153829,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 155217,
                "string": "t-NC"
            },
            {
                "encoding": "ASCII",
                "offset": 155251,
                "string": "[[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 155512,
                "string": "|\t;E"
            },
            {
                "encoding": "ASCII",
                "offset": 155733,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 155762,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 156211,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 156347,
                "string": "]t_f"
            },
            {
                "encoding": "ASCII",
                "offset": 156360,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 156642,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 157078,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 157725,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 157909,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 158331,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 158890,
                "string": ",0<\t"
            },
            {
                "encoding": "ASCII",
                "offset": 159598,
                "string": "l[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 159978,
                "string": ",0<\tv "
            },
            {
                "encoding": "ASCII",
                "offset": 160716,
                "string": "l[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 161145,
                "string": "l[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 162215,
                "string": "\\[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 163599,
                "string": "<3)t"
            },
            {
                "encoding": "ASCII",
                "offset": 166224,
                "string": "l[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 166501,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 167042,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 167571,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 167798,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 168275,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 168721,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 168987,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 169397,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 170407,
                "string": "?.t3"
            },
            {
                "encoding": "ASCII",
                "offset": 170862,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 171002,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 171248,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 171301,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 171879,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 172051,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 172336,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 172349,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 173020,
                "string": "P[^]"
            },
            {
                "encoding": "ASCII",
                "offset": 173375,
                "string": "unkn"
            },
            {
                "encoding": "ASCII",
                "offset": 173525,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 173693,
                "string": "uAC9"
            },
            {
                "encoding": "ASCII",
                "offset": 173750,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 174050,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 174518,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 174566,
                "string": "t1<Sti"
            },
            {
                "encoding": "ASCII",
                "offset": 174672,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 175089,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 178539,
                "string": "t3~!"
            },
            {
                "encoding": "ASCII",
                "offset": 182157,
                "string": "BHtb"
            },
            {
                "encoding": "ASCII",
                "offset": 182411,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 182563,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 182835,
                "string": ">.t`"
            },
            {
                "encoding": "ASCII",
                "offset": 183121,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 183165,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 183394,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 183477,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 183680,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 183797,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 184030,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 184275,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 186270,
                "string": "8!uS"
            },
            {
                "encoding": "ASCII",
                "offset": 186361,
                "string": "8(t1"
            },
            {
                "encoding": "ASCII",
                "offset": 186409,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 189500,
                "string": "-t11"
            },
            {
                "encoding": "ASCII",
                "offset": 189575,
                "string": "<etY1"
            },
            {
                "encoding": "ASCII",
                "offset": 189785,
                "string": "<!t9<-u"
            },
            {
                "encoding": "ASCII",
                "offset": 189932,
                "string": ";-t5"
            },
            {
                "encoding": "ASCII",
                "offset": 190207,
                "string": "8!t]"
            },
            {
                "encoding": "ASCII",
                "offset": 190433,
                "string": "8[to"
            },
            {
                "encoding": "ASCII",
                "offset": 191291,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 191418,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 191870,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 191880,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 192037,
                "string": "u\t[1"
            },
            {
                "encoding": "ASCII",
                "offset": 192292,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 192801,
                "string": "|>29"
            },
            {
                "encoding": "ASCII",
                "offset": 193137,
                "string": "|;29"
            },
            {
                "encoding": "ASCII",
                "offset": 193281,
                "string": "|:29"
            },
            {
                "encoding": "ASCII",
                "offset": 193415,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 193827,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 194165,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 195570,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 195646,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 196049,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 196128,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 196228,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 196331,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 196416,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 196468,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 196589,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 196879,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 196980,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 197596,
                "string": "\\[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 198295,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 198647,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 199014,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 199228,
                "string": ";[t_"
            },
            {
                "encoding": "ASCII",
                "offset": 199309,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 199712,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 200482,
                "string": "t\tA9"
            },
            {
                "encoding": "ASCII",
                "offset": 200635,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 200745,
                "string": "<>]t3"
            },
            {
                "encoding": "ASCII",
                "offset": 201138,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 201269,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 201915,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 202550,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 202709,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 202836,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 203024,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 203169,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 203897,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 203911,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 203926,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 204598,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 204717,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 204821,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 205049,
                "string": "(t91"
            },
            {
                "encoding": "ASCII",
                "offset": 207877,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 208305,
                "string": "<@t0"
            },
            {
                "encoding": "ASCII",
                "offset": 209907,
                "string": "=@DF"
            },
            {
                "encoding": "ASCII",
                "offset": 211259,
                "string": ",0<\tw]"
            },
            {
                "encoding": "ASCII",
                "offset": 211735,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 211957,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 211984,
                "string": "tnC9"
            },
            {
                "encoding": "ASCII",
                "offset": 212632,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 213365,
                "string": "u\t]1"
            },
            {
                "encoding": "ASCII",
                "offset": 213607,
                "string": "<`t0"
            },
            {
                "encoding": "ASCII",
                "offset": 213654,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 214093,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 214564,
                "string": ">~tq"
            },
            {
                "encoding": "ASCII",
                "offset": 215481,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 217052,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 220004,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 220029,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 220175,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 220414,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 220721,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 221372,
                "string": "l[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 222023,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 222217,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 222231,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 222504,
                "string": "$ qC"
            },
            {
                "encoding": "ASCII",
                "offset": 222776,
                "string": "$0rC"
            },
            {
                "encoding": "ASCII",
                "offset": 223554,
                "string": "$0uC"
            },
            {
                "encoding": "ASCII",
                "offset": 223951,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 224021,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 224249,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 224309,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 224363,
                "string": "<\\u%"
            },
            {
                "encoding": "ASCII",
                "offset": 224399,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 224793,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 225458,
                "string": "t#C1"
            },
            {
                "encoding": "ASCII",
                "offset": 225490,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 225851,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 226277,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 226328,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 226499,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 226536,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 226837,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 227192,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 228238,
                "string": ":Tt6"
            },
            {
                "encoding": "ASCII",
                "offset": 228246,
                "string": "<Atx<C"
            },
            {
                "encoding": "ASCII",
                "offset": 229568,
                "string": "CFt,"
            },
            {
                "encoding": "ASCII",
                "offset": 229708,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 229975,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 230059,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 230922,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 231018,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 231139,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 231314,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 233170,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 233192,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 233760,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 233971,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 235573,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 235943,
                "string": "t5;u"
            },
            {
                "encoding": "ASCII",
                "offset": 236281,
                "string": "t5;E"
            },
            {
                "encoding": "ASCII",
                "offset": 237460,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 238107,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 238376,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 238598,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 238666,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 238839,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 238859,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 238951,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 239027,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 239283,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 239320,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 239466,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 239512,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 239658,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 239704,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 240059,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 240292,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 240320,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 240769,
                "string": "tPC9"
            },
            {
                "encoding": "ASCII",
                "offset": 240814,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 241503,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 243338,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 243468,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 243716,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 244504,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 244552,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 244788,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 245332,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 245442,
                "string": "\\trC"
            },
            {
                "encoding": "ASCII",
                "offset": 245599,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 245923,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 246317,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 249186,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 249199,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 249224,
                "string": "$4[H"
            },
            {
                "encoding": "ASCII",
                "offset": 249332,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 249605,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 249706,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 249829,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 249927,
                "string": "$o[H"
            },
            {
                "encoding": "ASCII",
                "offset": 249964,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 249989,
                "string": "$b[H"
            },
            {
                "encoding": "ASCII",
                "offset": 250040,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 250196,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 250454,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 251123,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 251623,
                "string": "8et'"
            },
            {
                "encoding": "ASCII",
                "offset": 251922,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 252461,
                "string": "L[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 252549,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 252806,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 253057,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 253670,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 253816,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 253957,
                "string": "$ ]H"
            },
            {
                "encoding": "ASCII",
                "offset": 253975,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 254321,
                "string": "$w]H"
            },
            {
                "encoding": "ASCII",
                "offset": 254616,
                "string": "$ ^H"
            },
            {
                "encoding": "ASCII",
                "offset": 254648,
                "string": "$4^H"
            },
            {
                "encoding": "ASCII",
                "offset": 254680,
                "string": "$X^H"
            },
            {
                "encoding": "ASCII",
                "offset": 254712,
                "string": "$z^H"
            },
            {
                "encoding": "ASCII",
                "offset": 254984,
                "string": "$\t_H"
            },
            {
                "encoding": "ASCII",
                "offset": 255035,
                "string": "$!_H"
            },
            {
                "encoding": "ASCII",
                "offset": 255271,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 255279,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 256251,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 256420,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 256475,
                "string": "$d_H"
            },
            {
                "encoding": "ASCII",
                "offset": 256497,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 256507,
                "string": "$d_H"
            },
            {
                "encoding": "ASCII",
                "offset": 256566,
                "string": ",0<\tvD"
            },
            {
                "encoding": "ASCII",
                "offset": 256904,
                "string": "${_H"
            },
            {
                "encoding": "ASCII",
                "offset": 256933,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 256958,
                "string": "<St4<U"
            },
            {
                "encoding": "ASCII",
                "offset": 257358,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 257621,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 258755,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 259993,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 260217,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 260240,
                "string": "$#`H"
            },
            {
                "encoding": "ASCII",
                "offset": 260277,
                "string": "H^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 260397,
                "string": "$:`H"
            },
            {
                "encoding": "ASCII",
                "offset": 260968,
                "string": "$K`H"
            },
            {
                "encoding": "ASCII",
                "offset": 261043,
                "string": "$``H"
            },
            {
                "encoding": "ASCII",
                "offset": 261367,
                "string": "$:`H"
            },
            {
                "encoding": "ASCII",
                "offset": 261931,
                "string": "tQB9"
            },
            {
                "encoding": "ASCII",
                "offset": 263307,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 263603,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 263649,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 263957,
                "string": "<-u("
            },
            {
                "encoding": "ASCII",
                "offset": 264062,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 264237,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 264694,
                "string": "$&aH"
            },
            {
                "encoding": "ASCII",
                "offset": 264748,
                "string": "$+aH"
            },
            {
                "encoding": "ASCII",
                "offset": 264818,
                "string": "$3aH"
            },
            {
                "encoding": "ASCII",
                "offset": 264913,
                "string": "$@aH"
            },
            {
                "encoding": "ASCII",
                "offset": 265109,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 265125,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 265246,
                "string": "$+aH"
            },
            {
                "encoding": "ASCII",
                "offset": 265321,
                "string": "$EaH"
            },
            {
                "encoding": "ASCII",
                "offset": 265425,
                "string": "<no "
            },
            {
                "encoding": "ASCII",
                "offset": 265434,
                "string": "curr"
            },
            {
                "encoding": "ASCII",
                "offset": 265441,
                "string": "ent "
            },
            {
                "encoding": "ASCII",
                "offset": 265448,
                "string": "dire"
            },
            {
                "encoding": "ASCII",
                "offset": 265455,
                "string": "ctorf"
            },
            {
                "encoding": "ASCII",
                "offset": 265494,
                "string": "$EaH"
            },
            {
                "encoding": "ASCII",
                "offset": 265715,
                "string": "$taH"
            },
            {
                "encoding": "ASCII",
                "offset": 266297,
                "string": "$waH"
            },
            {
                "encoding": "ASCII",
                "offset": 266593,
                "string": "${aH"
            },
            {
                "encoding": "ASCII",
                "offset": 266668,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 266717,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 267337,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 267383,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 267512,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 268074,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 268121,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 268573,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 268865,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 269241,
                "string": "$<bH"
            },
            {
                "encoding": "ASCII",
                "offset": 269366,
                "string": "8%tv"
            },
            {
                "encoding": "ASCII",
                "offset": 269483,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 270056,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 270115,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 270720,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 272060,
                "string": "$*cH"
            },
            {
                "encoding": "ASCII",
                "offset": 272467,
                "string": "$0cH"
            },
            {
                "encoding": "ASCII",
                "offset": 272498,
                "string": "$\\cH"
            },
            {
                "encoding": "ASCII",
                "offset": 272595,
                "string": "$~cH"
            },
            {
                "encoding": "ASCII",
                "offset": 273493,
                "string": "$*cH"
            },
            {
                "encoding": "ASCII",
                "offset": 274277,
                "string": "@l CF"
            },
            {
                "encoding": "ASCII",
                "offset": 274514,
                "string": "=,*G"
            },
            {
                "encoding": "ASCII",
                "offset": 274663,
                "string": ":-t%"
            },
            {
                "encoding": "ASCII",
                "offset": 274845,
                "string": "=,*G"
            },
            {
                "encoding": "ASCII",
                "offset": 275378,
                "string": "$0dH"
            },
            {
                "encoding": "ASCII",
                "offset": 275426,
                "string": "$7dH"
            },
            {
                "encoding": "ASCII",
                "offset": 275480,
                "string": "\\[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 275572,
                "string": "gfff"
            },
            {
                "encoding": "ASCII",
                "offset": 275631,
                "string": "$0dH"
            },
            {
                "encoding": "ASCII",
                "offset": 275737,
                "string": "$7dH"
            },
            {
                "encoding": "ASCII",
                "offset": 275751,
                "string": "\\[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 276003,
                "string": "$7dH"
            },
            {
                "encoding": "ASCII",
                "offset": 276022,
                "string": "$7dH"
            },
            {
                "encoding": "ASCII",
                "offset": 276060,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 276386,
                "string": ",0<\tw"
            },
            {
                "encoding": "ASCII",
                "offset": 276486,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 276717,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 276835,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 276848,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 277036,
                "string": "$UeH"
            },
            {
                "encoding": "ASCII",
                "offset": 277059,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 277115,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 277452,
                "string": "$XeH"
            },
            {
                "encoding": "ASCII",
                "offset": 277487,
                "string": "$[eH"
            },
            {
                "encoding": "ASCII",
                "offset": 277707,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 277769,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 278380,
                "string": "$LfH"
            },
            {
                "encoding": "ASCII",
                "offset": 278413,
                "string": "$lfH"
            },
            {
                "encoding": "ASCII",
                "offset": 278834,
                "string": "$vfH"
            },
            {
                "encoding": "ASCII",
                "offset": 278866,
                "string": "$vfH"
            },
            {
                "encoding": "ASCII",
                "offset": 278898,
                "string": "$vfH"
            },
            {
                "encoding": "ASCII",
                "offset": 278930,
                "string": "$vfH"
            },
            {
                "encoding": "ASCII",
                "offset": 278962,
                "string": "$vfH"
            },
            {
                "encoding": "ASCII",
                "offset": 278994,
                "string": "$vfH"
            },
            {
                "encoding": "ASCII",
                "offset": 279042,
                "string": "$}fH"
            },
            {
                "encoding": "ASCII",
                "offset": 279074,
                "string": "$}fH"
            },
            {
                "encoding": "ASCII",
                "offset": 279106,
                "string": "$}fH"
            },
            {
                "encoding": "ASCII",
                "offset": 279138,
                "string": "$}fH"
            },
            {
                "encoding": "ASCII",
                "offset": 279170,
                "string": "$}fH"
            },
            {
                "encoding": "ASCII",
                "offset": 279202,
                "string": "$}fH"
            },
            {
                "encoding": "ASCII",
                "offset": 279234,
                "string": "$}fH"
            },
            {
                "encoding": "ASCII",
                "offset": 279266,
                "string": "$}fH"
            },
            {
                "encoding": "ASCII",
                "offset": 279314,
                "string": "$}fH"
            },
            {
                "encoding": "ASCII",
                "offset": 279362,
                "string": "$}fH"
            },
            {
                "encoding": "ASCII",
                "offset": 279410,
                "string": "$}fH"
            },
            {
                "encoding": "ASCII",
                "offset": 279458,
                "string": "$}fH"
            },
            {
                "encoding": "ASCII",
                "offset": 280408,
                "string": "$0SD"
            },
            {
                "encoding": "ASCII",
                "offset": 280525,
                "string": "$LfH"
            },
            {
                "encoding": "ASCII",
                "offset": 281042,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 282000,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 282028,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 282082,
                "string": "$7gH"
            },
            {
                "encoding": "ASCII",
                "offset": 282134,
                "string": ",0<\tv"
            },
            {
                "encoding": "ASCII",
                "offset": 282156,
                "string": "$>gH"
            },
            {
                "encoding": "ASCII",
                "offset": 282194,
                "string": "$HgH"
            },
            {
                "encoding": "ASCII",
                "offset": 282300,
                "string": ",0<\t"
            },
            {
                "encoding": "ASCII",
                "offset": 283478,
                "string": "$lgH"
            },
            {
                "encoding": "ASCII",
                "offset": 285419,
                "string": "$`hH"
            },
            {
                "encoding": "ASCII",
                "offset": 285477,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 285524,
                "string": "$7gH"
            },
            {
                "encoding": "ASCII",
                "offset": 285567,
                "string": "$7gH"
            },
            {
                "encoding": "ASCII",
                "offset": 285599,
                "string": ",0<\tw'"
            },
            {
                "encoding": "ASCII",
                "offset": 285638,
                "string": ",0<\tv"
            },
            {
                "encoding": "ASCII",
                "offset": 285899,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 286057,
                "string": ",0<\t"
            },
            {
                "encoding": "ASCII",
                "offset": 286097,
                "string": ",0<\tv"
            },
            {
                "encoding": "ASCII",
                "offset": 286208,
                "string": "$phH"
            },
            {
                "encoding": "ASCII",
                "offset": 286682,
                "string": "C<\\t1"
            },
            {
                "encoding": "ASCII",
                "offset": 286726,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 286825,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 287566,
                "string": "8\"t@"
            },
            {
                "encoding": "ASCII",
                "offset": 287790,
                "string": "8\"tA"
            },
            {
                "encoding": "ASCII",
                "offset": 288221,
                "string": ",0<\twW"
            },
            {
                "encoding": "ASCII",
                "offset": 288281,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 288309,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 288645,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 288809,
                "string": "$\"jH"
            },
            {
                "encoding": "ASCII",
                "offset": 289047,
                "string": "$(jH"
            },
            {
                "encoding": "ASCII",
                "offset": 289069,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 289100,
                "string": "$PjH"
            },
            {
                "encoding": "ASCII",
                "offset": 289161,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 289628,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 289885,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 290115,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 290139,
                "string": "<uti"
            },
            {
                "encoding": "ASCII",
                "offset": 290229,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 290344,
                "string": "$,kH"
            },
            {
                "encoding": "ASCII",
                "offset": 290457,
                "string": "$MkH"
            },
            {
                "encoding": "ASCII",
                "offset": 291430,
                "string": "$MkH"
            },
            {
                "encoding": "ASCII",
                "offset": 291459,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 291562,
                "string": "$rkH"
            },
            {
                "encoding": "ASCII",
                "offset": 291670,
                "string": "$\"kH"
            },
            {
                "encoding": "ASCII",
                "offset": 291785,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 291821,
                "string": "$,kH"
            },
            {
                "encoding": "ASCII",
                "offset": 291920,
                "string": "8-t<"
            },
            {
                "encoding": "ASCII",
                "offset": 292249,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 292381,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 292685,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 292944,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 293266,
                "string": "$DlH"
            },
            {
                "encoding": "ASCII",
                "offset": 293283,
                "string": "$LlH"
            },
            {
                "encoding": "ASCII",
                "offset": 293400,
                "string": "$UlH"
            },
            {
                "encoding": "ASCII",
                "offset": 293424,
                "string": "$ZlH"
            },
            {
                "encoding": "ASCII",
                "offset": 293445,
                "string": "$mlH"
            },
            {
                "encoding": "ASCII",
                "offset": 293543,
                "string": "$ulH"
            },
            {
                "encoding": "ASCII",
                "offset": 293811,
                "string": "$UlH"
            },
            {
                "encoding": "ASCII",
                "offset": 293828,
                "string": "$UlH"
            },
            {
                "encoding": "ASCII",
                "offset": 293899,
                "string": "$ulH"
            },
            {
                "encoding": "ASCII",
                "offset": 294147,
                "string": "tX<-tN"
            },
            {
                "encoding": "ASCII",
                "offset": 294211,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 294222,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 294304,
                "string": "tS~\""
            },
            {
                "encoding": "ASCII",
                "offset": 294325,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 294492,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 295109,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 295139,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 295560,
                "string": "$$mH"
            },
            {
                "encoding": "ASCII",
                "offset": 295638,
                "string": "fuTF"
            },
            {
                "encoding": "ASCII",
                "offset": 295703,
                "string": "$2mH"
            },
            {
                "encoding": "ASCII",
                "offset": 295801,
                "string": "$OmH"
            },
            {
                "encoding": "ASCII",
                "offset": 295976,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 296025,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 296611,
                "string": "$qmH"
            },
            {
                "encoding": "ASCII",
                "offset": 296752,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 296784,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 296853,
                "string": "$umH"
            },
            {
                "encoding": "ASCII",
                "offset": 297375,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 297496,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 297526,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 298620,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 299131,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 299263,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 299619,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 300232,
                "string": "$KnH"
            },
            {
                "encoding": "ASCII",
                "offset": 300703,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 301239,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 301711,
                "string": "$$oH"
            },
            {
                "encoding": "ASCII",
                "offset": 301741,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 301759,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 301788,
                "string": "$poH"
            },
            {
                "encoding": "ASCII",
                "offset": 301818,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 302361,
                "string": "\\[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 302425,
                "string": "\\[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 302473,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 302580,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 302834,
                "string": "$2qH"
            },
            {
                "encoding": "ASCII",
                "offset": 302912,
                "string": "$5qH"
            },
            {
                "encoding": "ASCII",
                "offset": 303560,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 304417,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 305389,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 305763,
                "string": "$%rH"
            },
            {
                "encoding": "ASCII",
                "offset": 305875,
                "string": "$FrH"
            },
            {
                "encoding": "ASCII",
                "offset": 305978,
                "string": "$FrH"
            },
            {
                "encoding": "ASCII",
                "offset": 306170,
                "string": ",0<\tvj"
            },
            {
                "encoding": "ASCII",
                "offset": 306236,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 306269,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 306518,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 306706,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 306814,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 307217,
                "string": "$\"sH"
            },
            {
                "encoding": "ASCII",
                "offset": 307251,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 307693,
                "string": "3_str"
            },
            {
                "encoding": "ASCII",
                "offset": 307750,
                "string": "$0sH"
            },
            {
                "encoding": "ASCII",
                "offset": 307807,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 307860,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 308123,
                "string": "$XsH"
            },
            {
                "encoding": "ASCII",
                "offset": 308589,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 308599,
                "string": "$ysH"
            },
            {
                "encoding": "ASCII",
                "offset": 308621,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 309226,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 309808,
                "string": "L[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 310269,
                "string": "L[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 311308,
                "string": "$$tH"
            },
            {
                "encoding": "ASCII",
                "offset": 311458,
                "string": "$FtH"
            },
            {
                "encoding": "ASCII",
                "offset": 311642,
                "string": "$ uH"
            },
            {
                "encoding": "ASCII",
                "offset": 311765,
                "string": "$&uH"
            },
            {
                "encoding": "ASCII",
                "offset": 311879,
                "string": "$-uH"
            },
            {
                "encoding": "ASCII",
                "offset": 311911,
                "string": "$0uH"
            },
            {
                "encoding": "ASCII",
                "offset": 312042,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 312259,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 312412,
                "string": "$;uH"
            },
            {
                "encoding": "ASCII",
                "offset": 312433,
                "string": "$BuH"
            },
            {
                "encoding": "ASCII",
                "offset": 312611,
                "string": "$&uH"
            },
            {
                "encoding": "ASCII",
                "offset": 312641,
                "string": "$IuH"
            },
            {
                "encoding": "ASCII",
                "offset": 312758,
                "string": "$XuH"
            },
            {
                "encoding": "ASCII",
                "offset": 312788,
                "string": "$]uH"
            },
            {
                "encoding": "ASCII",
                "offset": 313086,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 313106,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 313129,
                "string": "$nuH"
            },
            {
                "encoding": "ASCII",
                "offset": 313149,
                "string": "$puH"
            },
            {
                "encoding": "ASCII",
                "offset": 313168,
                "string": "$puH"
            },
            {
                "encoding": "ASCII",
                "offset": 313536,
                "string": "$-uH"
            },
            {
                "encoding": "ASCII",
                "offset": 313570,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 313636,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 313650,
                "string": "$tuH"
            },
            {
                "encoding": "ASCII",
                "offset": 313720,
                "string": "$-uH"
            },
            {
                "encoding": "ASCII",
                "offset": 313771,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 313976,
                "string": "$|uH"
            },
            {
                "encoding": "ASCII",
                "offset": 314850,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 316319,
                "string": "$\"wH"
            },
            {
                "encoding": "ASCII",
                "offset": 316352,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 316370,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 316671,
                "string": "$=wH"
            },
            {
                "encoding": "ASCII",
                "offset": 316723,
                "string": "$DwH"
            },
            {
                "encoding": "ASCII",
                "offset": 316886,
                "string": "B<:tE<;tA<#"
            },
            {
                "encoding": "ASCII",
                "offset": 316948,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 316981,
                "string": "<:t!"
            },
            {
                "encoding": "ASCII",
                "offset": 317093,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 317296,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 317410,
                "string": ",0<\t"
            },
            {
                "encoding": "ASCII",
                "offset": 318333,
                "string": "<8=u"
            },
            {
                "encoding": "ASCII",
                "offset": 318876,
                "string": "'t!Cu"
            },
            {
                "encoding": "ASCII",
                "offset": 319036,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 319273,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 319448,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 319544,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 319930,
                "string": "0,0<"
            },
            {
                "encoding": "ASCII",
                "offset": 320458,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 320625,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 320869,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 320923,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 321327,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 321337,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 321447,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 321713,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 321760,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 321920,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 322125,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 322136,
                "string": "<~t}"
            },
            {
                "encoding": "ASCII",
                "offset": 322687,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 323150,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 323159,
                "string": "gfff"
            },
            {
                "encoding": "ASCII",
                "offset": 323676,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 323732,
                "string": "gfff"
            },
            {
                "encoding": "ASCII",
                "offset": 323836,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 324035,
                "string": "gfff"
            },
            {
                "encoding": "ASCII",
                "offset": 324582,
                "string": "?/tV"
            },
            {
                "encoding": "ASCII",
                "offset": 324590,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 325128,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 325209,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 325219,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 325671,
                "string": "$)~H"
            },
            {
                "encoding": "ASCII",
                "offset": 325946,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 326248,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 327445,
                "string": ",0<\tw"
            },
            {
                "encoding": "ASCII",
                "offset": 327900,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 327911,
                "string": "$x~H"
            },
            {
                "encoding": "ASCII",
                "offset": 328324,
                "string": "tE9s"
            },
            {
                "encoding": "ASCII",
                "offset": 328782,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 328899,
                "string": "CF;]"
            },
            {
                "encoding": "ASCII",
                "offset": 329011,
                "string": "CF;]"
            },
            {
                "encoding": "ASCII",
                "offset": 329034,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 330035,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 330103,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 330487,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 330497,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 330614,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 331904,
                "string": "([^]"
            },
            {
                "encoding": "ASCII",
                "offset": 332075,
                "string": "uCzA"
            },
            {
                "encoding": "ASCII",
                "offset": 332135,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 332373,
                "string": ",0<\t"
            },
            {
                "encoding": "ASCII",
                "offset": 333109,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 333434,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 334404,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 334750,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 335769,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 336259,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 336459,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 337186,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 338202,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 340608,
                "string": "vNJO"
            },
            {
                "encoding": "ASCII",
                "offset": 340699,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 340709,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 340787,
                "string": "@$ ]"
            },
            {
                "encoding": "ASCII",
                "offset": 341008,
                "string": "L[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 343613,
                "string": "\\[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 343958,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 344438,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 344454,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 344606,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 344816,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 344828,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 345160,
                "string": ".tu;"
            },
            {
                "encoding": "ASCII",
                "offset": 345384,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 345987,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 346839,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 346915,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 347081,
                "string": "gfff"
            },
            {
                "encoding": "ASCII",
                "offset": 347782,
                "string": ",0<\tv"
            },
            {
                "encoding": "ASCII",
                "offset": 347937,
                "string": "l[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 348358,
                "string": ",0<\tv"
            },
            {
                "encoding": "ASCII",
                "offset": 348591,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 348619,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 348934,
                "string": ",0<\tv"
            },
            {
                "encoding": "ASCII",
                "offset": 349067,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 349089,
                "string": "l[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 349414,
                "string": ",0<\tv"
            },
            {
                "encoding": "ASCII",
                "offset": 349959,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 350035,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 350201,
                "string": "gfff"
            },
            {
                "encoding": "ASCII",
                "offset": 353708,
                "string": "= CF"
            },
            {
                "encoding": "ASCII",
                "offset": 354728,
                "string": "$@.G"
            },
            {
                "encoding": "ASCII",
                "offset": 355327,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 355409,
                "string": "?/t["
            },
            {
                "encoding": "ASCII",
                "offset": 355510,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 355931,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 356054,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 356281,
                "string": ">~t*"
            },
            {
                "encoding": "ASCII",
                "offset": 358459,
                "string": "</t9"
            },
            {
                "encoding": "ASCII",
                "offset": 359236,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 359777,
                "string": "t}CF"
            },
            {
                "encoding": "ASCII",
                "offset": 359892,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 360490,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 360617,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 360650,
                "string": "= -G"
            },
            {
                "encoding": "ASCII",
                "offset": 361494,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 361662,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 361952,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 362014,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 362378,
                "string": "uT:M"
            },
            {
                "encoding": "ASCII",
                "offset": 363158,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 363281,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 363704,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 363757,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 364355,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 364375,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 364652,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 364693,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 365712,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 366843,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 367176,
                "string": ",0<\twC1"
            },
            {
                "encoding": "ASCII",
                "offset": 367204,
                "string": ",0<\tv"
            },
            {
                "encoding": "ASCII",
                "offset": 367244,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 367601,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 367955,
                "string": "t\"CFt'"
            },
            {
                "encoding": "ASCII",
                "offset": 368087,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 368453,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 368608,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 368672,
                "string": "<\\tq9"
            },
            {
                "encoding": "ASCII",
                "offset": 368841,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 369480,
                "string": "|[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 369580,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 371031,
                "string": "=,-G"
            },
            {
                "encoding": "ASCII",
                "offset": 371436,
                "string": "L[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 371976,
                "string": "L[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 373139,
                "string": ",0<\t"
            },
            {
                "encoding": "ASCII",
                "offset": 373191,
                "string": ",0<\tv"
            },
            {
                "encoding": "ASCII",
                "offset": 373287,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 373342,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 373397,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 373511,
                "string": ",0<\twP1"
            },
            {
                "encoding": "ASCII",
                "offset": 373540,
                "string": ",0<\tv"
            },
            {
                "encoding": "ASCII",
                "offset": 373966,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 374107,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 374183,
                "string": "\"tvF"
            },
            {
                "encoding": "ASCII",
                "offset": 374479,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 374894,
                "string": "t 9u"
            },
            {
                "encoding": "ASCII",
                "offset": 374998,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 375279,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 375426,
                "string": "tory"
            },
            {
                "encoding": "ASCII",
                "offset": 375431,
                "string": ".his"
            },
            {
                "encoding": "ASCII",
                "offset": 375717,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 375975,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 376264,
                "string": "l[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 376311,
                "string": "l[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 376624,
                "string": "l[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 376661,
                "string": "l[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 377171,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 377204,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 377674,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 379065,
                "string": "58-G"
            },
            {
                "encoding": "ASCII",
                "offset": 379146,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 379174,
                "string": "58-G"
            },
            {
                "encoding": "ASCII",
                "offset": 379524,
                "string": "=@-G"
            },
            {
                "encoding": "ASCII",
                "offset": 379565,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 379884,
                "string": "=@-G"
            },
            {
                "encoding": "ASCII",
                "offset": 381067,
                "string": "$@.G"
            },
            {
                "encoding": "ASCII",
                "offset": 382472,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 382514,
                "string": "tL+]"
            },
            {
                "encoding": "ASCII",
                "offset": 382583,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 382645,
                "string": "t\tCF;]"
            },
            {
                "encoding": "ASCII",
                "offset": 382679,
                "string": "CF;]"
            },
            {
                "encoding": "ASCII",
                "offset": 383088,
                "string": "@L CF"
            },
            {
                "encoding": "ASCII",
                "offset": 384186,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 384264,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 384563,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 384810,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 386304,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 386975,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 387639,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 388900,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 389011,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 389076,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 390500,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 390510,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 390708,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 390718,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 391853,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 392134,
                "string": "=@YG"
            },
            {
                "encoding": "ASCII",
                "offset": 393390,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 393721,
                "string": "\\C-?"
            },
            {
                "encoding": "ASCII",
                "offset": 394083,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 394686,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 398359,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 398631,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 399082,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 399355,
                "string": "_trf"
            },
            {
                "encoding": "ASCII",
                "offset": 399462,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 400296,
                "string": "}fN1"
            },
            {
                "encoding": "ASCII",
                "offset": 400405,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 401031,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 401045,
                "string": "\tv89u"
            },
            {
                "encoding": "ASCII",
                "offset": 401092,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 402117,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 403558,
                "string": "t%F;5("
            },
            {
                "encoding": "ASCII",
                "offset": 403608,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 403672,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 403709,
                "string": "[t$~$"
            },
            {
                "encoding": "ASCII",
                "offset": 403964,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 404460,
                "string": "t\"F9"
            },
            {
                "encoding": "ASCII",
                "offset": 404490,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 404547,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 404639,
                "string": "@lPDF"
            },
            {
                "encoding": "ASCII",
                "offset": 404663,
                "string": "@TPDF"
            },
            {
                "encoding": "ASCII",
                "offset": 405498,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 405548,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 405900,
                "string": "|e~J"
            },
            {
                "encoding": "ASCII",
                "offset": 406331,
                "string": "t@B9"
            },
            {
                "encoding": "ASCII",
                "offset": 406826,
                "string": "BtS~"
            },
            {
                "encoding": "ASCII",
                "offset": 407077,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 407135,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 407165,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 407205,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 407959,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 407977,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 408760,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 408778,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 409222,
                "string": "u ;}"
            },
            {
                "encoding": "ASCII",
                "offset": 409251,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 409262,
                "string": "tHHt-"
            },
            {
                "encoding": "ASCII",
                "offset": 410013,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 410100,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 411102,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 411134,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 413203,
                "string": "t=~G"
            },
            {
                "encoding": "ASCII",
                "offset": 413247,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 413285,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 413696,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 413732,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 414546,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 414681,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 416321,
                "string": "VUUU"
            },
            {
                "encoding": "ASCII",
                "offset": 416823,
                "string": "L[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 419269,
                "string": "@F;E"
            },
            {
                "encoding": "ASCII",
                "offset": 419808,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 419815,
                "string": "=@-G"
            },
            {
                "encoding": "ASCII",
                "offset": 420239,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 420452,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 421234,
                "string": "t`;58"
            },
            {
                "encoding": "ASCII",
                "offset": 421252,
                "string": "~U~ "
            },
            {
                "encoding": "ASCII",
                "offset": 426429,
                "string": "|ctX"
            },
            {
                "encoding": "ASCII",
                "offset": 427427,
                "string": "<1~t?"
            },
            {
                "encoding": "ASCII",
                "offset": 427445,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 427490,
                "string": "<1~u"
            },
            {
                "encoding": "ASCII",
                "offset": 427594,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 427683,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 427693,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 429463,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 429478,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 429498,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 429831,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 429860,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 429880,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 430877,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 430935,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 431811,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 435985,
                "string": ">^t@"
            },
            {
                "encoding": "ASCII",
                "offset": 436615,
                "string": "tT~M"
            },
            {
                "encoding": "ASCII",
                "offset": 437501,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 437689,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 438574,
                "string": "reve"
            },
            {
                "encoding": "ASCII",
                "offset": 438586,
                "string": "rse-"
            },
            {
                "encoding": "ASCII",
                "offset": 438596,
                "string": "3i-se"
            },
            {
                "encoding": "ASCII",
                "offset": 438602,
                "string": "arch"
            },
            {
                "encoding": "ASCII",
                "offset": 438651,
                "string": "3': "
            },
            {
                "encoding": "ASCII",
                "offset": 438974,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 439208,
                "string": "C,9C0t>"
            },
            {
                "encoding": "ASCII",
                "offset": 439465,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 440552,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 440601,
                "string": "C<;C,"
            },
            {
                "encoding": "ASCII",
                "offset": 442099,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 442191,
                "string": "tOKxL"
            },
            {
                "encoding": "ASCII",
                "offset": 442236,
                "string": "t;;E"
            },
            {
                "encoding": "ASCII",
                "offset": 442277,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 443641,
                "string": "<\\tG"
            },
            {
                "encoding": "ASCII",
                "offset": 443646,
                "string": ":.t)"
            },
            {
                "encoding": "ASCII",
                "offset": 443680,
                "string": "<\\t*"
            },
            {
                "encoding": "ASCII",
                "offset": 444126,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 444764,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 445090,
                "string": "l[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 445469,
                "string": "l[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 445480,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 445969,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 446211,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 446232,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 446262,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 446737,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 446845,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 447512,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 448256,
                "string": "B ;E"
            },
            {
                "encoding": "ASCII",
                "offset": 448261,
                "string": "tIG;}"
            },
            {
                "encoding": "ASCII",
                "offset": 448318,
                "string": "tcG;}"
            },
            {
                "encoding": "ASCII",
                "offset": 448631,
                "string": "B ;E"
            },
            {
                "encoding": "ASCII",
                "offset": 448704,
                "string": "<.t,F"
            },
            {
                "encoding": "ASCII",
                "offset": 448742,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 449366,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 449552,
                "string": "<:t,C"
            },
            {
                "encoding": "ASCII",
                "offset": 449984,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 450259,
                "string": "t%;M"
            },
            {
                "encoding": "ASCII",
                "offset": 450293,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 450509,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 450714,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 450830,
                "string": "tp;]"
            },
            {
                "encoding": "ASCII",
                "offset": 450885,
                "string": "t+9]"
            },
            {
                "encoding": "ASCII",
                "offset": 451199,
                "string": "L[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 455523,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 455586,
                "string": "w\t9X"
            },
            {
                "encoding": "ASCII",
                "offset": 455775,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 455823,
                "string": "w\t9X"
            },
            {
                "encoding": "ASCII",
                "offset": 455877,
                "string": "w\t9X"
            },
            {
                "encoding": "ASCII",
                "offset": 455939,
                "string": "w\t9X"
            },
            {
                "encoding": "ASCII",
                "offset": 477984,
                "string": "~/.bashrc"
            },
            {
                "encoding": "ASCII",
                "offset": 477994,
                "string": "debug"
            },
            {
                "encoding": "ASCII",
                "offset": 478000,
                "string": "debugger"
            },
            {
                "encoding": "ASCII",
                "offset": 478009,
                "string": "dump-po-strings"
            },
            {
                "encoding": "ASCII",
                "offset": 478025,
                "string": "dump-strings"
            },
            {
                "encoding": "ASCII",
                "offset": 478038,
                "string": "help"
            },
            {
                "encoding": "ASCII",
                "offset": 478043,
                "string": "init-file"
            },
            {
                "encoding": "ASCII",
                "offset": 478053,
                "string": "login"
            },
            {
                "encoding": "ASCII",
                "offset": 478059,
                "string": "noediting"
            },
            {
                "encoding": "ASCII",
                "offset": 478069,
                "string": "noprofile"
            },
            {
                "encoding": "ASCII",
                "offset": 478079,
                "string": "norc"
            },
            {
                "encoding": "ASCII",
                "offset": 478084,
                "string": "posix"
            },
            {
                "encoding": "ASCII",
                "offset": 478090,
                "string": "protected"
            },
            {
                "encoding": "ASCII",
                "offset": 478100,
                "string": "rcfile"
            },
            {
                "encoding": "ASCII",
                "offset": 478107,
                "string": "restricted"
            },
            {
                "encoding": "ASCII",
                "offset": 478118,
                "string": "verbose"
            },
            {
                "encoding": "ASCII",
                "offset": 478126,
                "string": "version"
            },
            {
                "encoding": "ASCII",
                "offset": 478134,
                "string": "wordexp"
            },
            {
                "encoding": "ASCII",
                "offset": 478142,
                "string": "/tmp"
            },
            {
                "encoding": "ASCII",
                "offset": 478148,
                "string": "/tmp must be a valid directory name"
            },
            {
                "encoding": "ASCII",
                "offset": 478184,
                "string": "could not find /tmp, please create!"
            },
            {
                "encoding": "ASCII",
                "offset": 478220,
                "string": "POSIXLY_CORRECT"
            },
            {
                "encoding": "ASCII",
                "offset": 478244,
                "string": "POSIX_PEDANTIC"
            },
            {
                "encoding": "ASCII",
                "offset": 478259,
                "string": "TERM"
            },
            {
                "encoding": "ASCII",
                "offset": 478264,
                "string": "EMACS"
            },
            {
                "encoding": "ASCII",
                "offset": 478270,
                "string": "term"
            },
            {
                "encoding": "ASCII",
                "offset": 478277,
                "string": "emacs"
            },
            {
                "encoding": "ASCII",
                "offset": 478283,
                "string": "dumb"
            },
            {
                "encoding": "ASCII",
                "offset": 478288,
                "string": "%s: option requires an argument"
            },
            {
                "encoding": "ASCII",
                "offset": 478323,
                "string": "%s: invalid option"
            },
            {
                "encoding": "ASCII",
                "offset": 478342,
                "string": "%c%c: invalid option"
            },
            {
                "encoding": "ASCII",
                "offset": 478556,
                "string": "SSH_CLIENT"
            },
            {
                "encoding": "ASCII",
                "offset": 478567,
                "string": "BASH_ENV"
            },
            {
                "encoding": "ASCII",
                "offset": 478580,
                "string": "/etc/profile"
            },
            {
                "encoding": "ASCII",
                "offset": 478593,
                "string": "~/.bash_profile"
            },
            {
                "encoding": "ASCII",
                "offset": 478609,
                "string": "~/.bash_login"
            },
            {
                "encoding": "ASCII",
                "offset": 478623,
                "string": "~/.profile"
            },
            {
                "encoding": "ASCII",
                "offset": 478634,
                "string": "SSH2_CLIENT"
            },
            {
                "encoding": "ASCII",
                "offset": 478646,
                "string": "rbash"
            },
            {
                "encoding": "ASCII",
                "offset": 478652,
                "string": "PATH"
            },
            {
                "encoding": "ASCII",
                "offset": 478657,
                "string": "SHELL"
            },
            {
                "encoding": "ASCII",
                "offset": 478663,
                "string": "run_wordexp"
            },
            {
                "encoding": "ASCII",
                "offset": 478682,
                "string": "--wordexp"
            },
            {
                "encoding": "ASCII",
                "offset": 478696,
                "string": "run_one_command"
            },
            {
                "encoding": "ASCII",
                "offset": 478712,
                "string": "/usr/local/lib/bashdb/bashdb-main.inc"
            },
            {
                "encoding": "ASCII",
                "offset": 478750,
                "string": "FUNCNAME"
            },
            {
                "encoding": "ASCII",
                "offset": 478759,
                "string": "BASH_SOURCE"
            },
            {
                "encoding": "ASCII",
                "offset": 478771,
                "string": "BASH_LINENO"
            },
            {
                "encoding": "ASCII",
                "offset": 478783,
                "string": "main"
            },
            {
                "encoding": "ASCII",
                "offset": 478788,
                "string": "%s: cannot execute binary file"
            },
            {
                "encoding": "ASCII",
                "offset": 478819,
                "string": "%s: is a directory"
            },
            {
                "encoding": "ASCII",
                "offset": 478838,
                "string": "bash.exe"
            },
            {
                "encoding": "ASCII",
                "offset": 478847,
                "string": "I have no name!"
            },
            {
                "encoding": "ASCII",
                "offset": 478863,
                "string": "??host??"
            },
            {
                "encoding": "ASCII",
                "offset": 478872,
                "string": "\\s-\\v\\$ "
            },
            {
                "encoding": "ASCII",
                "offset": 478884,
                "string": "Usage:\t%s [GNU long option] [option] ..."
            },
            {
                "encoding": "ASCII",
                "offset": 478925,
                "string": "\t%s [GNU long option] [option] script-file ..."
            },
            {
                "encoding": "ASCII",
                "offset": 478973,
                "string": "GNU long options:"
            },
            {
                "encoding": "ASCII",
                "offset": 478992,
                "string": "\t--%s"
            },
            {
                "encoding": "ASCII",
                "offset": 478999,
                "string": "Shell options:"
            },
            {
                "encoding": "ASCII",
                "offset": 479016,
                "string": "\t-irsD or -c command or -O shopt_option\t\t(invocation only)"
            },
            {
                "encoding": "ASCII",
                "offset": 479080,
                "string": "\t-%s or -o option"
            },
            {
                "encoding": "ASCII",
                "offset": 479099,
                "string": "i686-pc-msys"
            },
            {
                "encoding": "ASCII",
                "offset": 479112,
                "string": "GNU bash, version %s-(%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 479140,
                "string": "Type `%s -c help' for more information about shell builtin commands."
            },
            {
                "encoding": "ASCII",
                "offset": 479212,
                "string": "Type `%s -c \"help set\"' for more information about shell options."
            },
            {
                "encoding": "ASCII",
                "offset": 479280,
                "string": "Use the `bashbug' command to report bugs."
            },
            {
                "encoding": "ASCII",
                "offset": 479324,
                "string": "reader_loop"
            },
            {
                "encoding": "ASCII",
                "offset": 479337,
                "string": "timed out waiting for input: auto-logout"
            },
            {
                "encoding": "ASCII",
                "offset": 479388,
                "string": "eterm"
            },
            {
                "encoding": "ASCII",
                "offset": 479394,
                "string": "PROMPT_COMMAND"
            },
            {
                "encoding": "ASCII",
                "offset": 479409,
                "string": "TMOUT"
            },
            {
                "encoding": "ASCII",
                "offset": 479424,
                "string": "\\s-\\v\\$ "
            },
            {
                "encoding": "ASCII",
                "offset": 479743,
                "string": " !\"#$%&'()-"
            },
            {
                "encoding": "ASCII",
                "offset": 479777,
                "string": "677778899999999999999999999999999999:::;;<<====>>>>>>>>>>>????????@@@@AAAAAABBBCCCDDEFFFGHIJJJKKLLLLMMNNOPPQQQRRRRRRSSTTTUUVVVWWWWWXXXXXXYYZZ"
            },
            {
                "encoding": "ASCII",
                "offset": 480132,
                "string": "-0:41/65789"
            },
            {
                "encoding": "ASCII",
                "offset": 480192,
                "string": "%+(.uv"
            },
            {
                "encoding": "ASCII",
                "offset": 480199,
                "string": "zz}~z"
            },
            {
                "encoding": "ASCII",
                "offset": 480210,
                "string": "z{ikt"
            },
            {
                "encoding": "ASCII",
                "offset": 480218,
                "string": "zzzz"
            },
            {
                "encoding": "ASCII",
                "offset": 480254,
                "string": "zzzzzz"
            },
            {
                "encoding": "ASCII",
                "offset": 480300,
                "string": "EFzzzz"
            },
            {
                "encoding": "ASCII",
                "offset": 480317,
                "string": "XopqrsOe`"
            },
            {
                "encoding": "ASCII",
                "offset": 480344,
                "string": "zHQWzfN"
            },
            {
                "encoding": "ASCII",
                "offset": 480357,
                "string": "zzCDIJ"
            },
            {
                "encoding": "ASCII",
                "offset": 480364,
                "string": "\\zhabzz"
            },
            {
                "encoding": "ASCII",
                "offset": 480373,
                "string": "zzz^cd"
            },
            {
                "encoding": "ASCII",
                "offset": 480385,
                "string": "]?@KL"
            },
            {
                "encoding": "ASCII",
                "offset": 483728,
                "string": " !\"#$&'(),-/02479:<=>?@ABCEFGHIVWXYZ,OPU"
            },
            {
                "encoding": "ASCII",
                "offset": 483779,
                "string": "4 !\"#$&()/0"
            },
            {
                "encoding": "ASCII",
                "offset": 483809,
                "string": ":9;,-S"
            },
            {
                "encoding": "ASCII",
                "offset": 483821,
                "string": "+,-TY"
            },
            {
                "encoding": "ASCII",
                "offset": 483827,
                "string": ",QRXU+U"
            },
            {
                "encoding": "ASCII",
                "offset": 483835,
                "string": "2T+U"
            },
            {
                "encoding": "ASCII",
                "offset": 483860,
                "string": "359UUWWUYP"
            },
            {
                "encoding": "ASCII",
                "offset": 483879,
                "string": "2PPUU"
            },
            {
                "encoding": "ASCII",
                "offset": 483886,
                "string": "2PP5>DUWWY"
            },
            {
                "encoding": "ASCII",
                "offset": 483899,
                "string": "JUUUUUKLMU"
            },
            {
                "encoding": "ASCII",
                "offset": 483921,
                "string": "2OU8O"
            },
            {
                "encoding": "ASCII",
                "offset": 483928,
                "string": "U;DPP"
            },
            {
                "encoding": "ASCII",
                "offset": 483934,
                "string": "RRRRR\t%LU\t"
            },
            {
                "encoding": "ASCII",
                "offset": 483945,
                "string": "4NPP"
            },
            {
                "encoding": "ASCII",
                "offset": 483951,
                "string": "TU3PPOO"
            },
            {
                "encoding": "ASCII",
                "offset": 483959,
                "string": "RT3D"
            },
            {
                "encoding": "ASCII",
                "offset": 483965,
                "string": "%\tN.5"
            },
            {
                "encoding": "ASCII",
                "offset": 483978,
                "string": "3UP5"
            },
            {
                "encoding": "ASCII",
                "offset": 483992,
                "string": "JPUPP"
            },
            {
                "encoding": "ASCII",
                "offset": 483998,
                "string": "3OOP"
            },
            {
                "encoding": "ASCII",
                "offset": 484005,
                "string": "3syntax error"
            },
            {
                "encoding": "ASCII",
                "offset": 484019,
                "string": "\"$@\""
            },
            {
                "encoding": "ASCII",
                "offset": 484024,
                "string": "memory exhausted"
            },
            {
                "encoding": "ASCII",
                "offset": 484612,
                "string": "stdin"
            },
            {
                "encoding": "ASCII",
                "offset": 484619,
                "string": "readline stdin"
            },
            {
                "encoding": "ASCII",
                "offset": 484637,
                "string": "then"
            },
            {
                "encoding": "ASCII",
                "offset": 484642,
                "string": "else"
            },
            {
                "encoding": "ASCII",
                "offset": 484647,
                "string": "elif"
            },
            {
                "encoding": "ASCII",
                "offset": 484655,
                "string": "case"
            },
            {
                "encoding": "ASCII",
                "offset": 484660,
                "string": "esac"
            },
            {
                "encoding": "ASCII",
                "offset": 484669,
                "string": "select"
            },
            {
                "encoding": "ASCII",
                "offset": 484676,
                "string": "while"
            },
            {
                "encoding": "ASCII",
                "offset": 484682,
                "string": "until"
            },
            {
                "encoding": "ASCII",
                "offset": 484691,
                "string": "done"
            },
            {
                "encoding": "ASCII",
                "offset": 484699,
                "string": "function"
            },
            {
                "encoding": "ASCII",
                "offset": 484708,
                "string": "time"
            },
            {
                "encoding": "ASCII",
                "offset": 484786,
                "string": "newline"
            },
            {
                "encoding": "ASCII",
                "offset": 484800,
                "string": "PROMPT_COMMAND"
            },
            {
                "encoding": "ASCII",
                "offset": 484816,
                "string": "unexpected EOF while looking for matching `%c'"
            },
            {
                "encoding": "ASCII",
                "offset": 484864,
                "string": "unexpected EOF while looking for `]]'"
            },
            {
                "encoding": "ASCII",
                "offset": 484904,
                "string": "syntax error in conditional expression: unexpected token `%s'"
            },
            {
                "encoding": "ASCII",
                "offset": 484968,
                "string": "syntax error in conditional expression"
            },
            {
                "encoding": "ASCII",
                "offset": 485008,
                "string": "unexpected token `%c' in conditional command"
            },
            {
                "encoding": "ASCII",
                "offset": 485056,
                "string": "unexpected token `%s' in conditional command"
            },
            {
                "encoding": "ASCII",
                "offset": 485104,
                "string": "unexpected token `%s', expected `)'"
            },
            {
                "encoding": "ASCII",
                "offset": 485140,
                "string": "unexpected token %d in conditional command"
            },
            {
                "encoding": "ASCII",
                "offset": 485184,
                "string": "unexpected argument `%s' to conditional unary operator"
            },
            {
                "encoding": "ASCII",
                "offset": 485239,
                "string": "expected `)'"
            },
            {
                "encoding": "ASCII",
                "offset": 485252,
                "string": "unexpected argument `%s' to conditional binary operator"
            },
            {
                "encoding": "ASCII",
                "offset": 485312,
                "string": "unexpected argument to conditional unary operator"
            },
            {
                "encoding": "ASCII",
                "offset": 485364,
                "string": "unexpected token `%s', conditional binary operator expected"
            },
            {
                "encoding": "ASCII",
                "offset": 485424,
                "string": "unexpected argument to conditional binary operator"
            },
            {
                "encoding": "ASCII",
                "offset": 485476,
                "string": "conditional binary operator expected"
            },
            {
                "encoding": "ASCII",
                "offset": 485513,
                "string": "eval"
            },
            {
                "encoding": "ASCII",
                "offset": 485545,
                "string": "%s.%d"
            },
            {
                "encoding": "ASCII",
                "offset": 485551,
                "string": "HOME"
            },
            {
                "encoding": "ASCII",
                "offset": 485556,
                "string": "%a %b %d"
            },
            {
                "encoding": "ASCII",
                "offset": 485565,
                "string": "%H:%M:%S"
            },
            {
                "encoding": "ASCII",
                "offset": 485574,
                "string": "%I:%M:%S"
            },
            {
                "encoding": "ASCII",
                "offset": 485583,
                "string": "%H:%M"
            },
            {
                "encoding": "ASCII",
                "offset": 485589,
                "string": "%I:%M %p"
            },
            {
                "encoding": "ASCII",
                "offset": 485978,
                "string": "\t;|&"
            },
            {
                "encoding": "ASCII",
                "offset": 485983,
                "string": "`%s'"
            },
            {
                "encoding": "ASCII",
                "offset": 485992,
                "string": "syntax error: unexpected end of file"
            },
            {
                "encoding": "ASCII",
                "offset": 486032,
                "string": "syntax error near unexpected token `%s'"
            },
            {
                "encoding": "ASCII",
                "offset": 486072,
                "string": "syntax error near `%s'"
            },
            {
                "encoding": "ASCII",
                "offset": 486095,
                "string": "logout"
            },
            {
                "encoding": "ASCII",
                "offset": 486102,
                "string": "exit"
            },
            {
                "encoding": "ASCII",
                "offset": 486107,
                "string": "Use \"%s\" to leave the shell."
            },
            {
                "encoding": "ASCII",
                "offset": 486140,
                "string": "unexpected EOF while looking for matching `)'"
            },
            {
                "encoding": "ASCII",
                "offset": 486186,
                "string": "PIPESTATUS"
            },
            {
                "encoding": "ASCII",
                "offset": 486208,
                "string": "getcwd: cannot access parent directories"
            },
            {
                "encoding": "ASCII",
                "offset": 486252,
                "string": "%s%s"
            },
            {
                "encoding": "ASCII",
                "offset": 486257,
                "string": "`%s': not a valid identifier"
            },
            {
                "encoding": "ASCII",
                "offset": 486286,
                "string": "/dev/tty"
            },
            {
                "encoding": "ASCII",
                "offset": 486295,
                "string": "HOME"
            },
            {
                "encoding": "ASCII",
                "offset": 486304,
                "string": "OLDPWD"
            },
            {
                "encoding": "ASCII",
                "offset": 486320,
                "string": "syntax error: arithmetic expression required"
            },
            {
                "encoding": "ASCII",
                "offset": 486365,
                "string": "syntax error: `((%s))'"
            },
            {
                "encoding": "ASCII",
                "offset": 486388,
                "string": "syntax error: `;' unexpected"
            },
            {
                "encoding": "ASCII",
                "offset": 486420,
                "string": "make_here_document: bad instruction type %d"
            },
            {
                "encoding": "ASCII",
                "offset": 486464,
                "string": "make_redirection: redirection instruction `%d' out of range"
            },
            {
                "encoding": "ASCII",
                "offset": 486600,
                "string": "BASH_SOURCE"
            },
            {
                "encoding": "ASCII",
                "offset": 486612,
                "string": "clean_simple_command"
            },
            {
                "encoding": "ASCII",
                "offset": 486639,
                "string": "print_command"
            },
            {
                "encoding": "ASCII",
                "offset": 486658,
                "string": "time "
            },
            {
                "encoding": "ASCII",
                "offset": 486676,
                "string": "print_command: bad connector `%d'"
            },
            {
                "encoding": "ASCII",
                "offset": 486710,
                "string": " || "
            },
            {
                "encoding": "ASCII",
                "offset": 486721,
                "string": " && "
            },
            {
                "encoding": "ASCII",
                "offset": 486784,
                "string": "%s%s"
            },
            {
                "encoding": "ASCII",
                "offset": 486793,
                "string": "%s=(%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 486802,
                "string": "%s=%s"
            },
            {
                "encoding": "ASCII",
                "offset": 486809,
                "string": "''%s"
            },
            {
                "encoding": "ASCII",
                "offset": 486814,
                "string": "for %s in "
            },
            {
                "encoding": "ASCII",
                "offset": 486829,
                "string": "done"
            },
            {
                "encoding": "ASCII",
                "offset": 486834,
                "string": "for (("
            },
            {
                "encoding": "ASCII",
                "offset": 486847,
                "string": "select %s in "
            },
            {
                "encoding": "ASCII",
                "offset": 486866,
                "string": "case %s in "
            },
            {
                "encoding": "ASCII",
                "offset": 486878,
                "string": "case %s in"
            },
            {
                "encoding": "ASCII",
                "offset": 486890,
                "string": "esac"
            },
            {
                "encoding": "ASCII",
                "offset": 486905,
                "string": "while"
            },
            {
                "encoding": "ASCII",
                "offset": 486911,
                "string": "until"
            },
            {
                "encoding": "ASCII",
                "offset": 486930,
                "string": " then"
            },
            {
                "encoding": "ASCII",
                "offset": 486940,
                "string": "else"
            },
            {
                "encoding": "ASCII",
                "offset": 486965,
                "string": " %s "
            },
            {
                "encoding": "ASCII",
                "offset": 486988,
                "string": "<<%s%s"
            },
            {
                "encoding": "ASCII",
                "offset": 486996,
                "string": ">>%s"
            },
            {
                "encoding": "ASCII",
                "offset": 487007,
                "string": "%d>&%s-"
            },
            {
                "encoding": "ASCII",
                "offset": 487015,
                "string": "%d<&%s-"
            },
            {
                "encoding": "ASCII",
                "offset": 487023,
                "string": "%d>&%d-"
            },
            {
                "encoding": "ASCII",
                "offset": 487031,
                "string": "%d<&%d-"
            },
            {
                "encoding": "ASCII",
                "offset": 487039,
                "string": "%d>&%s"
            },
            {
                "encoding": "ASCII",
                "offset": 487046,
                "string": "%d<&%s"
            },
            {
                "encoding": "ASCII",
                "offset": 487053,
                "string": ">|%s"
            },
            {
                "encoding": "ASCII",
                "offset": 487058,
                "string": "<>%s"
            },
            {
                "encoding": "ASCII",
                "offset": 487063,
                "string": ">&%s"
            },
            {
                "encoding": "ASCII",
                "offset": 487068,
                "string": "%d>&-"
            },
            {
                "encoding": "ASCII",
                "offset": 487074,
                "string": "%d>&%d"
            },
            {
                "encoding": "ASCII",
                "offset": 487081,
                "string": "%d<&%d"
            },
            {
                "encoding": "ASCII",
                "offset": 487088,
                "string": "<<< %s"
            },
            {
                "encoding": "ASCII",
                "offset": 487172,
                "string": "function %s () "
            },
            {
                "encoding": "ASCII",
                "offset": 487200,
                "string": "cprintf: `%c': invalid format character"
            },
            {
                "encoding": "ASCII",
                "offset": 487244,
                "string": "dispose_command"
            },
            {
                "encoding": "ASCII",
                "offset": 487316,
                "string": "execute-command"
            },
            {
                "encoding": "ASCII",
                "offset": 487332,
                "string": "/dev/null"
            },
            {
                "encoding": "ASCII",
                "offset": 487344,
                "string": "cannot redirect standard input from /dev/null: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 487394,
                "string": "loop_redirections"
            },
            {
                "encoding": "ASCII",
                "offset": 487412,
                "string": "execute_command"
            },
            {
                "encoding": "ASCII",
                "offset": 487484,
                "string": "TIMEFORMAT: `%c': invalid format character"
            },
            {
                "encoding": "ASCII",
                "offset": 487527,
                "string": "real %2R"
            },
            {
                "encoding": "ASCII",
                "offset": 487536,
                "string": "user %2U"
            },
            {
                "encoding": "ASCII",
                "offset": 487545,
                "string": "sys %2S"
            },
            {
                "encoding": "ASCII",
                "offset": 487553,
                "string": "TIMEFORMAT"
            },
            {
                "encoding": "ASCII",
                "offset": 487565,
                "string": "real\t%3lR"
            },
            {
                "encoding": "ASCII",
                "offset": 487575,
                "string": "user\t%3lU"
            },
            {
                "encoding": "ASCII",
                "offset": 487585,
                "string": "sys\t%3lS"
            },
            {
                "encoding": "ASCII",
                "offset": 487594,
                "string": "pipe-file-descriptors"
            },
            {
                "encoding": "ASCII",
                "offset": 487616,
                "string": "pipe error"
            },
            {
                "encoding": "ASCII",
                "offset": 487627,
                "string": "execute_connection"
            },
            {
                "encoding": "ASCII",
                "offset": 487650,
                "string": "trap"
            },
            {
                "encoding": "ASCII",
                "offset": 487661,
                "string": "%*d%s%s"
            },
            {
                "encoding": "ASCII",
                "offset": 487669,
                "string": "LINES"
            },
            {
                "encoding": "ASCII",
                "offset": 487675,
                "string": "COLUMNS"
            },
            {
                "encoding": "ASCII",
                "offset": 487683,
                "string": "REPLY"
            },
            {
                "encoding": "ASCII",
                "offset": 487690,
                "string": "select"
            },
            {
                "encoding": "ASCII",
                "offset": 487705,
                "string": "case"
            },
            {
                "encoding": "ASCII",
                "offset": 487710,
                "string": "execute_cond_node"
            },
            {
                "encoding": "ASCII",
                "offset": 487733,
                "string": "simple-command"
            },
            {
                "encoding": "ASCII",
                "offset": 487748,
                "string": "auto_resume"
            },
            {
                "encoding": "ASCII",
                "offset": 487766,
                "string": "substring"
            },
            {
                "encoding": "ASCII",
                "offset": 487776,
                "string": "exact"
            },
            {
                "encoding": "ASCII",
                "offset": 487784,
                "string": "eval_builtin"
            },
            {
                "encoding": "ASCII",
                "offset": 487797,
                "string": "builtin_env"
            },
            {
                "encoding": "ASCII",
                "offset": 487809,
                "string": "return_temp_env"
            },
            {
                "encoding": "ASCII",
                "offset": 487825,
                "string": "FUNCNAME"
            },
            {
                "encoding": "ASCII",
                "offset": 487834,
                "string": "BASH_SOURCE"
            },
            {
                "encoding": "ASCII",
                "offset": 487846,
                "string": "BASH_LINENO"
            },
            {
                "encoding": "ASCII",
                "offset": 487858,
                "string": "function_calling"
            },
            {
                "encoding": "ASCII",
                "offset": 487875,
                "string": "execute-shell-function"
            },
            {
                "encoding": "ASCII",
                "offset": 487898,
                "string": "saved redirects"
            },
            {
                "encoding": "ASCII",
                "offset": 487914,
                "string": "saved_redirects"
            },
            {
                "encoding": "ASCII",
                "offset": 487930,
                "string": "%s: command not found"
            },
            {
                "encoding": "ASCII",
                "offset": 487952,
                "string": "%s: restricted: cannot specify `/' in command names"
            },
            {
                "encoding": "ASCII",
                "offset": 488004,
                "string": "%s: is a directory"
            },
            {
                "encoding": "ASCII",
                "offset": 488023,
                "string": "%s: %s: bad interpreter"
            },
            {
                "encoding": "ASCII",
                "offset": 488048,
                "string": "%s: cannot execute binary file"
            },
            {
                "encoding": "ASCII",
                "offset": 488079,
                "string": "%s: readonly function"
            },
            {
                "encoding": "ASCII",
                "offset": 488104,
                "string": "cannot duplicate fd %d to fd %d"
            },
            {
                "encoding": "ASCII",
                "offset": 488140,
                "string": "/usr/gnu/bin:/usr/local/bin:/bin:/usr/bin:."
            },
            {
                "encoding": "ASCII",
                "offset": 488184,
                "string": "PATH"
            },
            {
                "encoding": "ASCII",
                "offset": 488189,
                "string": "TERM"
            },
            {
                "encoding": "ASCII",
                "offset": 488194,
                "string": "dumb"
            },
            {
                "encoding": "ASCII",
                "offset": 488221,
                "string": "MAILCHECK"
            },
            {
                "encoding": "ASCII",
                "offset": 488231,
                "string": "OPTIND"
            },
            {
                "encoding": "ASCII",
                "offset": 488240,
                "string": "OPTERR"
            },
            {
                "encoding": "ASCII",
                "offset": 488247,
                "string": "BASH"
            },
            {
                "encoding": "ASCII",
                "offset": 488252,
                "string": "BASH_VERSION"
            },
            {
                "encoding": "ASCII",
                "offset": 488265,
                "string": "POSIXLY_CORRECT"
            },
            {
                "encoding": "ASCII",
                "offset": 488281,
                "string": "~/.sh_history"
            },
            {
                "encoding": "ASCII",
                "offset": 488295,
                "string": "~/.bash_history"
            },
            {
                "encoding": "ASCII",
                "offset": 488315,
                "string": "HISTFILE"
            },
            {
                "encoding": "ASCII",
                "offset": 488324,
                "string": "HISTSIZE"
            },
            {
                "encoding": "ASCII",
                "offset": 488333,
                "string": "BASH_EXECUTION_STRING"
            },
            {
                "encoding": "ASCII",
                "offset": 488355,
                "string": "IGNOREEOF"
            },
            {
                "encoding": "ASCII",
                "offset": 488365,
                "string": "HISTCONTROL"
            },
            {
                "encoding": "ASCII",
                "offset": 488377,
                "string": "HISTIGNORE"
            },
            {
                "encoding": "ASCII",
                "offset": 488396,
                "string": "() {"
            },
            {
                "encoding": "ASCII",
                "offset": 488401,
                "string": "POSIX_PEDANTIC"
            },
            {
                "encoding": "ASCII",
                "offset": 488416,
                "string": "ignoreeof"
            },
            {
                "encoding": "ASCII",
                "offset": 488428,
                "string": "error importing function definition for `%s'"
            },
            {
                "encoding": "ASCII",
                "offset": 488473,
                "string": "i686"
            },
            {
                "encoding": "ASCII",
                "offset": 488478,
                "string": "HOSTTYPE"
            },
            {
                "encoding": "ASCII",
                "offset": 488487,
                "string": "OSTYPE"
            },
            {
                "encoding": "ASCII",
                "offset": 488494,
                "string": "msys"
            },
            {
                "encoding": "ASCII",
                "offset": 488499,
                "string": "MACHTYPE"
            },
            {
                "encoding": "ASCII",
                "offset": 488508,
                "string": "i686-pc-msys"
            },
            {
                "encoding": "ASCII",
                "offset": 488521,
                "string": "HOSTNAME"
            },
            {
                "encoding": "ASCII",
                "offset": 488530,
                "string": "HOME"
            },
            {
                "encoding": "ASCII",
                "offset": 488535,
                "string": "SHELL"
            },
            {
                "encoding": "ASCII",
                "offset": 488545,
                "string": "SHLVL"
            },
            {
                "encoding": "ASCII",
                "offset": 488552,
                "string": "shell level (%d) too high, resetting to 1"
            },
            {
                "encoding": "ASCII",
                "offset": 488594,
                "string": "shell-init"
            },
            {
                "encoding": "ASCII",
                "offset": 488605,
                "string": "OLDPWD"
            },
            {
                "encoding": "ASCII",
                "offset": 488614,
                "string": "PPID"
            },
            {
                "encoding": "ASCII",
                "offset": 488623,
                "string": "EUID"
            },
            {
                "encoding": "ASCII",
                "offset": 488628,
                "string": "BASH_VERSINFO"
            },
            {
                "encoding": "ASCII",
                "offset": 488642,
                "string": "LINES"
            },
            {
                "encoding": "ASCII",
                "offset": 488648,
                "string": "COLUMNS"
            },
            {
                "encoding": "ASCII",
                "offset": 488667,
                "string": "SECONDS"
            },
            {
                "encoding": "ASCII",
                "offset": 488675,
                "string": "FUNCNAME"
            },
            {
                "encoding": "ASCII",
                "offset": 488684,
                "string": "BASH_COMMAND"
            },
            {
                "encoding": "ASCII",
                "offset": 488697,
                "string": "BASH_SUBSHELL"
            },
            {
                "encoding": "ASCII",
                "offset": 488711,
                "string": "RANDOM"
            },
            {
                "encoding": "ASCII",
                "offset": 488718,
                "string": "LINENO"
            },
            {
                "encoding": "ASCII",
                "offset": 488725,
                "string": "HISTCMD"
            },
            {
                "encoding": "ASCII",
                "offset": 488733,
                "string": "COMP_WORDBREAKS"
            },
            {
                "encoding": "ASCII",
                "offset": 488749,
                "string": "DIRSTACK"
            },
            {
                "encoding": "ASCII",
                "offset": 488758,
                "string": "GROUPS"
            },
            {
                "encoding": "ASCII",
                "offset": 488765,
                "string": "BASH_ARGC"
            },
            {
                "encoding": "ASCII",
                "offset": 488775,
                "string": "BASH_ARGV"
            },
            {
                "encoding": "ASCII",
                "offset": 488785,
                "string": "BASH_SOURCE"
            },
            {
                "encoding": "ASCII",
                "offset": 488797,
                "string": "BASH_LINENO"
            },
            {
                "encoding": "ASCII",
                "offset": 488812,
                "string": "make_local_variable: no function context at current scope"
            },
            {
                "encoding": "ASCII",
                "offset": 488872,
                "string": "all_local_variables: no function context at current scope"
            },
            {
                "encoding": "ASCII",
                "offset": 488940,
                "string": "pop_var_context: head of shell_variables not a function context"
            },
            {
                "encoding": "ASCII",
                "offset": 489004,
                "string": "pop_var_context: no global_variables context"
            },
            {
                "encoding": "ASCII",
                "offset": 489052,
                "string": "pop_scope: head of shell_variables not a temporary environment scope"
            },
            {
                "encoding": "ASCII",
                "offset": 489121,
                "string": "GLOBIGNORE"
            },
            {
                "encoding": "ASCII",
                "offset": 489132,
                "string": "HISTFILESIZE"
            },
            {
                "encoding": "ASCII",
                "offset": 489145,
                "string": "HISTTIMEFORMAT"
            },
            {
                "encoding": "ASCII",
                "offset": 489160,
                "string": "HOSTFILE"
            },
            {
                "encoding": "ASCII",
                "offset": 489169,
                "string": "LANG"
            },
            {
                "encoding": "ASCII",
                "offset": 489174,
                "string": "LC_ALL"
            },
            {
                "encoding": "ASCII",
                "offset": 489181,
                "string": "LC_COLLATE"
            },
            {
                "encoding": "ASCII",
                "offset": 489192,
                "string": "LC_CTYPE"
            },
            {
                "encoding": "ASCII",
                "offset": 489201,
                "string": "LC_MESSAGES"
            },
            {
                "encoding": "ASCII",
                "offset": 489213,
                "string": "LC_NUMERIC"
            },
            {
                "encoding": "ASCII",
                "offset": 489224,
                "string": "LC_TIME"
            },
            {
                "encoding": "ASCII",
                "offset": 489232,
                "string": "MAIL"
            },
            {
                "encoding": "ASCII",
                "offset": 489237,
                "string": "MAILPATH"
            },
            {
                "encoding": "ASCII",
                "offset": 489246,
                "string": "TERMCAP"
            },
            {
                "encoding": "ASCII",
                "offset": 489254,
                "string": "TERMINFO"
            },
            {
                "encoding": "ASCII",
                "offset": 489263,
                "string": "TEXTDOMAIN"
            },
            {
                "encoding": "ASCII",
                "offset": 489274,
                "string": "TEXTDOMAINDIR"
            },
            {
                "encoding": "ASCII",
                "offset": 489291,
                "string": "histchars"
            },
            {
                "encoding": "ASCII",
                "offset": 489301,
                "string": "ignorespace"
            },
            {
                "encoding": "ASCII",
                "offset": 489313,
                "string": "erasedups"
            },
            {
                "encoding": "ASCII",
                "offset": 489323,
                "string": "ignoredups"
            },
            {
                "encoding": "ASCII",
                "offset": 489334,
                "string": "ignoreboth"
            },
            {
                "encoding": "ASCII",
                "offset": 489345,
                "string": "PIPESTATUS"
            },
            {
                "encoding": "ASCII",
                "offset": 489412,
                "string": "bash-maintainers@gnu.org"
            },
            {
                "encoding": "ASCII",
                "offset": 489437,
                "string": "%s: "
            },
            {
                "encoding": "ASCII",
                "offset": 489443,
                "string": " line "
            },
            {
                "encoding": "ASCII",
                "offset": 489450,
                "string": "%s:%s%d: "
            },
            {
                "encoding": "ASCII",
                "offset": 489460,
                "string": "bash.exe"
            },
            {
                "encoding": "ASCII",
                "offset": 489469,
                "string": "BASH_SOURCE"
            },
            {
                "encoding": "ASCII",
                "offset": 489481,
                "string": "%s: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 489488,
                "string": "Aborting..."
            },
            {
                "encoding": "ASCII",
                "offset": 489500,
                "string": "last command: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 489518,
                "string": "(null)"
            },
            {
                "encoding": "ASCII",
                "offset": 489525,
                "string": "%s: warning: "
            },
            {
                "encoding": "ASCII",
                "offset": 489539,
                "string": ": %s"
            },
            {
                "encoding": "ASCII",
                "offset": 489545,
                "string": "%s: %s:%s%d: "
            },
            {
                "encoding": "ASCII",
                "offset": 489559,
                "string": "unknown command error"
            },
            {
                "encoding": "ASCII",
                "offset": 489581,
                "string": "bad command type"
            },
            {
                "encoding": "ASCII",
                "offset": 489598,
                "string": "bad connector"
            },
            {
                "encoding": "ASCII",
                "offset": 489612,
                "string": "bad jump"
            },
            {
                "encoding": "ASCII",
                "offset": 489621,
                "string": "%s: %s: %d"
            },
            {
                "encoding": "ASCII",
                "offset": 489632,
                "string": "%s: unbound variable"
            },
            {
                "encoding": "ASCII",
                "offset": 489653,
                "string": "%s: readonly variable"
            },
            {
                "encoding": "ASCII",
                "offset": 489676,
                "string": "expression recursion level exceeded"
            },
            {
                "encoding": "ASCII",
                "offset": 489712,
                "string": "recursion stack underflow"
            },
            {
                "encoding": "ASCII",
                "offset": 489738,
                "string": "syntax error in expression"
            },
            {
                "encoding": "ASCII",
                "offset": 489768,
                "string": "attempted assignment to non-variable"
            },
            {
                "encoding": "ASCII",
                "offset": 489805,
                "string": "bug: bad expassign token"
            },
            {
                "encoding": "ASCII",
                "offset": 489830,
                "string": "division by 0"
            },
            {
                "encoding": "ASCII",
                "offset": 489844,
                "string": "`:' expected for conditional expression"
            },
            {
                "encoding": "ASCII",
                "offset": 489884,
                "string": "expression expected"
            },
            {
                "encoding": "ASCII",
                "offset": 489904,
                "string": "exponent less than 0"
            },
            {
                "encoding": "ASCII",
                "offset": 489928,
                "string": "identifier expected after pre-increment or pre-decrement"
            },
            {
                "encoding": "ASCII",
                "offset": 489985,
                "string": "missing `)'"
            },
            {
                "encoding": "ASCII",
                "offset": 490000,
                "string": "syntax error: operand expected"
            },
            {
                "encoding": "ASCII",
                "offset": 490031,
                "string": "*/%+-&^|"
            },
            {
                "encoding": "ASCII",
                "offset": 490044,
                "string": "%s%s%s: %s (error token is \"%s\")"
            },
            {
                "encoding": "ASCII",
                "offset": 490078,
                "string": "value too great for base"
            },
            {
                "encoding": "ASCII",
                "offset": 490103,
                "string": "invalid arithmetic base"
            },
            {
                "encoding": "ASCII",
                "offset": 490127,
                "string": "invalid number"
            },
            {
                "encoding": "ASCII",
                "offset": 490320,
                "string": "<unknown>"
            },
            {
                "encoding": "ASCII",
                "offset": 490330,
                "string": "job-working-directory"
            },
            {
                "encoding": "ASCII",
                "offset": 490352,
                "string": "deleting stopped job %d with process group %ld"
            },
            {
                "encoding": "ASCII",
                "offset": 490400,
                "string": "add_process: pid %5ld (%s) marked as still alive"
            },
            {
                "encoding": "ASCII",
                "offset": 490449,
                "string": "[%d] %ld"
            },
            {
                "encoding": "ASCII",
                "offset": 490460,
                "string": "describe_pid: %ld: no such pid"
            },
            {
                "encoding": "ASCII",
                "offset": 490491,
                "string": "Signal %d"
            },
            {
                "encoding": "ASCII",
                "offset": 490501,
                "string": "Stopped"
            },
            {
                "encoding": "ASCII",
                "offset": 490509,
                "string": "Running"
            },
            {
                "encoding": "ASCII",
                "offset": 490517,
                "string": "Done(%d)"
            },
            {
                "encoding": "ASCII",
                "offset": 490526,
                "string": "Done"
            },
            {
                "encoding": "ASCII",
                "offset": 490531,
                "string": "Unknown status"
            },
            {
                "encoding": "ASCII",
                "offset": 490546,
                "string": "Stopped(%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 490558,
                "string": "Exit %d"
            },
            {
                "encoding": "ASCII",
                "offset": 490566,
                "string": "     "
            },
            {
                "encoding": "ASCII",
                "offset": 490580,
                "string": "  (wd: %s)"
            },
            {
                "encoding": "ASCII",
                "offset": 490594,
                "string": "%5ld"
            },
            {
                "encoding": "ASCII",
                "offset": 490602,
                "string": "(core dumped) "
            },
            {
                "encoding": "ASCII",
                "offset": 490620,
                "string": "[%d]%c "
            },
            {
                "encoding": "ASCII",
                "offset": 490633,
                "string": "fork"
            },
            {
                "encoding": "ASCII",
                "offset": 490638,
                "string": "child setpgid (%ld to %ld)"
            },
            {
                "encoding": "ASCII",
                "offset": 490665,
                "string": "[%ld: %d] tcsetattr"
            },
            {
                "encoding": "ASCII",
                "offset": 490688,
                "string": "wait: pid %ld is not a child of this shell"
            },
            {
                "encoding": "ASCII",
                "offset": 490732,
                "string": "wait_for: No record of process %ld"
            },
            {
                "encoding": "ASCII",
                "offset": 490768,
                "string": "wait_for_job: job %d is stopped"
            },
            {
                "encoding": "ASCII",
                "offset": 490800,
                "string": "%s: job %d already in background"
            },
            {
                "encoding": "ASCII",
                "offset": 490841,
                "string": "[%d]%s"
            },
            {
                "encoding": "ASCII",
                "offset": 490852,
                "string": "%s%s"
            },
            {
                "encoding": "ASCII",
                "offset": 490857,
                "string": "\t(wd: %s)"
            },
            {
                "encoding": "ASCII",
                "offset": 490867,
                "string": "%s: job has terminated"
            },
            {
                "encoding": "ASCII",
                "offset": 490890,
                "string": "SIGCHLD trap"
            },
            {
                "encoding": "ASCII",
                "offset": 490903,
                "string": "trap"
            },
            {
                "encoding": "ASCII",
                "offset": 490908,
                "string": "notify_of_job_status"
            },
            {
                "encoding": "ASCII",
                "offset": 490929,
                "string": "(wd now: %s)"
            },
            {
                "encoding": "ASCII",
                "offset": 490943,
                "string": "%s: line %d: "
            },
            {
                "encoding": "ASCII",
                "offset": 490957,
                "string": " (core dumped)"
            },
            {
                "encoding": "ASCII",
                "offset": 490972,
                "string": "no job control in this shell"
            },
            {
                "encoding": "ASCII",
                "offset": 491004,
                "string": "initialize_job_control: line discipline"
            },
            {
                "encoding": "ASCII",
                "offset": 491044,
                "string": "initialize_job_control: setpgid"
            },
            {
                "encoding": "ASCII",
                "offset": 491076,
                "string": "initialize_job_control: getpgrp failed"
            },
            {
                "encoding": "ASCII",
                "offset": 491132,
                "string": "bad substitution: no closing `%s' in %s"
            },
            {
                "encoding": "ASCII",
                "offset": 491180,
                "string": "%s: cannot assign list to array member"
            },
            {
                "encoding": "ASCII",
                "offset": 491460,
                "string": "sh-np"
            },
            {
                "encoding": "ASCII",
                "offset": 491468,
                "string": "cannot duplicate named pipe %s as fd %d"
            },
            {
                "encoding": "ASCII",
                "offset": 491508,
                "string": "cannot make pipe for process substitution"
            },
            {
                "encoding": "ASCII",
                "offset": 491552,
                "string": "cannot make child for process substitution"
            },
            {
                "encoding": "ASCII",
                "offset": 491595,
                "string": "process substitution"
            },
            {
                "encoding": "ASCII",
                "offset": 491616,
                "string": "cannot open named pipe %s for reading"
            },
            {
                "encoding": "ASCII",
                "offset": 491656,
                "string": "cannot open named pipe %s for writing"
            },
            {
                "encoding": "ASCII",
                "offset": 491696,
                "string": "cannout reset nodelay mode for fd %d"
            },
            {
                "encoding": "ASCII",
                "offset": 491736,
                "string": "command_substitute: cannot duplicate pipe as fd 1"
            },
            {
                "encoding": "ASCII",
                "offset": 491788,
                "string": "cannot make child for command substitution"
            },
            {
                "encoding": "ASCII",
                "offset": 491831,
                "string": "/dev/null"
            },
            {
                "encoding": "ASCII",
                "offset": 491844,
                "string": "cannot make pipe for command substitution"
            },
            {
                "encoding": "ASCII",
                "offset": 491886,
                "string": "command substitution"
            },
            {
                "encoding": "ASCII",
                "offset": 491907,
                "string": "%s: parameter null or not set"
            },
            {
                "encoding": "ASCII",
                "offset": 491937,
                "string": "%s: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 492068,
                "string": "%s: substring expression < 0"
            },
            {
                "encoding": "ASCII",
                "offset": 492097,
                "string": "#%:-=?+/}"
            },
            {
                "encoding": "ASCII",
                "offset": 492107,
                "string": "%s: bad substitution"
            },
            {
                "encoding": "ASCII",
                "offset": 492128,
                "string": "%:=+/"
            },
            {
                "encoding": "ASCII",
                "offset": 492140,
                "string": "$%s: cannot assign in this way"
            },
            {
                "encoding": "ASCII",
                "offset": 492544,
                "string": "bad substitution: no closing \"`\" in %s"
            },
            {
                "encoding": "ASCII",
                "offset": 492587,
                "string": "no match: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 492604,
                "string": "MAILCHECK"
            },
            {
                "encoding": "ASCII",
                "offset": 492614,
                "string": "MAILPATH"
            },
            {
                "encoding": "ASCII",
                "offset": 492623,
                "string": "MAIL"
            },
            {
                "encoding": "ASCII",
                "offset": 492630,
                "string": "You have mail in $_"
            },
            {
                "encoding": "ASCII",
                "offset": 492650,
                "string": "You have new mail in $_"
            },
            {
                "encoding": "ASCII",
                "offset": 492674,
                "string": "The mail in %s has been read"
            },
            {
                "encoding": "ASCII",
                "offset": 492704,
                "string": "EXIT"
            },
            {
                "encoding": "ASCII",
                "offset": 492709,
                "string": "SIGHUP"
            },
            {
                "encoding": "ASCII",
                "offset": 492716,
                "string": "SIGINT"
            },
            {
                "encoding": "ASCII",
                "offset": 492723,
                "string": "SIGQUIT"
            },
            {
                "encoding": "ASCII",
                "offset": 492731,
                "string": "SIGILL"
            },
            {
                "encoding": "ASCII",
                "offset": 492738,
                "string": "SIGTRAP"
            },
            {
                "encoding": "ASCII",
                "offset": 492746,
                "string": "SIGABRT"
            },
            {
                "encoding": "ASCII",
                "offset": 492754,
                "string": "SIGEMT"
            },
            {
                "encoding": "ASCII",
                "offset": 492761,
                "string": "SIGFPE"
            },
            {
                "encoding": "ASCII",
                "offset": 492768,
                "string": "SIGKILL"
            },
            {
                "encoding": "ASCII",
                "offset": 492776,
                "string": "SIGBUS"
            },
            {
                "encoding": "ASCII",
                "offset": 492783,
                "string": "SIGSEGV"
            },
            {
                "encoding": "ASCII",
                "offset": 492791,
                "string": "SIGSYS"
            },
            {
                "encoding": "ASCII",
                "offset": 492798,
                "string": "SIGPIPE"
            },
            {
                "encoding": "ASCII",
                "offset": 492806,
                "string": "SIGALRM"
            },
            {
                "encoding": "ASCII",
                "offset": 492814,
                "string": "SIGTERM"
            },
            {
                "encoding": "ASCII",
                "offset": 492822,
                "string": "SIGURG"
            },
            {
                "encoding": "ASCII",
                "offset": 492829,
                "string": "SIGSTOP"
            },
            {
                "encoding": "ASCII",
                "offset": 492837,
                "string": "SIGTSTP"
            },
            {
                "encoding": "ASCII",
                "offset": 492845,
                "string": "SIGCONT"
            },
            {
                "encoding": "ASCII",
                "offset": 492853,
                "string": "SIGCHLD"
            },
            {
                "encoding": "ASCII",
                "offset": 492861,
                "string": "SIGTTIN"
            },
            {
                "encoding": "ASCII",
                "offset": 492869,
                "string": "SIGTTOU"
            },
            {
                "encoding": "ASCII",
                "offset": 492877,
                "string": "SIGIO"
            },
            {
                "encoding": "ASCII",
                "offset": 492883,
                "string": "SIGXCPU"
            },
            {
                "encoding": "ASCII",
                "offset": 492891,
                "string": "SIGXFSZ"
            },
            {
                "encoding": "ASCII",
                "offset": 492899,
                "string": "SIGVTALRM"
            },
            {
                "encoding": "ASCII",
                "offset": 492909,
                "string": "SIGPROF"
            },
            {
                "encoding": "ASCII",
                "offset": 492917,
                "string": "SIGWINCH"
            },
            {
                "encoding": "ASCII",
                "offset": 492926,
                "string": "SIGLOST"
            },
            {
                "encoding": "ASCII",
                "offset": 492934,
                "string": "SIGUSR1"
            },
            {
                "encoding": "ASCII",
                "offset": 492942,
                "string": "SIGUSR2"
            },
            {
                "encoding": "ASCII",
                "offset": 492950,
                "string": "DEBUG"
            },
            {
                "encoding": "ASCII",
                "offset": 492960,
                "string": "RETURN"
            },
            {
                "encoding": "ASCII",
                "offset": 492967,
                "string": "invalid signal number"
            },
            {
                "encoding": "ASCII",
                "offset": 492996,
                "string": "run_pending_traps: bad value in trap_list[%d]: %p"
            },
            {
                "encoding": "ASCII",
                "offset": 493046,
                "string": "trap"
            },
            {
                "encoding": "ASCII",
                "offset": 493052,
                "string": "run_pending_traps: signal handler is SIG_DFL, resending %d (%s) to myself"
            },
            {
                "encoding": "ASCII",
                "offset": 493126,
                "string": "trap_handler: bad signal %d"
            },
            {
                "encoding": "ASCII",
                "offset": 493154,
                "string": "exit trap"
            },
            {
                "encoding": "ASCII",
                "offset": 493164,
                "string": "debug trap"
            },
            {
                "encoding": "ASCII",
                "offset": 493175,
                "string": "error trap"
            },
            {
                "encoding": "ASCII",
                "offset": 493186,
                "string": "return trap"
            },
            {
                "encoding": "ASCII",
                "offset": 493198,
                "string": "interrupt trap"
            },
            {
                "encoding": "ASCII",
                "offset": 493216,
                "string": "save_bash_input: buffer already exists for new fd %d"
            },
            {
                "encoding": "ASCII",
                "offset": 493272,
                "string": "cannot allocate new file descriptor for bash input from fd %d"
            },
            {
                "encoding": "ASCII",
                "offset": 493584,
                "string": "GLOBIGNORE"
            },
            {
                "encoding": "ASCII",
                "offset": 493596,
                "string": "argument expected"
            },
            {
                "encoding": "ASCII",
                "offset": 493616,
                "string": "%s: integer expression expected"
            },
            {
                "encoding": "ASCII",
                "offset": 493648,
                "string": "/dev/std"
            },
            {
                "encoding": "ASCII",
                "offset": 493660,
                "string": "/dev/fd/"
            },
            {
                "encoding": "ASCII",
                "offset": 493677,
                "string": "`)' expected, found %s"
            },
            {
                "encoding": "ASCII",
                "offset": 493700,
                "string": "`)' expected"
            },
            {
                "encoding": "ASCII",
                "offset": 493713,
                "string": "%s: unary operator expected"
            },
            {
                "encoding": "ASCII",
                "offset": 493768,
                "string": "%s: binary operator expected"
            },
            {
                "encoding": "ASCII",
                "offset": 494236,
                "string": "missing `]'"
            },
            {
                "encoding": "ASCII",
                "offset": 494248,
                "string": "too many arguments"
            },
            {
                "encoding": "ASCII",
                "offset": 494272,
                "string": "release"
            },
            {
                "encoding": "ASCII",
                "offset": 494280,
                "string": "@(#)Bash version 3.1.17(1) release GNU"
            },
            {
                "encoding": "ASCII",
                "offset": 494319,
                "string": "%s.%d(%d)-%s"
            },
            {
                "encoding": "ASCII",
                "offset": 494332,
                "string": "%s.%d(%d)"
            },
            {
                "encoding": "ASCII",
                "offset": 494342,
                "string": "i686-pc-msys"
            },
            {
                "encoding": "ASCII",
                "offset": 494355,
                "string": "GNU bash, version %s (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 494384,
                "string": "Copyright (C) 2005 Free Software Foundation, Inc."
            },
            {
                "encoding": "ASCII",
                "offset": 494438,
                "string": ";|&("
            },
            {
                "encoding": "ASCII",
                "offset": 494447,
                "string": ";|&()"
            },
            {
                "encoding": "ASCII",
                "offset": 494460,
                "string": "bad array subscript"
            },
            {
                "encoding": "ASCII",
                "offset": 494480,
                "string": "array assign"
            },
            {
                "encoding": "ASCII",
                "offset": 494496,
                "string": "%s: cannot assign to non-numeric index"
            },
            {
                "encoding": "ASCII",
                "offset": 494535,
                "string": "%s[%s: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 494545,
                "string": "[%s]: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 494554,
                "string": "%s=%s"
            },
            {
                "encoding": "ASCII",
                "offset": 494561,
                "string": "'()'"
            },
            {
                "encoding": "ASCII",
                "offset": 494576,
                "string": "HISTIGNORE"
            },
            {
                "encoding": "ASCII",
                "offset": 494587,
                "string": ";&()|<>"
            },
            {
                "encoding": "ASCII",
                "offset": 494595,
                "string": "histchars"
            },
            {
                "encoding": "ASCII",
                "offset": 494605,
                "string": "HISTCONTROL"
            },
            {
                "encoding": "ASCII",
                "offset": 494617,
                "string": "HISTSIZE"
            },
            {
                "encoding": "ASCII",
                "offset": 494626,
                "string": "HISTFILESIZE"
            },
            {
                "encoding": "ASCII",
                "offset": 494639,
                "string": "HISTFILE"
            },
            {
                "encoding": "ASCII",
                "offset": 494648,
                "string": "%s: cannot create: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 494679,
                "string": "%s%s%s"
            },
            {
                "encoding": "ASCII",
                "offset": 494691,
                "string": "\"'@><=;|&(:"
            },
            {
                "encoding": "ASCII",
                "offset": 494706,
                "string": "\"'><=;|&(:"
            },
            {
                "encoding": "ASCII",
                "offset": 494717,
                "string": "comment-begin"
            },
            {
                "encoding": "ASCII",
                "offset": 494738,
                "string": "TERM"
            },
            {
                "encoding": "ASCII",
                "offset": 494743,
                "string": "Bash"
            },
            {
                "encoding": "ASCII",
                "offset": 494748,
                "string": "shell-expand-line"
            },
            {
                "encoding": "ASCII",
                "offset": 494766,
                "string": "history-expand-line"
            },
            {
                "encoding": "ASCII",
                "offset": 494786,
                "string": "magic-space"
            },
            {
                "encoding": "ASCII",
                "offset": 494798,
                "string": "alias-expand-line"
            },
            {
                "encoding": "ASCII",
                "offset": 494816,
                "string": "history-and-alias-expand-line"
            },
            {
                "encoding": "ASCII",
                "offset": 494846,
                "string": "insert-last-argument"
            },
            {
                "encoding": "ASCII",
                "offset": 494867,
                "string": "operate-and-get-next"
            },
            {
                "encoding": "ASCII",
                "offset": 494888,
                "string": "display-shell-version"
            },
            {
                "encoding": "ASCII",
                "offset": 494910,
                "string": "edit-and-execute-command"
            },
            {
                "encoding": "ASCII",
                "offset": 494935,
                "string": "complete-into-braces"
            },
            {
                "encoding": "ASCII",
                "offset": 494956,
                "string": "complete-filename"
            },
            {
                "encoding": "ASCII",
                "offset": 494974,
                "string": "possible-filename-completions"
            },
            {
                "encoding": "ASCII",
                "offset": 495004,
                "string": "complete-username"
            },
            {
                "encoding": "ASCII",
                "offset": 495022,
                "string": "possible-username-completions"
            },
            {
                "encoding": "ASCII",
                "offset": 495052,
                "string": "complete-hostname"
            },
            {
                "encoding": "ASCII",
                "offset": 495070,
                "string": "possible-hostname-completions"
            },
            {
                "encoding": "ASCII",
                "offset": 495100,
                "string": "complete-variable"
            },
            {
                "encoding": "ASCII",
                "offset": 495118,
                "string": "possible-variable-completions"
            },
            {
                "encoding": "ASCII",
                "offset": 495148,
                "string": "complete-command"
            },
            {
                "encoding": "ASCII",
                "offset": 495165,
                "string": "possible-command-completions"
            },
            {
                "encoding": "ASCII",
                "offset": 495194,
                "string": "glob-complete-word"
            },
            {
                "encoding": "ASCII",
                "offset": 495213,
                "string": "glob-expand-word"
            },
            {
                "encoding": "ASCII",
                "offset": 495230,
                "string": "glob-list-expansions"
            },
            {
                "encoding": "ASCII",
                "offset": 495251,
                "string": "dynamic-complete-history"
            },
            {
                "encoding": "ASCII",
                "offset": 495279,
                "string": "\\\"'@<>=;|&()#$`?*[!:{"
            },
            {
                "encoding": "ASCII",
                "offset": 495304,
                "string": "HOSTFILE"
            },
            {
                "encoding": "ASCII",
                "offset": 495313,
                "string": "hostname_completion_file"
            },
            {
                "encoding": "ASCII",
                "offset": 495338,
                "string": "/etc/hosts"
            },
            {
                "encoding": "ASCII",
                "offset": 495352,
                "string": "$include "
            },
            {
                "encoding": "ASCII",
                "offset": 495362,
                "string": "%s %d"
            },
            {
                "encoding": "ASCII",
                "offset": 495370,
                "string": "C-xC-e"
            },
            {
                "encoding": "ASCII",
                "offset": 495378,
                "string": "fc -e vi"
            },
            {
                "encoding": "ASCII",
                "offset": 495388,
                "string": "fc -e \"${VISUAL:-${EDITOR:-vi}}\""
            },
            {
                "encoding": "ASCII",
                "offset": 495424,
                "string": "fc -e \"${VISUAL:-${EDITOR:-emacs}}\""
            },
            {
                "encoding": "ASCII",
                "offset": 495460,
                "string": ";|&{(`"
            },
            {
                "encoding": "ASCII",
                "offset": 495467,
                "string": "()<>;&| \t"
            },
            {
                "encoding": "ASCII",
                "offset": 495480,
                "string": "completion-ignore-case"
            },
            {
                "encoding": "ASCII",
                "offset": 495506,
                "string": "PATH"
            },
            {
                "encoding": "ASCII",
                "offset": 495514,
                "string": "FIGNORE"
            },
            {
                "encoding": "ASCII",
                "offset": 495522,
                "string": "symlink-hook"
            },
            {
                "encoding": "ASCII",
                "offset": 495541,
                "string": "bash_execute_unix_command"
            },
            {
                "encoding": "ASCII",
                "offset": 495568,
                "string": "bash_execute_unix_command: cannot find keymap for command"
            },
            {
                "encoding": "ASCII",
                "offset": 495626,
                "string": "no closing `%c' in %s"
            },
            {
                "encoding": "ASCII",
                "offset": 495648,
                "string": "%s: first non-whitespace character is not `\"'"
            },
            {
                "encoding": "ASCII",
                "offset": 495694,
                "string": "%s: missing colon separator"
            },
            {
                "encoding": "ASCII",
                "offset": 495725,
                "string": "LC_CTYPE"
            },
            {
                "encoding": "ASCII",
                "offset": 495734,
                "string": "LC_COLLATE"
            },
            {
                "encoding": "ASCII",
                "offset": 495745,
                "string": "LC_MESSAGES"
            },
            {
                "encoding": "ASCII",
                "offset": 495757,
                "string": "LC_NUMERIC"
            },
            {
                "encoding": "ASCII",
                "offset": 495768,
                "string": "LC_TIME"
            },
            {
                "encoding": "ASCII",
                "offset": 495776,
                "string": "TEXTDOMAIN"
            },
            {
                "encoding": "ASCII",
                "offset": 495787,
                "string": "TEXTDOMAINDIR"
            },
            {
                "encoding": "ASCII",
                "offset": 495801,
                "string": "POSIX"
            },
            {
                "encoding": "ASCII",
                "offset": 495812,
                "string": "#: %s:%d"
            },
            {
                "encoding": "ASCII",
                "offset": 495821,
                "string": "msgid %s%s"
            },
            {
                "encoding": "ASCII",
                "offset": 495832,
                "string": "msgstr \"\""
            },
            {
                "encoding": "ASCII",
                "offset": 495843,
                "string": "\"%s\""
            },
            {
                "encoding": "ASCII",
                "offset": 495849,
                "string": "()<>;&| \t"
            },
            {
                "encoding": "ASCII",
                "offset": 495860,
                "string": "PATH"
            },
            {
                "encoding": "ASCII",
                "offset": 495868,
                "string": "file descriptor out of range"
            },
            {
                "encoding": "ASCII",
                "offset": 495897,
                "string": "%s: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 495904,
                "string": "%s: ambiguous redirect"
            },
            {
                "encoding": "ASCII",
                "offset": 495928,
                "string": "%s: restricted: cannot redirect output"
            },
            {
                "encoding": "ASCII",
                "offset": 495968,
                "string": "%s: cannot overwrite existing file"
            },
            {
                "encoding": "ASCII",
                "offset": 496004,
                "string": "cannot create temp file for here document: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 496054,
                "string": "sh-thd"
            },
            {
                "encoding": "ASCII",
                "offset": 496061,
                "string": "/dev/fd/[0-9]*"
            },
            {
                "encoding": "ASCII",
                "offset": 496076,
                "string": "/dev/stderr"
            },
            {
                "encoding": "ASCII",
                "offset": 496088,
                "string": "/dev/stdin"
            },
            {
                "encoding": "ASCII",
                "offset": 496099,
                "string": "/dev/stdout"
            },
            {
                "encoding": "ASCII",
                "offset": 496111,
                "string": "/dev/tcp/*/*"
            },
            {
                "encoding": "ASCII",
                "offset": 496124,
                "string": "/dev/udp/*/*"
            },
            {
                "encoding": "ASCII",
                "offset": 496236,
                "string": "redirection error: cannot duplicate fd"
            },
            {
                "encoding": "ASCII",
                "offset": 496280,
                "string": "COMP_WORDS"
            },
            {
                "encoding": "ASCII",
                "offset": 496291,
                "string": "COMP_LINE"
            },
            {
                "encoding": "ASCII",
                "offset": 496301,
                "string": "COMP_POINT"
            },
            {
                "encoding": "ASCII",
                "offset": 496312,
                "string": "COMP_CWORD"
            },
            {
                "encoding": "ASCII",
                "offset": 496324,
                "string": "COMPREPLY"
            },
            {
                "encoding": "ASCII",
                "offset": 496336,
                "string": "completion: function `%s' not found"
            },
            {
                "encoding": "ASCII",
                "offset": 496372,
                "string": "()<>;&| \t"
            },
            {
                "encoding": "ASCII",
                "offset": 496384,
                "string": "progcomp_insert: %s: NULL COMPSPEC"
            },
            {
                "encoding": "ASCII",
                "offset": 496420,
                "string": "xmalloc: cannot allocate %lu bytes (%lu bytes allocated)"
            },
            {
                "encoding": "ASCII",
                "offset": 496480,
                "string": "xrealloc: cannot reallocate %lu bytes (%lu bytes allocated)"
            },
            {
                "encoding": "ASCII",
                "offset": 496540,
                "string": "alias"
            },
            {
                "encoding": "ASCII",
                "offset": 496548,
                "string": "alias [-p] [name[=value] ... ]"
            },
            {
                "encoding": "ASCII",
                "offset": 496579,
                "string": "unalias"
            },
            {
                "encoding": "ASCII",
                "offset": 496587,
                "string": "unalias [-a] name [name ...]"
            },
            {
                "encoding": "ASCII",
                "offset": 496616,
                "string": "bind"
            },
            {
                "encoding": "ASCII",
                "offset": 496624,
                "string": "bind [-lpvsPVS] [-m keymap] [-f filename] [-q name] [-u name] [-r keyseq] [-x keyseq:shell-command] [keyseq:readline-function or readline-command]"
            },
            {
                "encoding": "ASCII",
                "offset": 496771,
                "string": "break"
            },
            {
                "encoding": "ASCII",
                "offset": 496777,
                "string": "break [n]"
            },
            {
                "encoding": "ASCII",
                "offset": 496787,
                "string": "continue"
            },
            {
                "encoding": "ASCII",
                "offset": 496796,
                "string": "continue [n]"
            },
            {
                "encoding": "ASCII",
                "offset": 496809,
                "string": "builtin"
            },
            {
                "encoding": "ASCII",
                "offset": 496820,
                "string": "builtin [shell-builtin [arg ...]]"
            },
            {
                "encoding": "ASCII",
                "offset": 496854,
                "string": "caller"
            },
            {
                "encoding": "ASCII",
                "offset": 496861,
                "string": "caller [EXPR]"
            },
            {
                "encoding": "ASCII",
                "offset": 496878,
                "string": "cd [-L|-P] [dir]"
            },
            {
                "encoding": "ASCII",
                "offset": 496899,
                "string": "pwd [-LPW]"
            },
            {
                "encoding": "ASCII",
                "offset": 496912,
                "string": "true"
            },
            {
                "encoding": "ASCII",
                "offset": 496917,
                "string": "false"
            },
            {
                "encoding": "ASCII",
                "offset": 496923,
                "string": "command"
            },
            {
                "encoding": "ASCII",
                "offset": 496932,
                "string": "command [-pVv] command [arg ...]"
            },
            {
                "encoding": "ASCII",
                "offset": 496965,
                "string": "declare"
            },
            {
                "encoding": "ASCII",
                "offset": 496976,
                "string": "declare [-afFirtx] [-p] [name[=value] ...]"
            },
            {
                "encoding": "ASCII",
                "offset": 497019,
                "string": "typeset"
            },
            {
                "encoding": "ASCII",
                "offset": 497028,
                "string": "typeset [-afFirtx] [-p] name[=value] ..."
            },
            {
                "encoding": "ASCII",
                "offset": 497069,
                "string": "local"
            },
            {
                "encoding": "ASCII",
                "offset": 497075,
                "string": "local name[=value] ..."
            },
            {
                "encoding": "ASCII",
                "offset": 497098,
                "string": "echo"
            },
            {
                "encoding": "ASCII",
                "offset": 497103,
                "string": "echo [-neE] [arg ...]"
            },
            {
                "encoding": "ASCII",
                "offset": 497125,
                "string": "enable"
            },
            {
                "encoding": "ASCII",
                "offset": 497132,
                "string": "enable [-pnds] [-a] [-f filename] [name ...]"
            },
            {
                "encoding": "ASCII",
                "offset": 497177,
                "string": "eval"
            },
            {
                "encoding": "ASCII",
                "offset": 497182,
                "string": "eval [arg ...]"
            },
            {
                "encoding": "ASCII",
                "offset": 497197,
                "string": "getopts"
            },
            {
                "encoding": "ASCII",
                "offset": 497205,
                "string": "getopts optstring name [arg]"
            },
            {
                "encoding": "ASCII",
                "offset": 497234,
                "string": "exec"
            },
            {
                "encoding": "ASCII",
                "offset": 497240,
                "string": "exec [-cl] [-a name] file [redirection ...]"
            },
            {
                "encoding": "ASCII",
                "offset": 497284,
                "string": "exit"
            },
            {
                "encoding": "ASCII",
                "offset": 497289,
                "string": "exit [n]"
            },
            {
                "encoding": "ASCII",
                "offset": 497298,
                "string": "logout"
            },
            {
                "encoding": "ASCII",
                "offset": 497308,
                "string": "fc [-e ename] [-nlr] [first] [last] or fc -s [pat=rep] [cmd]"
            },
            {
                "encoding": "ASCII",
                "offset": 497372,
                "string": "fg [job_spec]"
            },
            {
                "encoding": "ASCII",
                "offset": 497389,
                "string": "bg [job_spec ...]"
            },
            {
                "encoding": "ASCII",
                "offset": 497407,
                "string": "hash"
            },
            {
                "encoding": "ASCII",
                "offset": 497412,
                "string": "hash [-lr] [-p pathname] [-dt] [name ...]"
            },
            {
                "encoding": "ASCII",
                "offset": 497454,
                "string": "help"
            },
            {
                "encoding": "ASCII",
                "offset": 497459,
                "string": "help [-s] [pattern ...]"
            },
            {
                "encoding": "ASCII",
                "offset": 497483,
                "string": "history"
            },
            {
                "encoding": "ASCII",
                "offset": 497492,
                "string": "history [-c] [-d offset] [n] or history -awrn [filename] or history -ps arg [arg...]"
            },
            {
                "encoding": "ASCII",
                "offset": 497577,
                "string": "jobs"
            },
            {
                "encoding": "ASCII",
                "offset": 497584,
                "string": "jobs [-lnprs] [jobspec ...] or jobs -x command [args]"
            },
            {
                "encoding": "ASCII",
                "offset": 497638,
                "string": "disown"
            },
            {
                "encoding": "ASCII",
                "offset": 497648,
                "string": "disown [-h] [-ar] [jobspec ...]"
            },
            {
                "encoding": "ASCII",
                "offset": 497680,
                "string": "kill"
            },
            {
                "encoding": "ASCII",
                "offset": 497688,
                "string": "kill [-s sigspec | -n signum | -sigspec] pid | jobspec ... or kill -l [sigspec]"
            },
            {
                "encoding": "ASCII",
                "offset": 497772,
                "string": "let arg [arg ...]"
            },
            {
                "encoding": "ASCII",
                "offset": 497790,
                "string": "read"
            },
            {
                "encoding": "ASCII",
                "offset": 497796,
                "string": "read [-ers] [-u fd] [-t timeout] [-p prompt] [-a array] [-n nchars] [-d delim] [name ...]"
            },
            {
                "encoding": "ASCII",
                "offset": 497886,
                "string": "return"
            },
            {
                "encoding": "ASCII",
                "offset": 497893,
                "string": "return [n]"
            },
            {
                "encoding": "ASCII",
                "offset": 497908,
                "string": "set [--abefhkmnptuvxBCHP] [-o option] [arg ...]"
            },
            {
                "encoding": "ASCII",
                "offset": 497956,
                "string": "unset"
            },
            {
                "encoding": "ASCII",
                "offset": 497962,
                "string": "unset [-f] [-v] [name ...]"
            },
            {
                "encoding": "ASCII",
                "offset": 497989,
                "string": "export"
            },
            {
                "encoding": "ASCII",
                "offset": 497996,
                "string": "export [-nf] [name[=value] ...] or export -p"
            },
            {
                "encoding": "ASCII",
                "offset": 498041,
                "string": "readonly"
            },
            {
                "encoding": "ASCII",
                "offset": 498052,
                "string": "readonly [-af] [name[=value] ...] or readonly -p"
            },
            {
                "encoding": "ASCII",
                "offset": 498101,
                "string": "shift"
            },
            {
                "encoding": "ASCII",
                "offset": 498107,
                "string": "shift [n]"
            },
            {
                "encoding": "ASCII",
                "offset": 498117,
                "string": "source"
            },
            {
                "encoding": "ASCII",
                "offset": 498124,
                "string": "source filename [arguments]"
            },
            {
                "encoding": "ASCII",
                "offset": 498154,
                "string": ". filename [arguments]"
            },
            {
                "encoding": "ASCII",
                "offset": 498177,
                "string": "suspend"
            },
            {
                "encoding": "ASCII",
                "offset": 498185,
                "string": "suspend [-f]"
            },
            {
                "encoding": "ASCII",
                "offset": 498198,
                "string": "test"
            },
            {
                "encoding": "ASCII",
                "offset": 498203,
                "string": "test [expr]"
            },
            {
                "encoding": "ASCII",
                "offset": 498217,
                "string": "[ arg... ]"
            },
            {
                "encoding": "ASCII",
                "offset": 498228,
                "string": "times"
            },
            {
                "encoding": "ASCII",
                "offset": 498234,
                "string": "trap"
            },
            {
                "encoding": "ASCII",
                "offset": 498240,
                "string": "trap [-lp] [arg signal_spec ...]"
            },
            {
                "encoding": "ASCII",
                "offset": 498273,
                "string": "type"
            },
            {
                "encoding": "ASCII",
                "offset": 498278,
                "string": "type [-afptP] name [name ...]"
            },
            {
                "encoding": "ASCII",
                "offset": 498308,
                "string": "ulimit"
            },
            {
                "encoding": "ASCII",
                "offset": 498316,
                "string": "ulimit [-SHacdfilmnpqstuvx] [limit]"
            },
            {
                "encoding": "ASCII",
                "offset": 498352,
                "string": "umask"
            },
            {
                "encoding": "ASCII",
                "offset": 498358,
                "string": "umask [-p] [-S] [mode]"
            },
            {
                "encoding": "ASCII",
                "offset": 498381,
                "string": "wait"
            },
            {
                "encoding": "ASCII",
                "offset": 498386,
                "string": "wait [n]"
            },
            {
                "encoding": "ASCII",
                "offset": 498400,
                "string": "for NAME [in WORDS ... ;] do COMMANDS; done"
            },
            {
                "encoding": "ASCII",
                "offset": 498444,
                "string": "for (("
            },
            {
                "encoding": "ASCII",
                "offset": 498452,
                "string": "for (( exp1; exp2; exp3 )); do COMMANDS; done"
            },
            {
                "encoding": "ASCII",
                "offset": 498498,
                "string": "select"
            },
            {
                "encoding": "ASCII",
                "offset": 498508,
                "string": "select NAME [in WORDS ... ;] do COMMANDS; done"
            },
            {
                "encoding": "ASCII",
                "offset": 498555,
                "string": "time"
            },
            {
                "encoding": "ASCII",
                "offset": 498560,
                "string": "time [-p] PIPELINE"
            },
            {
                "encoding": "ASCII",
                "offset": 498579,
                "string": "case"
            },
            {
                "encoding": "ASCII",
                "offset": 498584,
                "string": "case WORD in [PATTERN [| PATTERN]...) COMMANDS ;;]... esac"
            },
            {
                "encoding": "ASCII",
                "offset": 498648,
                "string": "if COMMANDS; then COMMANDS; [ elif COMMANDS; then COMMANDS; ]... [ else COMMANDS; ] fi"
            },
            {
                "encoding": "ASCII",
                "offset": 498735,
                "string": "while"
            },
            {
                "encoding": "ASCII",
                "offset": 498744,
                "string": "while COMMANDS; do COMMANDS; done"
            },
            {
                "encoding": "ASCII",
                "offset": 498778,
                "string": "until"
            },
            {
                "encoding": "ASCII",
                "offset": 498784,
                "string": "until COMMANDS; do COMMANDS; done"
            },
            {
                "encoding": "ASCII",
                "offset": 498818,
                "string": "function"
            },
            {
                "encoding": "ASCII",
                "offset": 498828,
                "string": "function NAME { COMMANDS ; } or NAME () { COMMANDS ; }"
            },
            {
                "encoding": "ASCII",
                "offset": 498883,
                "string": "{ ... }"
            },
            {
                "encoding": "ASCII",
                "offset": 498891,
                "string": "{ COMMANDS ; }"
            },
            {
                "encoding": "ASCII",
                "offset": 498908,
                "string": "JOB_SPEC [&]"
            },
            {
                "encoding": "ASCII",
                "offset": 498921,
                "string": "(( ... ))"
            },
            {
                "encoding": "ASCII",
                "offset": 498931,
                "string": "(( expression ))"
            },
            {
                "encoding": "ASCII",
                "offset": 498948,
                "string": "[[ ... ]]"
            },
            {
                "encoding": "ASCII",
                "offset": 498958,
                "string": "[[ expression ]]"
            },
            {
                "encoding": "ASCII",
                "offset": 498975,
                "string": "variables"
            },
            {
                "encoding": "ASCII",
                "offset": 498988,
                "string": "variables - Some variable names and meanings"
            },
            {
                "encoding": "ASCII",
                "offset": 499033,
                "string": "pushd"
            },
            {
                "encoding": "ASCII",
                "offset": 499039,
                "string": "pushd [dir | +N | -N] [-n]"
            },
            {
                "encoding": "ASCII",
                "offset": 499066,
                "string": "popd"
            },
            {
                "encoding": "ASCII",
                "offset": 499071,
                "string": "popd [+N | -N] [-n]"
            },
            {
                "encoding": "ASCII",
                "offset": 499091,
                "string": "dirs"
            },
            {
                "encoding": "ASCII",
                "offset": 499096,
                "string": "dirs [-clpv] [+N] [-N]"
            },
            {
                "encoding": "ASCII",
                "offset": 499119,
                "string": "shopt"
            },
            {
                "encoding": "ASCII",
                "offset": 499128,
                "string": "shopt [-pqsu] [-o long-option] optname [optname...]"
            },
            {
                "encoding": "ASCII",
                "offset": 499180,
                "string": "printf"
            },
            {
                "encoding": "ASCII",
                "offset": 499188,
                "string": "printf [-v var] format [arguments]"
            },
            {
                "encoding": "ASCII",
                "offset": 499223,
                "string": "complete"
            },
            {
                "encoding": "ASCII",
                "offset": 499232,
                "string": "complete [-abcdefgjksuv] [-pr] [-o option] [-A action] [-G globpat] [-W wordlist] [-P prefix] [-S suffix] [-X filterpat] [-F function] [-C command] [name ...]"
            },
            {
                "encoding": "ASCII",
                "offset": 499391,
                "string": "compgen"
            },
            {
                "encoding": "ASCII",
                "offset": 499400,
                "string": "compgen [-abcdefgjksuv] [-o option] [-A action] [-G globpat] [-W wordlist] [-P prefix] [-S suffix] [-X filterpat] [-F function] [-C command] [word]"
            },
            {
                "encoding": "ASCII",
                "offset": 499548,
                "string": " `alias' with no arguments or with the -p option prints the list"
            },
            {
                "encoding": "ASCII",
                "offset": 499613,
                "string": "    of aliases in the form alias NAME=VALUE on standard output."
            },
            {
                "encoding": "ASCII",
                "offset": 499677,
                "string": "    Otherwise, an alias is defined for each NAME whose VALUE is given."
            },
            {
                "encoding": "ASCII",
                "offset": 499748,
                "string": "    A trailing space in VALUE causes the next word to be checked for"
            },
            {
                "encoding": "ASCII",
                "offset": 499817,
                "string": "    alias substitution when the alias is expanded.  Alias returns"
            },
            {
                "encoding": "ASCII",
                "offset": 499883,
                "string": "    true unless a NAME is given for which no alias has been defined."
            },
            {
                "encoding": "ASCII",
                "offset": 499960,
                "string": " Remove NAMEs from the list of defined aliases.  If the -a option is given,"
            },
            {
                "encoding": "ASCII",
                "offset": 500036,
                "string": "    then remove all alias definitions."
            },
            {
                "encoding": "ASCII",
                "offset": 500084,
                "string": " Bind a key sequence to a Readline function or a macro, or set"
            },
            {
                "encoding": "ASCII",
                "offset": 500147,
                "string": "    a Readline variable.  The non-option argument syntax is equivalent"
            },
            {
                "encoding": "ASCII",
                "offset": 500218,
                "string": "    to that found in ~/.inputrc, but must be passed as a single argument:"
            },
            {
                "encoding": "ASCII",
                "offset": 500292,
                "string": "    bind '\"\\C-x\\C-r\": re-read-init-file'."
            },
            {
                "encoding": "ASCII",
                "offset": 500334,
                "string": "    bind accepts the following options:"
            },
            {
                "encoding": "ASCII",
                "offset": 500374,
                "string": "      -m  keymap         Use `keymap' as the keymap for the duration of this"
            },
            {
                "encoding": "ASCII",
                "offset": 500451,
                "string": "                         command.  Acceptable keymap names are emacs,"
            },
            {
                "encoding": "ASCII",
                "offset": 500521,
                "string": "                         emacs-standard, emacs-meta, emacs-ctlx, vi, vi-move,"
            },
            {
                "encoding": "ASCII",
                "offset": 500599,
                "string": "                         vi-command, and vi-insert."
            },
            {
                "encoding": "ASCII",
                "offset": 500651,
                "string": "      -l                 List names of functions."
            },
            {
                "encoding": "ASCII",
                "offset": 500701,
                "string": "      -P                 List function names and bindings."
            },
            {
                "encoding": "ASCII",
                "offset": 500760,
                "string": "      -p                 List functions and bindings in a form that can be"
            },
            {
                "encoding": "ASCII",
                "offset": 500835,
                "string": "                         reused as input."
            },
            {
                "encoding": "ASCII",
                "offset": 500877,
                "string": "      -r  keyseq         Remove the binding for KEYSEQ."
            },
            {
                "encoding": "ASCII",
                "offset": 500933,
                "string": "      -x  keyseq:shell-command\tCause SHELL-COMMAND to be executed when"
            },
            {
                "encoding": "ASCII",
                "offset": 501004,
                "string": "    \t\t\t\tKEYSEQ is entered."
            },
            {
                "encoding": "ASCII",
                "offset": 501031,
                "string": "      -f  filename       Read key bindings from FILENAME."
            },
            {
                "encoding": "ASCII",
                "offset": 501089,
                "string": "      -q  function-name  Query about which keys invoke the named function."
            },
            {
                "encoding": "ASCII",
                "offset": 501164,
                "string": "      -u  function-name  Unbind all keys which are bound to the named function."
            },
            {
                "encoding": "ASCII",
                "offset": 501244,
                "string": "      -V                 List variable names and values"
            },
            {
                "encoding": "ASCII",
                "offset": 501300,
                "string": "      -v                 List variable names and values in a form that can"
            },
            {
                "encoding": "ASCII",
                "offset": 501375,
                "string": "                         be reused as input."
            },
            {
                "encoding": "ASCII",
                "offset": 501420,
                "string": "      -S                 List key sequences that invoke macros and their values"
            },
            {
                "encoding": "ASCII",
                "offset": 501500,
                "string": "      -s                 List key sequences that invoke macros and their values"
            },
            {
                "encoding": "ASCII",
                "offset": 501580,
                "string": "                         in a form that can be reused as input."
            },
            {
                "encoding": "ASCII",
                "offset": 501652,
                "string": " Exit from within a FOR, WHILE or UNTIL loop.  If N is specified,"
            },
            {
                "encoding": "ASCII",
                "offset": 501718,
                "string": "    break N levels."
            },
            {
                "encoding": "ASCII",
                "offset": 501748,
                "string": " Resume the next iteration of the enclosing FOR, WHILE or UNTIL loop."
            },
            {
                "encoding": "ASCII",
                "offset": 501818,
                "string": "    If N is specified, resume at the N-th enclosing loop."
            },
            {
                "encoding": "ASCII",
                "offset": 501884,
                "string": " Run a shell builtin.  This is useful when you wish to rename a"
            },
            {
                "encoding": "ASCII",
                "offset": 501948,
                "string": "    shell builtin to be a function, but need the functionality of the"
            },
            {
                "encoding": "ASCII",
                "offset": 502018,
                "string": "    builtin within the function itself."
            },
            {
                "encoding": "ASCII",
                "offset": 502068,
                "string": " Returns the context of the current subroutine call."
            },
            {
                "encoding": "ASCII",
                "offset": 502121,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 502126,
                "string": "    Without EXPR, returns returns \"$line $filename\".  With EXPR,"
            },
            {
                "encoding": "ASCII",
                "offset": 502191,
                "string": "    returns \"$line $subroutine $filename\"; this extra information"
            },
            {
                "encoding": "ASCII",
                "offset": 502257,
                "string": "    can be used used to provide a stack trace."
            },
            {
                "encoding": "ASCII",
                "offset": 502304,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 502309,
                "string": "    The value of EXPR indicates how many call frames to go back before the"
            },
            {
                "encoding": "ASCII",
                "offset": 502384,
                "string": "    current one; the top frame is frame 0."
            },
            {
                "encoding": "ASCII",
                "offset": 502436,
                "string": " Change the current directory to DIR.  The variable $HOME is the"
            },
            {
                "encoding": "ASCII",
                "offset": 502501,
                "string": "    default DIR.  The variable CDPATH defines the search path for"
            },
            {
                "encoding": "ASCII",
                "offset": 502567,
                "string": "    the directory containing DIR.  Alternative directory names in CDPATH"
            },
            {
                "encoding": "ASCII",
                "offset": 502640,
                "string": "    are separated by a colon (:).  A null directory name is the same as"
            },
            {
                "encoding": "ASCII",
                "offset": 502712,
                "string": "    the current directory, i.e. `.'.  If DIR begins with a slash (/),"
            },
            {
                "encoding": "ASCII",
                "offset": 502782,
                "string": "    then CDPATH is not used.  If the directory is not found, and the"
            },
            {
                "encoding": "ASCII",
                "offset": 502851,
                "string": "    shell option `cdable_vars' is set, then try the word as a variable"
            },
            {
                "encoding": "ASCII",
                "offset": 502922,
                "string": "    name.  If that variable has a value, then cd to the value of that"
            },
            {
                "encoding": "ASCII",
                "offset": 502992,
                "string": "    variable.  The -P option says to use the physical directory structure"
            },
            {
                "encoding": "ASCII",
                "offset": 503066,
                "string": "    instead of following symbolic links; the -L option forces symbolic links"
            },
            {
                "encoding": "ASCII",
                "offset": 503143,
                "string": "    to be followed."
            },
            {
                "encoding": "ASCII",
                "offset": 503172,
                "string": " Print the current working directory.  With the -P option, pwd prints"
            },
            {
                "encoding": "ASCII",
                "offset": 503242,
                "string": "    the physical directory, without any symbolic links; the -L option"
            },
            {
                "encoding": "ASCII",
                "offset": 503312,
                "string": "    makes pwd follow symbolic links; the -W option makes pwd print the Win32 value"
            },
            {
                "encoding": "ASCII",
                "offset": 503395,
                "string": "    of the physical directory."
            },
            {
                "encoding": "ASCII",
                "offset": 503426,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 503440,
                "string": " No effect; the command does nothing.  A zero exit code is returned."
            },
            {
                "encoding": "ASCII",
                "offset": 503520,
                "string": " Return a successful result."
            },
            {
                "encoding": "ASCII",
                "offset": 503560,
                "string": " Return an unsuccessful result."
            },
            {
                "encoding": "ASCII",
                "offset": 503600,
                "string": " Runs COMMAND with ARGS ignoring shell functions.  If you have a shell"
            },
            {
                "encoding": "ASCII",
                "offset": 503671,
                "string": "    function called `ls', and you wish to call the command `ls', you can"
            },
            {
                "encoding": "ASCII",
                "offset": 503744,
                "string": "    say \"command ls\".  If the -p option is given, a default value is used"
            },
            {
                "encoding": "ASCII",
                "offset": 503818,
                "string": "    for PATH that is guaranteed to find all of the standard utilities.  If"
            },
            {
                "encoding": "ASCII",
                "offset": 503893,
                "string": "    the -V or -v option is given, a string is printed describing COMMAND."
            },
            {
                "encoding": "ASCII",
                "offset": 503967,
                "string": "    The -V option produces a more verbose description."
            },
            {
                "encoding": "ASCII",
                "offset": 504032,
                "string": " Declare variables and/or give them attributes.  If no NAMEs are"
            },
            {
                "encoding": "ASCII",
                "offset": 504097,
                "string": "    given, then display the values of variables instead.  The -p option"
            },
            {
                "encoding": "ASCII",
                "offset": 504169,
                "string": "    will display the attributes and values of each NAME."
            },
            {
                "encoding": "ASCII",
                "offset": 504226,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 504231,
                "string": "    The flags are:"
            },
            {
                "encoding": "ASCII",
                "offset": 504250,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 504255,
                "string": "      -a\tto make NAMEs arrays (if supported)"
            },
            {
                "encoding": "ASCII",
                "offset": 504300,
                "string": "      -f\tto select from among function names only"
            },
            {
                "encoding": "ASCII",
                "offset": 504350,
                "string": "      -F\tto display function names (and line number and source file name if"
            },
            {
                "encoding": "ASCII",
                "offset": 504426,
                "string": "    \tdebugging) without definitions"
            },
            {
                "encoding": "ASCII",
                "offset": 504462,
                "string": "      -i\tto make NAMEs have the `integer' attribute"
            },
            {
                "encoding": "ASCII",
                "offset": 504514,
                "string": "      -r\tto make NAMEs readonly"
            },
            {
                "encoding": "ASCII",
                "offset": 504546,
                "string": "      -t\tto make NAMEs have the `trace' attribute"
            },
            {
                "encoding": "ASCII",
                "offset": 504596,
                "string": "      -x\tto make NAMEs export"
            },
            {
                "encoding": "ASCII",
                "offset": 504626,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 504631,
                "string": "    Variables with the integer attribute have arithmetic evaluation (see"
            },
            {
                "encoding": "ASCII",
                "offset": 504704,
                "string": "    `let') done when the variable is assigned to."
            },
            {
                "encoding": "ASCII",
                "offset": 504754,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 504759,
                "string": "    When displaying values of variables, -f displays a function's name"
            },
            {
                "encoding": "ASCII",
                "offset": 504830,
                "string": "    and definition.  The -F option restricts the display to function"
            },
            {
                "encoding": "ASCII",
                "offset": 504899,
                "string": "    name only."
            },
            {
                "encoding": "ASCII",
                "offset": 504914,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 504919,
                "string": "    Using `+' instead of `-' turns off the given attribute instead.  When"
            },
            {
                "encoding": "ASCII",
                "offset": 504993,
                "string": "    used in a function, makes NAMEs local, as with the `local' command."
            },
            {
                "encoding": "ASCII",
                "offset": 505076,
                "string": " Obsolete.  See `declare'."
            },
            {
                "encoding": "ASCII",
                "offset": 505112,
                "string": " Create a local variable called NAME, and give it VALUE.  LOCAL"
            },
            {
                "encoding": "ASCII",
                "offset": 505176,
                "string": "    can only be used within a function; it makes the variable NAME"
            },
            {
                "encoding": "ASCII",
                "offset": 505243,
                "string": "    have a visible scope restricted to that function and its children."
            },
            {
                "encoding": "ASCII",
                "offset": 505324,
                "string": " Output the ARGs.  If -n is specified, the trailing newline is"
            },
            {
                "encoding": "ASCII",
                "offset": 505387,
                "string": "    suppressed.  If the -e option is given, interpretation of the"
            },
            {
                "encoding": "ASCII",
                "offset": 505453,
                "string": "    following backslash-escaped characters is turned on:"
            },
            {
                "encoding": "ASCII",
                "offset": 505510,
                "string": "    \t\\a\talert (bell)"
            },
            {
                "encoding": "ASCII",
                "offset": 505531,
                "string": "    \t\\b\tbackspace"
            },
            {
                "encoding": "ASCII",
                "offset": 505549,
                "string": "    \t\\c\tsuppress trailing newline"
            },
            {
                "encoding": "ASCII",
                "offset": 505583,
                "string": "    \t\\E\tescape character"
            },
            {
                "encoding": "ASCII",
                "offset": 505608,
                "string": "    \t\\f\tform feed"
            },
            {
                "encoding": "ASCII",
                "offset": 505626,
                "string": "    \t\\n\tnew line"
            },
            {
                "encoding": "ASCII",
                "offset": 505643,
                "string": "    \t\\r\tcarriage return"
            },
            {
                "encoding": "ASCII",
                "offset": 505667,
                "string": "    \t\\t\thorizontal tab"
            },
            {
                "encoding": "ASCII",
                "offset": 505690,
                "string": "    \t\\v\tvertical tab"
            },
            {
                "encoding": "ASCII",
                "offset": 505711,
                "string": "    \t\\\\\tbackslash"
            },
            {
                "encoding": "ASCII",
                "offset": 505729,
                "string": "    \t\\num\tthe character whose ASCII code is NUM (octal)."
            },
            {
                "encoding": "ASCII",
                "offset": 505786,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 505791,
                "string": "    You can explicitly turn off the interpretation of the above characters"
            },
            {
                "encoding": "ASCII",
                "offset": 505866,
                "string": "    with the -E option."
            },
            {
                "encoding": "ASCII",
                "offset": 505900,
                "string": " Enable and disable builtin shell commands.  This allows"
            },
            {
                "encoding": "ASCII",
                "offset": 505957,
                "string": "    you to use a disk command which has the same name as a shell"
            },
            {
                "encoding": "ASCII",
                "offset": 506022,
                "string": "    builtin without specifying a full pathname.  If -n is used, the"
            },
            {
                "encoding": "ASCII",
                "offset": 506090,
                "string": "    NAMEs become disabled; otherwise NAMEs are enabled.  For example,"
            },
            {
                "encoding": "ASCII",
                "offset": 506160,
                "string": "    to use the `test' found in $PATH instead of the shell builtin"
            },
            {
                "encoding": "ASCII",
                "offset": 506226,
                "string": "    version, type `enable -n test'.  On systems supporting dynamic"
            },
            {
                "encoding": "ASCII",
                "offset": 506293,
                "string": "    loading, the -f option may be used to load new builtins from the"
            },
            {
                "encoding": "ASCII",
                "offset": 506362,
                "string": "    shared object FILENAME.  The -d option will delete a builtin"
            },
            {
                "encoding": "ASCII",
                "offset": 506427,
                "string": "    previously loaded with -f.  If no non-option names are given, or"
            },
            {
                "encoding": "ASCII",
                "offset": 506496,
                "string": "    the -p option is supplied, a list of builtins is printed.  The"
            },
            {
                "encoding": "ASCII",
                "offset": 506563,
                "string": "    -a option means to print every builtin with an indication of whether"
            },
            {
                "encoding": "ASCII",
                "offset": 506636,
                "string": "    or not it is enabled.  The -s option restricts the output to the POSIX.2"
            },
            {
                "encoding": "ASCII",
                "offset": 506713,
                "string": "    `special' builtins.  The -n option displays a list of all disabled builtins."
            },
            {
                "encoding": "ASCII",
                "offset": 506804,
                "string": " Read ARGs as input to the shell and execute the resulting command(s)."
            },
            {
                "encoding": "ASCII",
                "offset": 506884,
                "string": " Getopts is used by shell procedures to parse positional parameters."
            },
            {
                "encoding": "ASCII",
                "offset": 506953,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 506958,
                "string": "    OPTSTRING contains the option letters to be recognized; if a letter"
            },
            {
                "encoding": "ASCII",
                "offset": 507030,
                "string": "    is followed by a colon, the option is expected to have an argument,"
            },
            {
                "encoding": "ASCII",
                "offset": 507102,
                "string": "    which should be separated from it by white space."
            },
            {
                "encoding": "ASCII",
                "offset": 507156,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 507161,
                "string": "    Each time it is invoked, getopts will place the next option in the"
            },
            {
                "encoding": "ASCII",
                "offset": 507232,
                "string": "    shell variable $name, initializing name if it does not exist, and"
            },
            {
                "encoding": "ASCII",
                "offset": 507302,
                "string": "    the index of the next argument to be processed into the shell"
            },
            {
                "encoding": "ASCII",
                "offset": 507368,
                "string": "    variable OPTIND.  OPTIND is initialized to 1 each time the shell or"
            },
            {
                "encoding": "ASCII",
                "offset": 507440,
                "string": "    a shell script is invoked.  When an option requires an argument,"
            },
            {
                "encoding": "ASCII",
                "offset": 507509,
                "string": "    getopts places that argument into the shell variable OPTARG."
            },
            {
                "encoding": "ASCII",
                "offset": 507574,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 507579,
                "string": "    getopts reports errors in one of two ways.  If the first character"
            },
            {
                "encoding": "ASCII",
                "offset": 507650,
                "string": "    of OPTSTRING is a colon, getopts uses silent error reporting.  In"
            },
            {
                "encoding": "ASCII",
                "offset": 507720,
                "string": "    this mode, no error messages are printed.  If an invalid option is"
            },
            {
                "encoding": "ASCII",
                "offset": 507791,
                "string": "    seen, getopts places the option character found into OPTARG.  If a"
            },
            {
                "encoding": "ASCII",
                "offset": 507862,
                "string": "    required argument is not found, getopts places a ':' into NAME and"
            },
            {
                "encoding": "ASCII",
                "offset": 507933,
                "string": "    sets OPTARG to the option character found.  If getopts is not in"
            },
            {
                "encoding": "ASCII",
                "offset": 508002,
                "string": "    silent mode, and an invalid option is seen, getopts places '?' into"
            },
            {
                "encoding": "ASCII",
                "offset": 508074,
                "string": "    NAME and unsets OPTARG.  If a required argument is not found, a '?'"
            },
            {
                "encoding": "ASCII",
                "offset": 508146,
                "string": "    is placed in NAME, OPTARG is unset, and a diagnostic message is"
            },
            {
                "encoding": "ASCII",
                "offset": 508214,
                "string": "    printed."
            },
            {
                "encoding": "ASCII",
                "offset": 508227,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 508232,
                "string": "    If the shell variable OPTERR has the value 0, getopts disables the"
            },
            {
                "encoding": "ASCII",
                "offset": 508303,
                "string": "    printing of error messages, even if the first character of"
            },
            {
                "encoding": "ASCII",
                "offset": 508366,
                "string": "    OPTSTRING is not a colon.  OPTERR has the value 1 by default."
            },
            {
                "encoding": "ASCII",
                "offset": 508432,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 508437,
                "string": "    Getopts normally parses the positional parameters ($0 - $9), but if"
            },
            {
                "encoding": "ASCII",
                "offset": 508509,
                "string": "    more arguments are given, they are parsed instead."
            },
            {
                "encoding": "ASCII",
                "offset": 508572,
                "string": " Exec FILE, replacing this shell with the specified program."
            },
            {
                "encoding": "ASCII",
                "offset": 508633,
                "string": "    If FILE is not specified, the redirections take effect in this"
            },
            {
                "encoding": "ASCII",
                "offset": 508700,
                "string": "    shell.  If the first argument is `-l', then place a dash in the"
            },
            {
                "encoding": "ASCII",
                "offset": 508768,
                "string": "    zeroth arg passed to FILE, as login does.  If the `-c' option"
            },
            {
                "encoding": "ASCII",
                "offset": 508834,
                "string": "    is supplied, FILE is executed with a null environment.  The `-a'"
            },
            {
                "encoding": "ASCII",
                "offset": 508903,
                "string": "    option means to make set argv[0] of the executed process to NAME."
            },
            {
                "encoding": "ASCII",
                "offset": 508973,
                "string": "    If the file cannot be executed and the shell is not interactive,"
            },
            {
                "encoding": "ASCII",
                "offset": 509042,
                "string": "    then the shell exits, unless the shell option `execfail' is set."
            },
            {
                "encoding": "ASCII",
                "offset": 509120,
                "string": " Exit the shell with a status of N.  If N is omitted, the exit status"
            },
            {
                "encoding": "ASCII",
                "offset": 509190,
                "string": "    is that of the last command executed."
            },
            {
                "encoding": "ASCII",
                "offset": 509240,
                "string": " Logout of a login shell."
            },
            {
                "encoding": "ASCII",
                "offset": 509276,
                "string": " fc is used to list or edit and re-execute commands from the history list."
            },
            {
                "encoding": "ASCII",
                "offset": 509351,
                "string": "    FIRST and LAST can be numbers specifying the range, or FIRST can be a"
            },
            {
                "encoding": "ASCII",
                "offset": 509425,
                "string": "    string, which means the most recent command beginning with that"
            },
            {
                "encoding": "ASCII",
                "offset": 509493,
                "string": "    string."
            },
            {
                "encoding": "ASCII",
                "offset": 509505,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 509510,
                "string": "       -e ENAME selects which editor to use.  Default is FCEDIT, then EDITOR,"
            },
            {
                "encoding": "ASCII",
                "offset": 509588,
                "string": "          then vi."
            },
            {
                "encoding": "ASCII",
                "offset": 509607,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 509612,
                "string": "       -l means list lines instead of editing."
            },
            {
                "encoding": "ASCII",
                "offset": 509659,
                "string": "       -n means no line numbers listed."
            },
            {
                "encoding": "ASCII",
                "offset": 509699,
                "string": "       -r means reverse the order of the lines (making it newest listed first)."
            },
            {
                "encoding": "ASCII",
                "offset": 509779,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 509784,
                "string": "    With the `fc -s [pat=rep ...] [command]' format, the command is"
            },
            {
                "encoding": "ASCII",
                "offset": 509852,
                "string": "    re-executed after the substitution OLD=NEW is performed."
            },
            {
                "encoding": "ASCII",
                "offset": 509913,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 509918,
                "string": "    A useful alias to use with this is r='fc -s', so that typing `r cc'"
            },
            {
                "encoding": "ASCII",
                "offset": 509990,
                "string": "    runs the last command beginning with `cc' and typing `r' re-executes"
            },
            {
                "encoding": "ASCII",
                "offset": 510063,
                "string": "    the last command."
            },
            {
                "encoding": "ASCII",
                "offset": 510096,
                "string": " Place JOB_SPEC in the foreground, and make it the current job.  If"
            },
            {
                "encoding": "ASCII",
                "offset": 510164,
                "string": "    JOB_SPEC is not present, the shell's notion of the current job is"
            },
            {
                "encoding": "ASCII",
                "offset": 510234,
                "string": "    used."
            },
            {
                "encoding": "ASCII",
                "offset": 510252,
                "string": " Place each JOB_SPEC in the background, as if it had been started with"
            },
            {
                "encoding": "ASCII",
                "offset": 510323,
                "string": "    `&'.  If JOB_SPEC is not present, the shell's notion of the current"
            },
            {
                "encoding": "ASCII",
                "offset": 510395,
                "string": "    job is used."
            },
            {
                "encoding": "ASCII",
                "offset": 510420,
                "string": " For each NAME, the full pathname of the command is determined and"
            },
            {
                "encoding": "ASCII",
                "offset": 510487,
                "string": "    remembered.  If the -p option is supplied, PATHNAME is used as the"
            },
            {
                "encoding": "ASCII",
                "offset": 510558,
                "string": "    full pathname of NAME, and no path search is performed.  The -r"
            },
            {
                "encoding": "ASCII",
                "offset": 510626,
                "string": "    option causes the shell to forget all remembered locations.  The -d"
            },
            {
                "encoding": "ASCII",
                "offset": 510698,
                "string": "    option causes the shell to forget the remembered location of each NAME."
            },
            {
                "encoding": "ASCII",
                "offset": 510774,
                "string": "    If the -t option is supplied the full pathname to which each NAME"
            },
            {
                "encoding": "ASCII",
                "offset": 510844,
                "string": "    corresponds is printed.  If multiple NAME arguments are supplied with"
            },
            {
                "encoding": "ASCII",
                "offset": 510918,
                "string": "    -t, the NAME is printed before the hashed full pathname.  The -l option"
            },
            {
                "encoding": "ASCII",
                "offset": 510994,
                "string": "    causes output to be displayed in a format that may be reused as input."
            },
            {
                "encoding": "ASCII",
                "offset": 511069,
                "string": "    If no arguments are given, information about remembered commands is displayed."
            },
            {
                "encoding": "ASCII",
                "offset": 511160,
                "string": " Display helpful information about builtin commands.  If PATTERN is"
            },
            {
                "encoding": "ASCII",
                "offset": 511228,
                "string": "    specified, gives detailed help on all commands matching PATTERN,"
            },
            {
                "encoding": "ASCII",
                "offset": 511297,
                "string": "    otherwise a list of the builtins is printed.  The -s option"
            },
            {
                "encoding": "ASCII",
                "offset": 511361,
                "string": "    restricts the output for each builtin command matching PATTERN to"
            },
            {
                "encoding": "ASCII",
                "offset": 511431,
                "string": "    a short usage synopsis."
            },
            {
                "encoding": "ASCII",
                "offset": 511468,
                "string": " Display the history list with line numbers.  Lines listed with"
            },
            {
                "encoding": "ASCII",
                "offset": 511532,
                "string": "    with a `*' have been modified.  Argument of N says to list only"
            },
            {
                "encoding": "ASCII",
                "offset": 511600,
                "string": "    the last N lines.  The `-c' option causes the history list to be"
            },
            {
                "encoding": "ASCII",
                "offset": 511669,
                "string": "    cleared by deleting all of the entries.  The `-d' option deletes"
            },
            {
                "encoding": "ASCII",
                "offset": 511738,
                "string": "    the history entry at offset OFFSET.  The `-w' option writes out the"
            },
            {
                "encoding": "ASCII",
                "offset": 511810,
                "string": "    current history to the history file;  `-r' means to read the file and"
            },
            {
                "encoding": "ASCII",
                "offset": 511884,
                "string": "    append the contents to the history list instead.  `-a' means"
            },
            {
                "encoding": "ASCII",
                "offset": 511949,
                "string": "    to append history lines from this session to the history file."
            },
            {
                "encoding": "ASCII",
                "offset": 512016,
                "string": "    Argument `-n' means to read all history lines not already read"
            },
            {
                "encoding": "ASCII",
                "offset": 512083,
                "string": "    from the history file and append them to the history list."
            },
            {
                "encoding": "ASCII",
                "offset": 512146,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 512151,
                "string": "    If FILENAME is given, then that is used as the history file else"
            },
            {
                "encoding": "ASCII",
                "offset": 512220,
                "string": "    if $HISTFILE has a value, that is used, else ~/.bash_history."
            },
            {
                "encoding": "ASCII",
                "offset": 512286,
                "string": "    If the -s option is supplied, the non-option ARGs are appended to"
            },
            {
                "encoding": "ASCII",
                "offset": 512356,
                "string": "    the history list as a single entry.  The -p option means to perform"
            },
            {
                "encoding": "ASCII",
                "offset": 512428,
                "string": "    history expansion on each ARG and display the result, without storing"
            },
            {
                "encoding": "ASCII",
                "offset": 512502,
                "string": "    anything in the history list."
            },
            {
                "encoding": "ASCII",
                "offset": 512536,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 512541,
                "string": "    If the $HISTTIMEFORMAT variable is set and not null, its value is used"
            },
            {
                "encoding": "ASCII",
                "offset": 512616,
                "string": "    as a format string for strftime(3) to print the time stamp associated"
            },
            {
                "encoding": "ASCII",
                "offset": 512690,
                "string": "    with each displayed history entry.  No time stamps are printed otherwise."
            },
            {
                "encoding": "ASCII",
                "offset": 512776,
                "string": " Lists the active jobs.  The -l option lists process id's in addition"
            },
            {
                "encoding": "ASCII",
                "offset": 512846,
                "string": "    to the normal information; the -p option lists process id's only."
            },
            {
                "encoding": "ASCII",
                "offset": 512916,
                "string": "    If -n is given, only processes that have changed status since the last"
            },
            {
                "encoding": "ASCII",
                "offset": 512991,
                "string": "    notification are printed.  JOBSPEC restricts output to that job.  The"
            },
            {
                "encoding": "ASCII",
                "offset": 513065,
                "string": "    -r and -s options restrict output to running and stopped jobs only,"
            },
            {
                "encoding": "ASCII",
                "offset": 513137,
                "string": "    respectively.  Without options, the status of all active jobs is"
            },
            {
                "encoding": "ASCII",
                "offset": 513206,
                "string": "    printed.  If -x is given, COMMAND is run after all job specifications"
            },
            {
                "encoding": "ASCII",
                "offset": 513280,
                "string": "    that appear in ARGS have been replaced with the process ID of that job's"
            },
            {
                "encoding": "ASCII",
                "offset": 513357,
                "string": "    process group leader."
            },
            {
                "encoding": "ASCII",
                "offset": 513392,
                "string": " By default, removes each JOBSPEC argument from the table of active jobs."
            },
            {
                "encoding": "ASCII",
                "offset": 513466,
                "string": "    If the -h option is given, the job is not removed from the table, but is"
            },
            {
                "encoding": "ASCII",
                "offset": 513543,
                "string": "    marked so that SIGHUP is not sent to the job if the shell receives a"
            },
            {
                "encoding": "ASCII",
                "offset": 513616,
                "string": "    SIGHUP.  The -a option, when JOBSPEC is not supplied, means to remove all"
            },
            {
                "encoding": "ASCII",
                "offset": 513694,
                "string": "    jobs from the job table; the -r option means to remove only running jobs."
            },
            {
                "encoding": "ASCII",
                "offset": 513780,
                "string": " Send the processes named by PID (or JOBSPEC) the signal SIGSPEC.  If"
            },
            {
                "encoding": "ASCII",
                "offset": 513850,
                "string": "    SIGSPEC is not present, then SIGTERM is assumed.  An argument of `-l'"
            },
            {
                "encoding": "ASCII",
                "offset": 513924,
                "string": "    lists the signal names; if arguments follow `-l' they are assumed to"
            },
            {
                "encoding": "ASCII",
                "offset": 513997,
                "string": "    be signal numbers for which names should be listed.  Kill is a shell"
            },
            {
                "encoding": "ASCII",
                "offset": 514070,
                "string": "    builtin for two reasons: it allows job IDs to be used instead of"
            },
            {
                "encoding": "ASCII",
                "offset": 514139,
                "string": "    process IDs, and, if you have reached the limit on processes that"
            },
            {
                "encoding": "ASCII",
                "offset": 514209,
                "string": "    you can create, you don't have to start a process to kill another one."
            },
            {
                "encoding": "ASCII",
                "offset": 514292,
                "string": " Each ARG is an arithmetic expression to be evaluated.  Evaluation"
            },
            {
                "encoding": "ASCII",
                "offset": 514359,
                "string": "    is done in fixed-width integers with no check for overflow, though"
            },
            {
                "encoding": "ASCII",
                "offset": 514430,
                "string": "    division by 0 is trapped and flagged as an error.  The following"
            },
            {
                "encoding": "ASCII",
                "offset": 514499,
                "string": "    list of operators is grouped into levels of equal-precedence operators."
            },
            {
                "encoding": "ASCII",
                "offset": 514575,
                "string": "    The levels are listed in order of decreasing precedence."
            },
            {
                "encoding": "ASCII",
                "offset": 514636,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 514641,
                "string": "    \tid++, id--\tvariable post-increment, post-decrement"
            },
            {
                "encoding": "ASCII",
                "offset": 514697,
                "string": "    \t++id, --id\tvariable pre-increment, pre-decrement"
            },
            {
                "encoding": "ASCII",
                "offset": 514751,
                "string": "    \t-, +\t\tunary minus, plus"
            },
            {
                "encoding": "ASCII",
                "offset": 514780,
                "string": "    \t!, ~\t\tlogical and bitwise negation"
            },
            {
                "encoding": "ASCII",
                "offset": 514820,
                "string": "    \t**\t\texponentiation"
            },
            {
                "encoding": "ASCII",
                "offset": 514844,
                "string": "    \t*, /, %\t\tmultiplication, division, remainder"
            },
            {
                "encoding": "ASCII",
                "offset": 514894,
                "string": "    \t+, -\t\taddition, subtraction"
            },
            {
                "encoding": "ASCII",
                "offset": 514927,
                "string": "    \t<<, >>\t\tleft and right bitwise shifts"
            },
            {
                "encoding": "ASCII",
                "offset": 514970,
                "string": "    \t<=, >=, <, >\tcomparison"
            },
            {
                "encoding": "ASCII",
                "offset": 514999,
                "string": "    \t==, !=\t\tequality, inequality"
            },
            {
                "encoding": "ASCII",
                "offset": 515033,
                "string": "    \t&\t\tbitwise AND"
            },
            {
                "encoding": "ASCII",
                "offset": 515053,
                "string": "    \t^\t\tbitwise XOR"
            },
            {
                "encoding": "ASCII",
                "offset": 515073,
                "string": "    \t|\t\tbitwise OR"
            },
            {
                "encoding": "ASCII",
                "offset": 515092,
                "string": "    \t&&\t\tlogical AND"
            },
            {
                "encoding": "ASCII",
                "offset": 515113,
                "string": "    \t||\t\tlogical OR"
            },
            {
                "encoding": "ASCII",
                "offset": 515133,
                "string": "    \texpr ? expr : expr"
            },
            {
                "encoding": "ASCII",
                "offset": 515157,
                "string": "    \t\t\tconditional operator"
            },
            {
                "encoding": "ASCII",
                "offset": 515185,
                "string": "    \t=, *=, /=, %=,"
            },
            {
                "encoding": "ASCII",
                "offset": 515205,
                "string": "    \t+=, -=, <<=, >>=,"
            },
            {
                "encoding": "ASCII",
                "offset": 515228,
                "string": "    \t&=, ^=, |=\tassignment"
            },
            {
                "encoding": "ASCII",
                "offset": 515255,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 515260,
                "string": "    Shell variables are allowed as operands.  The name of the variable"
            },
            {
                "encoding": "ASCII",
                "offset": 515331,
                "string": "    is replaced by its value (coerced to a fixed-width integer) within"
            },
            {
                "encoding": "ASCII",
                "offset": 515402,
                "string": "    an expression.  The variable need not have its integer attribute"
            },
            {
                "encoding": "ASCII",
                "offset": 515471,
                "string": "    turned on to be used in an expression."
            },
            {
                "encoding": "ASCII",
                "offset": 515514,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 515519,
                "string": "    Operators are evaluated in order of precedence.  Sub-expressions in"
            },
            {
                "encoding": "ASCII",
                "offset": 515591,
                "string": "    parentheses are evaluated first and may override the precedence"
            },
            {
                "encoding": "ASCII",
                "offset": 515659,
                "string": "    rules above."
            },
            {
                "encoding": "ASCII",
                "offset": 515676,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 515681,
                "string": "    If the last ARG evaluates to 0, let returns 1; 0 is returned"
            },
            {
                "encoding": "ASCII",
                "offset": 515746,
                "string": "    otherwise."
            },
            {
                "encoding": "ASCII",
                "offset": 515772,
                "string": " One line is read from the standard input, or from file descriptor FD if the"
            },
            {
                "encoding": "ASCII",
                "offset": 515849,
                "string": "    -u option is supplied, and the first word is assigned to the first NAME,"
            },
            {
                "encoding": "ASCII",
                "offset": 515926,
                "string": "    the second word to the second NAME, and so on, with leftover words assigned"
            },
            {
                "encoding": "ASCII",
                "offset": 516006,
                "string": "    to the last NAME.  Only the characters found in $IFS are recognized as word"
            },
            {
                "encoding": "ASCII",
                "offset": 516086,
                "string": "    delimiters.  If no NAMEs are supplied, the line read is stored in the REPLY"
            },
            {
                "encoding": "ASCII",
                "offset": 516166,
                "string": "    variable.  If the -r option is given, this signifies `raw' input, and"
            },
            {
                "encoding": "ASCII",
                "offset": 516240,
                "string": "    backslash escaping is disabled.  The -d option causes read to continue"
            },
            {
                "encoding": "ASCII",
                "offset": 516315,
                "string": "    until the first character of DELIM is read, rather than newline.  If the -p"
            },
            {
                "encoding": "ASCII",
                "offset": 516395,
                "string": "    option is supplied, the string PROMPT is output without a trailing newline"
            },
            {
                "encoding": "ASCII",
                "offset": 516474,
                "string": "    before attempting to read.  If -a is supplied, the words read are assigned"
            },
            {
                "encoding": "ASCII",
                "offset": 516553,
                "string": "    to sequential indices of ARRAY, starting at zero.  If -e is supplied and"
            },
            {
                "encoding": "ASCII",
                "offset": 516630,
                "string": "    the shell is interactive, readline is used to obtain the line.  If -n is"
            },
            {
                "encoding": "ASCII",
                "offset": 516707,
                "string": "    supplied with a non-zero NCHARS argument, read returns after NCHARS"
            },
            {
                "encoding": "ASCII",
                "offset": 516779,
                "string": "    characters have been read.  The -s option causes input coming from a"
            },
            {
                "encoding": "ASCII",
                "offset": 516852,
                "string": "    terminal to not be echoed."
            },
            {
                "encoding": "ASCII",
                "offset": 516883,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 516888,
                "string": "    The -t option causes read to time out and return failure if a complete line"
            },
            {
                "encoding": "ASCII",
                "offset": 516968,
                "string": "    of input is not read within TIMEOUT seconds.  If the TMOUT variable is set,"
            },
            {
                "encoding": "ASCII",
                "offset": 517048,
                "string": "    its value is the default timeout.  The return code is zero, unless end-of-file"
            },
            {
                "encoding": "ASCII",
                "offset": 517131,
                "string": "    is encountered, read times out, or an invalid file descriptor is supplied as"
            },
            {
                "encoding": "ASCII",
                "offset": 517212,
                "string": "    the argument to -u."
            },
            {
                "encoding": "ASCII",
                "offset": 517244,
                "string": " Causes a function to exit with the return value specified by N.  If N"
            },
            {
                "encoding": "ASCII",
                "offset": 517315,
                "string": "    is omitted, the return status is that of the last command."
            },
            {
                "encoding": "ASCII",
                "offset": 517388,
                "string": "     -a  Mark variables which are modified or created for export."
            },
            {
                "encoding": "ASCII",
                "offset": 517454,
                "string": "        -b  Notify of job termination immediately."
            },
            {
                "encoding": "ASCII",
                "offset": 517505,
                "string": "        -e  Exit immediately if a command exits with a non-zero status."
            },
            {
                "encoding": "ASCII",
                "offset": 517577,
                "string": "        -f  Disable file name generation (globbing)."
            },
            {
                "encoding": "ASCII",
                "offset": 517630,
                "string": "        -h  Remember the location of commands as they are looked up."
            },
            {
                "encoding": "ASCII",
                "offset": 517699,
                "string": "        -k  All assignment arguments are placed in the environment for a"
            },
            {
                "encoding": "ASCII",
                "offset": 517772,
                "string": "            command, not just those that precede the command name."
            },
            {
                "encoding": "ASCII",
                "offset": 517839,
                "string": "        -m  Job control is enabled."
            },
            {
                "encoding": "ASCII",
                "offset": 517875,
                "string": "        -n  Read commands but do not execute them."
            },
            {
                "encoding": "ASCII",
                "offset": 517926,
                "string": "        -o option-name"
            },
            {
                "encoding": "ASCII",
                "offset": 517949,
                "string": "            Set the variable corresponding to option-name:"
            },
            {
                "encoding": "ASCII",
                "offset": 518008,
                "string": "                allexport    same as -a"
            },
            {
                "encoding": "ASCII",
                "offset": 518048,
                "string": "                braceexpand  same as -B"
            },
            {
                "encoding": "ASCII",
                "offset": 518088,
                "string": "                emacs        use an emacs-style line editing interface"
            },
            {
                "encoding": "ASCII",
                "offset": 518159,
                "string": "                errexit      same as -e"
            },
            {
                "encoding": "ASCII",
                "offset": 518199,
                "string": "                errtrace     same as -E"
            },
            {
                "encoding": "ASCII",
                "offset": 518239,
                "string": "                functrace    same as -T"
            },
            {
                "encoding": "ASCII",
                "offset": 518279,
                "string": "                hashall      same as -h"
            },
            {
                "encoding": "ASCII",
                "offset": 518319,
                "string": "                histexpand   same as -H"
            },
            {
                "encoding": "ASCII",
                "offset": 518359,
                "string": "                history      enable command history"
            },
            {
                "encoding": "ASCII",
                "offset": 518411,
                "string": "                ignoreeof    the shell will not exit upon reading EOF"
            },
            {
                "encoding": "ASCII",
                "offset": 518481,
                "string": "                interactive-comments"
            },
            {
                "encoding": "ASCII",
                "offset": 518518,
                "string": "                             allow comments to appear in interactive commands"
            },
            {
                "encoding": "ASCII",
                "offset": 518596,
                "string": "                keyword      same as -k"
            },
            {
                "encoding": "ASCII",
                "offset": 518636,
                "string": "                monitor      same as -m"
            },
            {
                "encoding": "ASCII",
                "offset": 518676,
                "string": "                noclobber    same as -C"
            },
            {
                "encoding": "ASCII",
                "offset": 518716,
                "string": "                noexec       same as -n"
            },
            {
                "encoding": "ASCII",
                "offset": 518756,
                "string": "                noglob       same as -f"
            },
            {
                "encoding": "ASCII",
                "offset": 518796,
                "string": "                nolog        currently accepted but ignored"
            },
            {
                "encoding": "ASCII",
                "offset": 518856,
                "string": "                notify       same as -b"
            },
            {
                "encoding": "ASCII",
                "offset": 518896,
                "string": "                nounset      same as -u"
            },
            {
                "encoding": "ASCII",
                "offset": 518936,
                "string": "                onecmd       same as -t"
            },
            {
                "encoding": "ASCII",
                "offset": 518976,
                "string": "                physical     same as -P"
            },
            {
                "encoding": "ASCII",
                "offset": 519016,
                "string": "                pipefail     the return value of a pipeline is the status of"
            },
            {
                "encoding": "ASCII",
                "offset": 519093,
                "string": "                             the last command to exit with a non-zero status,"
            },
            {
                "encoding": "ASCII",
                "offset": 519171,
                "string": "                             or zero if no command exited with a non-zero status"
            },
            {
                "encoding": "ASCII",
                "offset": 519252,
                "string": "                posix        change the behavior of bash where the default"
            },
            {
                "encoding": "ASCII",
                "offset": 519327,
                "string": "                             operation differs from the 1003.2 standard to"
            },
            {
                "encoding": "ASCII",
                "offset": 519402,
                "string": "                             match the standard"
            },
            {
                "encoding": "ASCII",
                "offset": 519450,
                "string": "                privileged   same as -p"
            },
            {
                "encoding": "ASCII",
                "offset": 519490,
                "string": "                verbose      same as -v"
            },
            {
                "encoding": "ASCII",
                "offset": 519530,
                "string": "                vi           use a vi-style line editing interface"
            },
            {
                "encoding": "ASCII",
                "offset": 519597,
                "string": "                xtrace       same as -x"
            },
            {
                "encoding": "ASCII",
                "offset": 519637,
                "string": "        -p  Turned on whenever the real and effective user ids do not match."
            },
            {
                "encoding": "ASCII",
                "offset": 519714,
                "string": "            Disables processing of the $ENV file and importing of shell"
            },
            {
                "encoding": "ASCII",
                "offset": 519786,
                "string": "            functions.  Turning this option off causes the effective uid and"
            },
            {
                "encoding": "ASCII",
                "offset": 519863,
                "string": "            gid to be set to the real uid and gid."
            },
            {
                "encoding": "ASCII",
                "offset": 519914,
                "string": "        -t  Exit after reading and executing one command."
            },
            {
                "encoding": "ASCII",
                "offset": 519972,
                "string": "        -u  Treat unset variables as an error when substituting."
            },
            {
                "encoding": "ASCII",
                "offset": 520037,
                "string": "        -v  Print shell input lines as they are read."
            },
            {
                "encoding": "ASCII",
                "offset": 520091,
                "string": "        -x  Print commands and their arguments as they are executed."
            },
            {
                "encoding": "ASCII",
                "offset": 520160,
                "string": "        -B  the shell will perform brace expansion"
            },
            {
                "encoding": "ASCII",
                "offset": 520211,
                "string": "        -C  If set, disallow existing regular files to be overwritten"
            },
            {
                "encoding": "ASCII",
                "offset": 520281,
                "string": "            by redirection of output."
            },
            {
                "encoding": "ASCII",
                "offset": 520319,
                "string": "        -E  If set, the ERR trap is inherited by shell functions."
            },
            {
                "encoding": "ASCII",
                "offset": 520385,
                "string": "        -H  Enable ! style history substitution.  This flag is on"
            },
            {
                "encoding": "ASCII",
                "offset": 520451,
                "string": "            by default when the shell is interactive."
            },
            {
                "encoding": "ASCII",
                "offset": 520505,
                "string": "        -P  If set, do not follow symbolic links when executing commands"
            },
            {
                "encoding": "ASCII",
                "offset": 520578,
                "string": "            such as cd which change the current directory."
            },
            {
                "encoding": "ASCII",
                "offset": 520637,
                "string": "        -T  If set, the DEBUG trap is inherited by shell functions."
            },
            {
                "encoding": "ASCII",
                "offset": 520705,
                "string": "        -   Assign any remaining arguments to the positional parameters."
            },
            {
                "encoding": "ASCII",
                "offset": 520778,
                "string": "            The -x and -v options are turned off."
            },
            {
                "encoding": "ASCII",
                "offset": 520828,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 520833,
                "string": "    Using + rather than - causes these flags to be turned off.  The"
            },
            {
                "encoding": "ASCII",
                "offset": 520901,
                "string": "    flags can also be used upon invocation of the shell.  The current"
            },
            {
                "encoding": "ASCII",
                "offset": 520971,
                "string": "    set of flags may be found in $-.  The remaining n ARGs are positional"
            },
            {
                "encoding": "ASCII",
                "offset": 521045,
                "string": "    parameters and are assigned, in order, to $1, $2, .. $n.  If no"
            },
            {
                "encoding": "ASCII",
                "offset": 521113,
                "string": "    ARGs are given, all shell variables are printed."
            },
            {
                "encoding": "ASCII",
                "offset": 521176,
                "string": " For each NAME, remove the corresponding variable or function.  Given"
            },
            {
                "encoding": "ASCII",
                "offset": 521246,
                "string": "    the `-v', unset will only act on variables.  Given the `-f' flag,"
            },
            {
                "encoding": "ASCII",
                "offset": 521316,
                "string": "    unset will only act on functions.  With neither flag, unset first"
            },
            {
                "encoding": "ASCII",
                "offset": 521386,
                "string": "    tries to unset a variable, and if that fails, then tries to unset a"
            },
            {
                "encoding": "ASCII",
                "offset": 521458,
                "string": "    function.  Some variables cannot be unset; also see readonly."
            },
            {
                "encoding": "ASCII",
                "offset": 521532,
                "string": " NAMEs are marked for automatic export to the environment of"
            },
            {
                "encoding": "ASCII",
                "offset": 521593,
                "string": "    subsequently executed commands.  If the -f option is given,"
            },
            {
                "encoding": "ASCII",
                "offset": 521657,
                "string": "    the NAMEs refer to functions.  If no NAMEs are given, or if `-p'"
            },
            {
                "encoding": "ASCII",
                "offset": 521726,
                "string": "    is given, a list of all names that are exported in this shell is"
            },
            {
                "encoding": "ASCII",
                "offset": 521795,
                "string": "    printed.  An argument of `-n' says to remove the export property"
            },
            {
                "encoding": "ASCII",
                "offset": 521864,
                "string": "    from subsequent NAMEs.  An argument of `--' disables further option"
            },
            {
                "encoding": "ASCII",
                "offset": 521936,
                "string": "    processing."
            },
            {
                "encoding": "ASCII",
                "offset": 521960,
                "string": " The given NAMEs are marked readonly and the values of these NAMEs may"
            },
            {
                "encoding": "ASCII",
                "offset": 522031,
                "string": "    not be changed by subsequent assignment.  If the -f option is given,"
            },
            {
                "encoding": "ASCII",
                "offset": 522104,
                "string": "    then functions corresponding to the NAMEs are so marked.  If no"
            },
            {
                "encoding": "ASCII",
                "offset": 522172,
                "string": "    arguments are given, or if `-p' is given, a list of all readonly names"
            },
            {
                "encoding": "ASCII",
                "offset": 522247,
                "string": "    is printed.  The `-a' option means to treat each NAME as"
            },
            {
                "encoding": "ASCII",
                "offset": 522308,
                "string": "    an array variable.  An argument of `--' disables further option"
            },
            {
                "encoding": "ASCII",
                "offset": 522376,
                "string": "    processing."
            },
            {
                "encoding": "ASCII",
                "offset": 522400,
                "string": " The positional parameters from $N+1 ... are renamed to $1 ...  If N is"
            },
            {
                "encoding": "ASCII",
                "offset": 522472,
                "string": "    not given, it is assumed to be 1."
            },
            {
                "encoding": "ASCII",
                "offset": 522520,
                "string": " Read and execute commands from FILENAME and return.  The pathnames"
            },
            {
                "encoding": "ASCII",
                "offset": 522588,
                "string": "    in $PATH are used to find the directory containing FILENAME.  If any"
            },
            {
                "encoding": "ASCII",
                "offset": 522661,
                "string": "    ARGUMENTS are supplied, they become the positional parameters when"
            },
            {
                "encoding": "ASCII",
                "offset": 522732,
                "string": "    FILENAME is executed."
            },
            {
                "encoding": "ASCII",
                "offset": 522776,
                "string": " Suspend the execution of this shell until it receives a SIGCONT"
            },
            {
                "encoding": "ASCII",
                "offset": 522841,
                "string": "    signal.  The `-f' if specified says not to complain about this"
            },
            {
                "encoding": "ASCII",
                "offset": 522908,
                "string": "    being a login shell if it is; just suspend anyway."
            },
            {
                "encoding": "ASCII",
                "offset": 522972,
                "string": " Exits with a status of 0 (true) or 1 (false) depending on"
            },
            {
                "encoding": "ASCII",
                "offset": 523031,
                "string": "    the evaluation of EXPR.  Expressions may be unary or binary.  Unary"
            },
            {
                "encoding": "ASCII",
                "offset": 523103,
                "string": "    expressions are often used to examine the status of a file.  There"
            },
            {
                "encoding": "ASCII",
                "offset": 523174,
                "string": "    are string operators as well, and numeric comparison operators."
            },
            {
                "encoding": "ASCII",
                "offset": 523242,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 523247,
                "string": "    File operators:"
            },
            {
                "encoding": "ASCII",
                "offset": 523267,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 523272,
                "string": "        -a FILE        True if file exists."
            },
            {
                "encoding": "ASCII",
                "offset": 523316,
                "string": "        -b FILE        True if file is block special."
            },
            {
                "encoding": "ASCII",
                "offset": 523370,
                "string": "        -c FILE        True if file is character special."
            },
            {
                "encoding": "ASCII",
                "offset": 523428,
                "string": "        -d FILE        True if file is a directory."
            },
            {
                "encoding": "ASCII",
                "offset": 523480,
                "string": "        -e FILE        True if file exists."
            },
            {
                "encoding": "ASCII",
                "offset": 523524,
                "string": "        -f FILE        True if file exists and is a regular file."
            },
            {
                "encoding": "ASCII",
                "offset": 523590,
                "string": "        -g FILE        True if file is set-group-id."
            },
            {
                "encoding": "ASCII",
                "offset": 523643,
                "string": "        -h FILE        True if file is a symbolic link."
            },
            {
                "encoding": "ASCII",
                "offset": 523699,
                "string": "        -L FILE        True if file is a symbolic link."
            },
            {
                "encoding": "ASCII",
                "offset": 523755,
                "string": "        -k FILE        True if file has its `sticky' bit set."
            },
            {
                "encoding": "ASCII",
                "offset": 523817,
                "string": "        -p FILE        True if file is a named pipe."
            },
            {
                "encoding": "ASCII",
                "offset": 523870,
                "string": "        -r FILE        True if file is readable by you."
            },
            {
                "encoding": "ASCII",
                "offset": 523926,
                "string": "        -s FILE        True if file exists and is not empty."
            },
            {
                "encoding": "ASCII",
                "offset": 523987,
                "string": "        -S FILE        True if file is a socket."
            },
            {
                "encoding": "ASCII",
                "offset": 524036,
                "string": "        -t FD          True if FD is opened on a terminal."
            },
            {
                "encoding": "ASCII",
                "offset": 524095,
                "string": "        -u FILE        True if the file is set-user-id."
            },
            {
                "encoding": "ASCII",
                "offset": 524151,
                "string": "        -w FILE        True if the file is writable by you."
            },
            {
                "encoding": "ASCII",
                "offset": 524211,
                "string": "        -x FILE        True if the file is executable by you."
            },
            {
                "encoding": "ASCII",
                "offset": 524273,
                "string": "        -O FILE        True if the file is effectively owned by you."
            },
            {
                "encoding": "ASCII",
                "offset": 524342,
                "string": "        -G FILE        True if the file is effectively owned by your group."
            },
            {
                "encoding": "ASCII",
                "offset": 524418,
                "string": "        -N FILE        True if the file has been modified since it was last read."
            },
            {
                "encoding": "ASCII",
                "offset": 524500,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 524505,
                "string": "      FILE1 -nt FILE2  True if file1 is newer than file2 (according to"
            },
            {
                "encoding": "ASCII",
                "offset": 524576,
                "string": "                       modification date)."
            },
            {
                "encoding": "ASCII",
                "offset": 524619,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 524624,
                "string": "      FILE1 -ot FILE2  True if file1 is older than file2."
            },
            {
                "encoding": "ASCII",
                "offset": 524682,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 524687,
                "string": "      FILE1 -ef FILE2  True if file1 is a hard link to file2."
            },
            {
                "encoding": "ASCII",
                "offset": 524749,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 524754,
                "string": "    String operators:"
            },
            {
                "encoding": "ASCII",
                "offset": 524776,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 524781,
                "string": "        -z STRING      True if string is empty."
            },
            {
                "encoding": "ASCII",
                "offset": 524829,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 524834,
                "string": "        -n STRING"
            },
            {
                "encoding": "ASCII",
                "offset": 524852,
                "string": "        STRING         True if string is not empty."
            },
            {
                "encoding": "ASCII",
                "offset": 524904,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 524909,
                "string": "        STRING1 = STRING2"
            },
            {
                "encoding": "ASCII",
                "offset": 524935,
                "string": "                       True if the strings are equal."
            },
            {
                "encoding": "ASCII",
                "offset": 524989,
                "string": "        STRING1 != STRING2"
            },
            {
                "encoding": "ASCII",
                "offset": 525016,
                "string": "                       True if the strings are not equal."
            },
            {
                "encoding": "ASCII",
                "offset": 525074,
                "string": "        STRING1 < STRING2"
            },
            {
                "encoding": "ASCII",
                "offset": 525100,
                "string": "                       True if STRING1 sorts before STRING2 lexicographically."
            },
            {
                "encoding": "ASCII",
                "offset": 525179,
                "string": "        STRING1 > STRING2"
            },
            {
                "encoding": "ASCII",
                "offset": 525205,
                "string": "                       True if STRING1 sorts after STRING2 lexicographically."
            },
            {
                "encoding": "ASCII",
                "offset": 525283,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 525288,
                "string": "    Other operators:"
            },
            {
                "encoding": "ASCII",
                "offset": 525309,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 525314,
                "string": "        -o OPTION      True if the shell option OPTION is enabled."
            },
            {
                "encoding": "ASCII",
                "offset": 525381,
                "string": "        ! EXPR         True if expr is false."
            },
            {
                "encoding": "ASCII",
                "offset": 525427,
                "string": "        EXPR1 -a EXPR2 True if both expr1 AND expr2 are true."
            },
            {
                "encoding": "ASCII",
                "offset": 525489,
                "string": "        EXPR1 -o EXPR2 True if either expr1 OR expr2 is true."
            },
            {
                "encoding": "ASCII",
                "offset": 525551,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 525556,
                "string": "        arg1 OP arg2   Arithmetic tests.  OP is one of -eq, -ne,"
            },
            {
                "encoding": "ASCII",
                "offset": 525621,
                "string": "                       -lt, -le, -gt, or -ge."
            },
            {
                "encoding": "ASCII",
                "offset": 525667,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 525672,
                "string": "    Arithmetic binary operators return true if ARG1 is equal, not-equal,"
            },
            {
                "encoding": "ASCII",
                "offset": 525745,
                "string": "    less-than, less-than-or-equal, greater-than, or greater-than-or-equal"
            },
            {
                "encoding": "ASCII",
                "offset": 525819,
                "string": "    than ARG2."
            },
            {
                "encoding": "ASCII",
                "offset": 525844,
                "string": " This is a synonym for the \"test\" builtin, but the last"
            },
            {
                "encoding": "ASCII",
                "offset": 525900,
                "string": "    argument must be a literal `]', to match the opening `['."
            },
            {
                "encoding": "ASCII",
                "offset": 525972,
                "string": " Print the accumulated user and system times for processes run from"
            },
            {
                "encoding": "ASCII",
                "offset": 526040,
                "string": "    the shell."
            },
            {
                "encoding": "ASCII",
                "offset": 526064,
                "string": " The command ARG is to be read and executed when the shell receives"
            },
            {
                "encoding": "ASCII",
                "offset": 526132,
                "string": "    signal(s) SIGNAL_SPEC.  If ARG is absent (and a single SIGNAL_SPEC"
            },
            {
                "encoding": "ASCII",
                "offset": 526203,
                "string": "    is supplied) or `-', each specified signal is reset to its original"
            },
            {
                "encoding": "ASCII",
                "offset": 526275,
                "string": "    value.  If ARG is the null string each SIGNAL_SPEC is ignored by the"
            },
            {
                "encoding": "ASCII",
                "offset": 526348,
                "string": "    shell and by the commands it invokes.  If a SIGNAL_SPEC is EXIT (0)"
            },
            {
                "encoding": "ASCII",
                "offset": 526420,
                "string": "    the command ARG is executed on exit from the shell.  If a SIGNAL_SPEC"
            },
            {
                "encoding": "ASCII",
                "offset": 526494,
                "string": "    is DEBUG, ARG is executed after every simple command.  If the`-p' option"
            },
            {
                "encoding": "ASCII",
                "offset": 526571,
                "string": "    is supplied then the trap commands associated with each SIGNAL_SPEC are"
            },
            {
                "encoding": "ASCII",
                "offset": 526647,
                "string": "    displayed.  If no arguments are supplied or if only `-p' is given, trap"
            },
            {
                "encoding": "ASCII",
                "offset": 526723,
                "string": "    prints the list of commands associated with each signal.  Each SIGNAL_SPEC"
            },
            {
                "encoding": "ASCII",
                "offset": 526802,
                "string": "    is either a signal name in <signal.h> or a signal number.  Signal names"
            },
            {
                "encoding": "ASCII",
                "offset": 526878,
                "string": "    are case insensitive and the SIG prefix is optional.  `trap -l' prints"
            },
            {
                "encoding": "ASCII",
                "offset": 526953,
                "string": "    a list of signal names and their corresponding numbers.  Note that a"
            },
            {
                "encoding": "ASCII",
                "offset": 527026,
                "string": "    signal can be sent to the shell with \"kill -signal $$\"."
            },
            {
                "encoding": "ASCII",
                "offset": 527096,
                "string": " For each NAME, indicate how it would be interpreted if used as a"
            },
            {
                "encoding": "ASCII",
                "offset": 527162,
                "string": "    command name."
            },
            {
                "encoding": "ASCII",
                "offset": 527180,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 527185,
                "string": "    If the -t option is used, `type' outputs a single word which is one of"
            },
            {
                "encoding": "ASCII",
                "offset": 527260,
                "string": "    `alias', `keyword', `function', `builtin', `file' or `', if NAME is an"
            },
            {
                "encoding": "ASCII",
                "offset": 527335,
                "string": "    alias, shell reserved word, shell function, shell builtin, disk file,"
            },
            {
                "encoding": "ASCII",
                "offset": 527409,
                "string": "    or unfound, respectively."
            },
            {
                "encoding": "ASCII",
                "offset": 527439,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 527444,
                "string": "    If the -p flag is used, `type' either returns the name of the disk"
            },
            {
                "encoding": "ASCII",
                "offset": 527515,
                "string": "    file that would be executed, or nothing if `type -t NAME' would not"
            },
            {
                "encoding": "ASCII",
                "offset": 527587,
                "string": "    return `file'."
            },
            {
                "encoding": "ASCII",
                "offset": 527606,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 527611,
                "string": "    If the -a flag is used, `type' displays all of the places that contain"
            },
            {
                "encoding": "ASCII",
                "offset": 527686,
                "string": "    an executable named `file'.  This includes aliases, builtins, and"
            },
            {
                "encoding": "ASCII",
                "offset": 527756,
                "string": "    functions, if and only if the -p flag is not also used."
            },
            {
                "encoding": "ASCII",
                "offset": 527816,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 527821,
                "string": "    The -f flag suppresses shell function lookup."
            },
            {
                "encoding": "ASCII",
                "offset": 527871,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 527876,
                "string": "    The -P flag forces a PATH search for each NAME, even if it is an alias,"
            },
            {
                "encoding": "ASCII",
                "offset": 527952,
                "string": "    builtin, or function, and returns the name of the disk file that would"
            },
            {
                "encoding": "ASCII",
                "offset": 528027,
                "string": "    be executed."
            },
            {
                "encoding": "ASCII",
                "offset": 528052,
                "string": " Ulimit provides control over the resources available to processes"
            },
            {
                "encoding": "ASCII",
                "offset": 528119,
                "string": "    started by the shell, on systems that allow such control.  If an"
            },
            {
                "encoding": "ASCII",
                "offset": 528188,
                "string": "    option is given, it is interpreted as follows:"
            },
            {
                "encoding": "ASCII",
                "offset": 528239,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 528244,
                "string": "        -S\tuse the `soft' resource limit"
            },
            {
                "encoding": "ASCII",
                "offset": 528285,
                "string": "        -H\tuse the `hard' resource limit"
            },
            {
                "encoding": "ASCII",
                "offset": 528326,
                "string": "        -a\tall current limits are reported"
            },
            {
                "encoding": "ASCII",
                "offset": 528369,
                "string": "        -c\tthe maximum size of core files created"
            },
            {
                "encoding": "ASCII",
                "offset": 528419,
                "string": "        -d\tthe maximum size of a process's data segment"
            },
            {
                "encoding": "ASCII",
                "offset": 528475,
                "string": "        -f\tthe maximum size of files created by the shell"
            },
            {
                "encoding": "ASCII",
                "offset": 528533,
                "string": "        -i  the maximum number of pending signals"
            },
            {
                "encoding": "ASCII",
                "offset": 528583,
                "string": "        -l\tthe maximum size a process may lock into memory"
            },
            {
                "encoding": "ASCII",
                "offset": 528642,
                "string": "        -m\tthe maximum resident set size"
            },
            {
                "encoding": "ASCII",
                "offset": 528683,
                "string": "        -n\tthe maximum number of open file descriptors"
            },
            {
                "encoding": "ASCII",
                "offset": 528738,
                "string": "        -p\tthe pipe buffer size"
            },
            {
                "encoding": "ASCII",
                "offset": 528770,
                "string": "        -q  the maximum number of bytes in POSIX message queues"
            },
            {
                "encoding": "ASCII",
                "offset": 528834,
                "string": "        -s\tthe maximum stack size"
            },
            {
                "encoding": "ASCII",
                "offset": 528868,
                "string": "        -t\tthe maximum amount of cpu time in seconds"
            },
            {
                "encoding": "ASCII",
                "offset": 528921,
                "string": "        -u\tthe maximum number of user processes"
            },
            {
                "encoding": "ASCII",
                "offset": 528969,
                "string": "        -v\tthe size of virtual memory"
            },
            {
                "encoding": "ASCII",
                "offset": 529007,
                "string": "        -x  the maximum number of file locks"
            },
            {
                "encoding": "ASCII",
                "offset": 529052,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 529057,
                "string": "    If LIMIT is given, it is the new value of the specified resource;"
            },
            {
                "encoding": "ASCII",
                "offset": 529127,
                "string": "    the special LIMIT values `soft', `hard', and `unlimited' stand for"
            },
            {
                "encoding": "ASCII",
                "offset": 529198,
                "string": "    the current soft limit, the current hard limit, and no limit, respectively."
            },
            {
                "encoding": "ASCII",
                "offset": 529278,
                "string": "    Otherwise, the current value of the specified resource is printed."
            },
            {
                "encoding": "ASCII",
                "offset": 529349,
                "string": "    If no option is given, then -f is assumed.  Values are in 1024-byte"
            },
            {
                "encoding": "ASCII",
                "offset": 529421,
                "string": "    increments, except for -t, which is in seconds, -p, which is in"
            },
            {
                "encoding": "ASCII",
                "offset": 529489,
                "string": "    increments of 512 bytes, and -u, which is an unscaled number of"
            },
            {
                "encoding": "ASCII",
                "offset": 529557,
                "string": "    processes."
            },
            {
                "encoding": "ASCII",
                "offset": 529580,
                "string": " The user file-creation mask is set to MODE.  If MODE is omitted, or if"
            },
            {
                "encoding": "ASCII",
                "offset": 529652,
                "string": "    `-S' is supplied, the current value of the mask is printed.  The `-S'"
            },
            {
                "encoding": "ASCII",
                "offset": 529726,
                "string": "    option makes the output symbolic; otherwise an octal number is output."
            },
            {
                "encoding": "ASCII",
                "offset": 529801,
                "string": "    If `-p' is supplied, and MODE is omitted, the output is in a form"
            },
            {
                "encoding": "ASCII",
                "offset": 529871,
                "string": "    that may be used as input.  If MODE begins with a digit, it is"
            },
            {
                "encoding": "ASCII",
                "offset": 529938,
                "string": "    interpreted as an octal number, otherwise it is a symbolic mode string"
            },
            {
                "encoding": "ASCII",
                "offset": 530013,
                "string": "    like that accepted by chmod(1)."
            },
            {
                "encoding": "ASCII",
                "offset": 530060,
                "string": " Wait for the specified process and report its termination status.  If"
            },
            {
                "encoding": "ASCII",
                "offset": 530131,
                "string": "    N is not given, all currently active child processes are waited for,"
            },
            {
                "encoding": "ASCII",
                "offset": 530204,
                "string": "    and the return code is zero.  N may be a process ID or a job"
            },
            {
                "encoding": "ASCII",
                "offset": 530269,
                "string": "    specification; if a job spec is given, all processes in the job's"
            },
            {
                "encoding": "ASCII",
                "offset": 530339,
                "string": "    pipeline are waited for."
            },
            {
                "encoding": "ASCII",
                "offset": 530376,
                "string": " The `for' loop executes a sequence of commands for each member in a"
            },
            {
                "encoding": "ASCII",
                "offset": 530445,
                "string": "    list of items.  If `in WORDS ...;' is not present, then `in \"$@\"' is"
            },
            {
                "encoding": "ASCII",
                "offset": 530518,
                "string": "    assumed.  For each element in WORDS, NAME is set to that element, and"
            },
            {
                "encoding": "ASCII",
                "offset": 530592,
                "string": "    the COMMANDS are executed."
            },
            {
                "encoding": "ASCII",
                "offset": 530632,
                "string": " Equivalent to"
            },
            {
                "encoding": "ASCII",
                "offset": 530647,
                "string": "    \t(( EXP1 ))"
            },
            {
                "encoding": "ASCII",
                "offset": 530663,
                "string": "    \twhile (( EXP2 )); do"
            },
            {
                "encoding": "ASCII",
                "offset": 530689,
                "string": "    \t\tCOMMANDS"
            },
            {
                "encoding": "ASCII",
                "offset": 530704,
                "string": "    \t\t(( EXP3 ))"
            },
            {
                "encoding": "ASCII",
                "offset": 530721,
                "string": "    \tdone"
            },
            {
                "encoding": "ASCII",
                "offset": 530731,
                "string": "    EXP1, EXP2, and EXP3 are arithmetic expressions.  If any expression is"
            },
            {
                "encoding": "ASCII",
                "offset": 530806,
                "string": "    omitted, it behaves as if it evaluates to 1."
            },
            {
                "encoding": "ASCII",
                "offset": 530864,
                "string": " The WORDS are expanded, generating a list of words.  The"
            },
            {
                "encoding": "ASCII",
                "offset": 530922,
                "string": "    set of expanded words is printed on the standard error, each"
            },
            {
                "encoding": "ASCII",
                "offset": 530987,
                "string": "    preceded by a number.  If `in WORDS' is not present, `in \"$@\"'"
            },
            {
                "encoding": "ASCII",
                "offset": 531054,
                "string": "    is assumed.  The PS3 prompt is then displayed and a line read"
            },
            {
                "encoding": "ASCII",
                "offset": 531120,
                "string": "    from the standard input.  If the line consists of the number"
            },
            {
                "encoding": "ASCII",
                "offset": 531185,
                "string": "    corresponding to one of the displayed words, then NAME is set"
            },
            {
                "encoding": "ASCII",
                "offset": 531251,
                "string": "    to that word.  If the line is empty, WORDS and the prompt are"
            },
            {
                "encoding": "ASCII",
                "offset": 531317,
                "string": "    redisplayed.  If EOF is read, the command completes.  Any other"
            },
            {
                "encoding": "ASCII",
                "offset": 531385,
                "string": "    value read causes NAME to be set to null.  The line read is saved"
            },
            {
                "encoding": "ASCII",
                "offset": 531455,
                "string": "    in the variable REPLY.  COMMANDS are executed after each selection"
            },
            {
                "encoding": "ASCII",
                "offset": 531526,
                "string": "    until a break command is executed."
            },
            {
                "encoding": "ASCII",
                "offset": 531576,
                "string": " Execute PIPELINE and print a summary of the real time, user CPU time,"
            },
            {
                "encoding": "ASCII",
                "offset": 531647,
                "string": "    and system CPU time spent executing PIPELINE when it terminates."
            },
            {
                "encoding": "ASCII",
                "offset": 531716,
                "string": "    The return status is the return status of PIPELINE.  The `-p' option"
            },
            {
                "encoding": "ASCII",
                "offset": 531789,
                "string": "    prints the timing summary in a slightly different format.  This uses"
            },
            {
                "encoding": "ASCII",
                "offset": 531862,
                "string": "    the value of the TIMEFORMAT variable as the output format."
            },
            {
                "encoding": "ASCII",
                "offset": 531936,
                "string": " Selectively execute COMMANDS based upon WORD matching PATTERN.  The"
            },
            {
                "encoding": "ASCII",
                "offset": 532005,
                "string": "    `|' is used to separate multiple patterns."
            },
            {
                "encoding": "ASCII",
                "offset": 532060,
                "string": " The `if COMMANDS' list is executed.  If its exit status is zero, then the"
            },
            {
                "encoding": "ASCII",
                "offset": 532135,
                "string": "    `then COMMANDS' list is executed.  Otherwise, each `elif COMMANDS' list is"
            },
            {
                "encoding": "ASCII",
                "offset": 532214,
                "string": "    executed in turn, and if its exit status is zero, the corresponding"
            },
            {
                "encoding": "ASCII",
                "offset": 532286,
                "string": "    `then COMMANDS' list is executed and the if command completes.  Otherwise,"
            },
            {
                "encoding": "ASCII",
                "offset": 532365,
                "string": "    the `else COMMANDS' list is executed, if present.  The exit status of the"
            },
            {
                "encoding": "ASCII",
                "offset": 532443,
                "string": "    entire construct is the exit status of the last command executed, or zero"
            },
            {
                "encoding": "ASCII",
                "offset": 532521,
                "string": "    if no condition tested true."
            },
            {
                "encoding": "ASCII",
                "offset": 532564,
                "string": " Expand and execute COMMANDS as long as the final command in the"
            },
            {
                "encoding": "ASCII",
                "offset": 532629,
                "string": "    `while' COMMANDS has an exit status of zero."
            },
            {
                "encoding": "ASCII",
                "offset": 532688,
                "string": " Expand and execute COMMANDS as long as the final command in the"
            },
            {
                "encoding": "ASCII",
                "offset": 532753,
                "string": "    `until' COMMANDS has an exit status which is not zero."
            },
            {
                "encoding": "ASCII",
                "offset": 532820,
                "string": " Create a simple command invoked by NAME which runs COMMANDS."
            },
            {
                "encoding": "ASCII",
                "offset": 532882,
                "string": "    Arguments on the command line along with NAME are passed to the"
            },
            {
                "encoding": "ASCII",
                "offset": 532950,
                "string": "    function as $0 .. $n."
            },
            {
                "encoding": "ASCII",
                "offset": 532984,
                "string": " Run a set of commands in a group.  This is one way to redirect an"
            },
            {
                "encoding": "ASCII",
                "offset": 533051,
                "string": "    entire set of commands."
            },
            {
                "encoding": "ASCII",
                "offset": 533088,
                "string": " Equivalent to the JOB_SPEC argument to the `fg' command.  Resume a"
            },
            {
                "encoding": "ASCII",
                "offset": 533156,
                "string": "    stopped or background job.  JOB_SPEC can specify either a job name"
            },
            {
                "encoding": "ASCII",
                "offset": 533227,
                "string": "    or a job number.  Following JOB_SPEC with a `&' places the job in"
            },
            {
                "encoding": "ASCII",
                "offset": 533297,
                "string": "    the background, as if the job specification had been supplied as an"
            },
            {
                "encoding": "ASCII",
                "offset": 533369,
                "string": "    argument to `bg'."
            },
            {
                "encoding": "ASCII",
                "offset": 533400,
                "string": " The EXPRESSION is evaluated according to the rules for arithmetic"
            },
            {
                "encoding": "ASCII",
                "offset": 533467,
                "string": "    evaluation.  Equivalent to \"let EXPRESSION\"."
            },
            {
                "encoding": "ASCII",
                "offset": 533524,
                "string": " Returns a status of 0 or 1 depending on the evaluation of the conditional"
            },
            {
                "encoding": "ASCII",
                "offset": 533599,
                "string": "    expression EXPRESSION.  Expressions are composed of the same primaries used"
            },
            {
                "encoding": "ASCII",
                "offset": 533679,
                "string": "    by the `test' builtin, and may be combined using the following operators"
            },
            {
                "encoding": "ASCII",
                "offset": 533756,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 533761,
                "string": "    \t( EXPRESSION )\tReturns the value of EXPRESSION"
            },
            {
                "encoding": "ASCII",
                "offset": 533813,
                "string": "    \t! EXPRESSION\tTrue if EXPRESSION is false; else false"
            },
            {
                "encoding": "ASCII",
                "offset": 533871,
                "string": "    \tEXPR1 && EXPR2\tTrue if both EXPR1 and EXPR2 are true; else false"
            },
            {
                "encoding": "ASCII",
                "offset": 533941,
                "string": "    \tEXPR1 || EXPR2\tTrue if either EXPR1 or EXPR2 is true; else false"
            },
            {
                "encoding": "ASCII",
                "offset": 534011,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 534016,
                "string": "    When the `==' and `!=' operators are used, the string to the right of the"
            },
            {
                "encoding": "ASCII",
                "offset": 534094,
                "string": "    operator is used as a pattern and pattern matching is performed.  The"
            },
            {
                "encoding": "ASCII",
                "offset": 534168,
                "string": "    && and || operators do not evaluate EXPR2 if EXPR1 is sufficient to"
            },
            {
                "encoding": "ASCII",
                "offset": 534240,
                "string": "    determine the expression's value."
            },
            {
                "encoding": "ASCII",
                "offset": 534288,
                "string": " BASH_VERSION    Version information for this Bash."
            },
            {
                "encoding": "ASCII",
                "offset": 534340,
                "string": "    CDPATH          A colon-separated list of directories to search"
            },
            {
                "encoding": "ASCII",
                "offset": 534408,
                "string": "    \t\tfor directries given as arguments to `cd'."
            },
            {
                "encoding": "ASCII",
                "offset": 534457,
                "string": "    GLOBIGNORE\tA colon-separated list of patterns describing filenames to"
            },
            {
                "encoding": "ASCII",
                "offset": 534531,
                "string": "    \t\tbe ignored by pathname expansion."
            },
            {
                "encoding": "ASCII",
                "offset": 534571,
                "string": "    HISTFILE        The name of the file where your command history is stored."
            },
            {
                "encoding": "ASCII",
                "offset": 534650,
                "string": "    HISTFILESIZE    The maximum number of lines this file can contain."
            },
            {
                "encoding": "ASCII",
                "offset": 534721,
                "string": "    HISTSIZE        The maximum number of history lines that a running"
            },
            {
                "encoding": "ASCII",
                "offset": 534792,
                "string": "    \t\tshell can access."
            },
            {
                "encoding": "ASCII",
                "offset": 534816,
                "string": "    HOME            The complete pathname to your login directory."
            },
            {
                "encoding": "ASCII",
                "offset": 534883,
                "string": "    HOSTNAME\tThe name of the current host."
            },
            {
                "encoding": "ASCII",
                "offset": 534926,
                "string": "    HOSTTYPE        The type of CPU this version of Bash is running under."
            },
            {
                "encoding": "ASCII",
                "offset": 535001,
                "string": "    IGNOREEOF       Controls the action of the shell on receipt of an EOF"
            },
            {
                "encoding": "ASCII",
                "offset": 535075,
                "string": "    \t\tcharacter as the sole input.  If set, then the value"
            },
            {
                "encoding": "ASCII",
                "offset": 535134,
                "string": "    \t\tof it is the number of EOF characters that can be seen"
            },
            {
                "encoding": "ASCII",
                "offset": 535195,
                "string": "    \t\tin a row on an empty line before the shell will exit"
            },
            {
                "encoding": "ASCII",
                "offset": 535254,
                "string": "    \t\t(default 10).  When unset, EOF signifies the end of input."
            },
            {
                "encoding": "ASCII",
                "offset": 535319,
                "string": "    MACHTYPE\tA string describing the current system Bash is running on."
            },
            {
                "encoding": "ASCII",
                "offset": 535391,
                "string": "    MAILCHECK\tHow often, in seconds, Bash checks for new mail."
            },
            {
                "encoding": "ASCII",
                "offset": 535454,
                "string": "    MAILPATH\tA colon-separated list of filenames which Bash checks"
            },
            {
                "encoding": "ASCII",
                "offset": 535521,
                "string": "    \t\tfor new mail."
            },
            {
                "encoding": "ASCII",
                "offset": 535541,
                "string": "    OSTYPE\t\tThe version of Unix this version of Bash is running on."
            },
            {
                "encoding": "ASCII",
                "offset": 535609,
                "string": "    PATH            A colon-separated list of directories to search when"
            },
            {
                "encoding": "ASCII",
                "offset": 535682,
                "string": "    \t\tlooking for commands."
            },
            {
                "encoding": "ASCII",
                "offset": 535710,
                "string": "    PROMPT_COMMAND  A command to be executed before the printing of each"
            },
            {
                "encoding": "ASCII",
                "offset": 535783,
                "string": "    \t\tprimary prompt."
            },
            {
                "encoding": "ASCII",
                "offset": 535805,
                "string": "    PS1             The primary prompt string."
            },
            {
                "encoding": "ASCII",
                "offset": 535852,
                "string": "    PS2             The secondary prompt string."
            },
            {
                "encoding": "ASCII",
                "offset": 535901,
                "string": "    PWD\t\tThe full pathname of the current directory."
            },
            {
                "encoding": "ASCII",
                "offset": 535954,
                "string": "    SHELLOPTS\tA colon-separated list of enabled shell options."
            },
            {
                "encoding": "ASCII",
                "offset": 536017,
                "string": "    TERM            The name of the current terminal type."
            },
            {
                "encoding": "ASCII",
                "offset": 536076,
                "string": "    TIMEFORMAT\tThe output format for timing statistics displayed by the"
            },
            {
                "encoding": "ASCII",
                "offset": 536148,
                "string": "    \t\t`time' reserved word."
            },
            {
                "encoding": "ASCII",
                "offset": 536176,
                "string": "    auto_resume     Non-null means a command word appearing on a line by"
            },
            {
                "encoding": "ASCII",
                "offset": 536249,
                "string": "    \t\titself is first looked for in the list of currently"
            },
            {
                "encoding": "ASCII",
                "offset": 536307,
                "string": "    \t\tstopped jobs.  If found there, that job is foregrounded."
            },
            {
                "encoding": "ASCII",
                "offset": 536370,
                "string": "    \t\tA value of `exact' means that the command word must"
            },
            {
                "encoding": "ASCII",
                "offset": 536428,
                "string": "    \t\texactly match a command in the list of stopped jobs.  A"
            },
            {
                "encoding": "ASCII",
                "offset": 536490,
                "string": "    \t\tvalue of `substring' means that the command word must"
            },
            {
                "encoding": "ASCII",
                "offset": 536550,
                "string": "    \t\tmatch a substring of the job.  Any other value means that"
            },
            {
                "encoding": "ASCII",
                "offset": 536614,
                "string": "    \t\tthe command must be a prefix of a stopped job."
            },
            {
                "encoding": "ASCII",
                "offset": 536667,
                "string": "    histchars       Characters controlling history expansion and quick"
            },
            {
                "encoding": "ASCII",
                "offset": 536738,
                "string": "    \t\tsubstitution.  The first character is the history"
            },
            {
                "encoding": "ASCII",
                "offset": 536794,
                "string": "    \t\tsubstitution character, usually `!'.  The second is"
            },
            {
                "encoding": "ASCII",
                "offset": 536852,
                "string": "    \t\tthe `quick substitution' character, usually `^'.  The"
            },
            {
                "encoding": "ASCII",
                "offset": 536912,
                "string": "    \t\tthird is the `history comment' character, usually `#'."
            },
            {
                "encoding": "ASCII",
                "offset": 536973,
                "string": "    HISTIGNORE\tA colon-separated list of patterns used to decide which"
            },
            {
                "encoding": "ASCII",
                "offset": 537044,
                "string": "    \t\tcommands should be saved on the history list."
            },
            {
                "encoding": "ASCII",
                "offset": 537108,
                "string": " Adds a directory to the top of the directory stack, or rotates"
            },
            {
                "encoding": "ASCII",
                "offset": 537172,
                "string": "    the stack, making the new top of the stack the current working"
            },
            {
                "encoding": "ASCII",
                "offset": 537239,
                "string": "    directory.  With no arguments, exchanges the top two directories."
            },
            {
                "encoding": "ASCII",
                "offset": 537309,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 537314,
                "string": "    +N\tRotates the stack so that the Nth directory (counting"
            },
            {
                "encoding": "ASCII",
                "offset": 537375,
                "string": "    \tfrom the left of the list shown by `dirs', starting with"
            },
            {
                "encoding": "ASCII",
                "offset": 537437,
                "string": "    \tzero) is at the top."
            },
            {
                "encoding": "ASCII",
                "offset": 537463,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 537468,
                "string": "    -N\tRotates the stack so that the Nth directory (counting"
            },
            {
                "encoding": "ASCII",
                "offset": 537529,
                "string": "    \tfrom the right of the list shown by `dirs', starting with"
            },
            {
                "encoding": "ASCII",
                "offset": 537592,
                "string": "    \tzero) is at the top."
            },
            {
                "encoding": "ASCII",
                "offset": 537618,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 537623,
                "string": "    -n\tsuppress the normal change of directory when adding directories"
            },
            {
                "encoding": "ASCII",
                "offset": 537694,
                "string": "    \tto the stack, so only the stack is manipulated."
            },
            {
                "encoding": "ASCII",
                "offset": 537747,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 537752,
                "string": "    dir\tadds DIR to the directory stack at the top, making it the"
            },
            {
                "encoding": "ASCII",
                "offset": 537818,
                "string": "    \tnew current working directory."
            },
            {
                "encoding": "ASCII",
                "offset": 537854,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 537859,
                "string": "    You can see the directory stack with the `dirs' command."
            },
            {
                "encoding": "ASCII",
                "offset": 537928,
                "string": " Removes entries from the directory stack.  With no arguments,"
            },
            {
                "encoding": "ASCII",
                "offset": 537991,
                "string": "    removes the top directory from the stack, and cd's to the new"
            },
            {
                "encoding": "ASCII",
                "offset": 538057,
                "string": "    top directory."
            },
            {
                "encoding": "ASCII",
                "offset": 538076,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 538081,
                "string": "    +N\tremoves the Nth entry counting from the left of the list"
            },
            {
                "encoding": "ASCII",
                "offset": 538145,
                "string": "    \tshown by `dirs', starting with zero.  For example: `popd +0'"
            },
            {
                "encoding": "ASCII",
                "offset": 538211,
                "string": "    \tremoves the first directory, `popd +1' the second."
            },
            {
                "encoding": "ASCII",
                "offset": 538267,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 538272,
                "string": "    -N\tremoves the Nth entry counting from the right of the list"
            },
            {
                "encoding": "ASCII",
                "offset": 538337,
                "string": "    \tshown by `dirs', starting with zero.  For example: `popd -0'"
            },
            {
                "encoding": "ASCII",
                "offset": 538403,
                "string": "    \tremoves the last directory, `popd -1' the next to last."
            },
            {
                "encoding": "ASCII",
                "offset": 538464,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 538469,
                "string": "    -n\tsuppress the normal change of directory when removing directories"
            },
            {
                "encoding": "ASCII",
                "offset": 538542,
                "string": "    \tfrom the stack, so only the stack is manipulated."
            },
            {
                "encoding": "ASCII",
                "offset": 538597,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 538602,
                "string": "    You can see the directory stack with the `dirs' command."
            },
            {
                "encoding": "ASCII",
                "offset": 538672,
                "string": " Display the list of currently remembered directories.  Directories"
            },
            {
                "encoding": "ASCII",
                "offset": 538740,
                "string": "    find their way onto the list with the `pushd' command; you can get"
            },
            {
                "encoding": "ASCII",
                "offset": 538811,
                "string": "    back up through the list with the `popd' command."
            },
            {
                "encoding": "ASCII",
                "offset": 538865,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 538870,
                "string": "    The -l flag specifies that `dirs' should not print shorthand versions"
            },
            {
                "encoding": "ASCII",
                "offset": 538944,
                "string": "    of directories which are relative to your home directory.  This means"
            },
            {
                "encoding": "ASCII",
                "offset": 539018,
                "string": "    that `~/bin' might be displayed as `/homes/bfox/bin'.  The -v flag"
            },
            {
                "encoding": "ASCII",
                "offset": 539089,
                "string": "    causes `dirs' to print the directory stack with one entry per line,"
            },
            {
                "encoding": "ASCII",
                "offset": 539161,
                "string": "    prepending the directory name with its position in the stack.  The -p"
            },
            {
                "encoding": "ASCII",
                "offset": 539235,
                "string": "    flag does the same thing, but the stack position is not prepended."
            },
            {
                "encoding": "ASCII",
                "offset": 539306,
                "string": "    The -c flag clears the directory stack by deleting all of the elements."
            },
            {
                "encoding": "ASCII",
                "offset": 539382,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 539387,
                "string": "    +N\tdisplays the Nth entry counting from the left of the list shown by"
            },
            {
                "encoding": "ASCII",
                "offset": 539461,
                "string": "    \tdirs when invoked without options, starting with zero."
            },
            {
                "encoding": "ASCII",
                "offset": 539521,
                "string": "    "
            },
            {
                "encoding": "ASCII",
                "offset": 539526,
                "string": "    -N\tdisplays the Nth entry counting from the right of the list shown by"
            },
            {
                "encoding": "ASCII",
                "offset": 539601,
                "string": "    \tdirs when invoked without options, starting with zero."
            },
            {
                "encoding": "ASCII",
                "offset": 539672,
                "string": " Toggle the values of variables controlling optional behavior."
            },
            {
                "encoding": "ASCII",
                "offset": 539735,
                "string": "    The -s flag means to enable (set) each OPTNAME; the -u flag"
            },
            {
                "encoding": "ASCII",
                "offset": 539799,
                "string": "    unsets each OPTNAME.  The -q flag suppresses output; the exit"
            },
            {
                "encoding": "ASCII",
                "offset": 539865,
                "string": "    status indicates whether each OPTNAME is set or unset.  The -o"
            },
            {
                "encoding": "ASCII",
                "offset": 539932,
                "string": "    option restricts the OPTNAMEs to those defined for use with"
            },
            {
                "encoding": "ASCII",
                "offset": 539996,
                "string": "    `set -o'.  With no options, or with the -p option, a list of all"
            },
            {
                "encoding": "ASCII",
                "offset": 540065,
                "string": "    settable options is displayed, with an indication of whether or"
            },
            {
                "encoding": "ASCII",
                "offset": 540133,
                "string": "    not each is set."
            },
            {
                "encoding": "ASCII",
                "offset": 540164,
                "string": " printf formats and prints ARGUMENTS under control of the FORMAT. FORMAT"
            },
            {
                "encoding": "ASCII",
                "offset": 540237,
                "string": "    is a character string which contains three types of objects: plain"
            },
            {
                "encoding": "ASCII",
                "offset": 540308,
                "string": "    characters, which are simply copied to standard output, character escape"
            },
            {
                "encoding": "ASCII",
                "offset": 540385,
                "string": "    sequences which are converted and copied to the standard output, and"
            },
            {
                "encoding": "ASCII",
                "offset": 540458,
                "string": "    format specifications, each of which causes printing of the next successive"
            },
            {
                "encoding": "ASCII",
                "offset": 540538,
                "string": "    argument.  In addition to the standard printf(1) formats, %b means to"
            },
            {
                "encoding": "ASCII",
                "offset": 540612,
                "string": "    expand backslash escape sequences in the corresponding argument, and %q"
            },
            {
                "encoding": "ASCII",
                "offset": 540688,
                "string": "    means to quote the argument in a way that can be reused as shell input."
            },
            {
                "encoding": "ASCII",
                "offset": 540764,
                "string": "    If the -v option is supplied, the output is placed into the value of the"
            },
            {
                "encoding": "ASCII",
                "offset": 540841,
                "string": "    shell variable VAR rather than being sent to the standard output."
            },
            {
                "encoding": "ASCII",
                "offset": 540920,
                "string": " For each NAME, specify how arguments are to be completed."
            },
            {
                "encoding": "ASCII",
                "offset": 540979,
                "string": "    If the -p option is supplied, or if no options are supplied, existing"
            },
            {
                "encoding": "ASCII",
                "offset": 541053,
                "string": "    completion specifications are printed in a way that allows them to be"
            },
            {
                "encoding": "ASCII",
                "offset": 541127,
                "string": "    reused as input.  The -r option removes a completion specification for"
            },
            {
                "encoding": "ASCII",
                "offset": 541202,
                "string": "    each NAME, or, if no NAMEs are supplied, all completion specifications."
            },
            {
                "encoding": "ASCII",
                "offset": 541288,
                "string": " Display the possible completions depending on the options.  Intended"
            },
            {
                "encoding": "ASCII",
                "offset": 541358,
                "string": "    to be used from within a shell function generating possible completions."
            },
            {
                "encoding": "ASCII",
                "offset": 541435,
                "string": "    If the optional WORD argument is supplied, matches against WORD are"
            },
            {
                "encoding": "ASCII",
                "offset": 541507,
                "string": "    generated."
            },
            {
                "encoding": "ASCII",
                "offset": 541532,
                "string": "cdable_vars"
            },
            {
                "encoding": "ASCII",
                "offset": 541544,
                "string": "cdspell"
            },
            {
                "encoding": "ASCII",
                "offset": 541552,
                "string": "checkhash"
            },
            {
                "encoding": "ASCII",
                "offset": 541562,
                "string": "checkwinsize"
            },
            {
                "encoding": "ASCII",
                "offset": 541575,
                "string": "cmdhist"
            },
            {
                "encoding": "ASCII",
                "offset": 541583,
                "string": "dotglob"
            },
            {
                "encoding": "ASCII",
                "offset": 541591,
                "string": "execfail"
            },
            {
                "encoding": "ASCII",
                "offset": 541600,
                "string": "expand_aliases"
            },
            {
                "encoding": "ASCII",
                "offset": 541615,
                "string": "extdebug"
            },
            {
                "encoding": "ASCII",
                "offset": 541624,
                "string": "extglob"
            },
            {
                "encoding": "ASCII",
                "offset": 541632,
                "string": "extquote"
            },
            {
                "encoding": "ASCII",
                "offset": 541641,
                "string": "failglob"
            },
            {
                "encoding": "ASCII",
                "offset": 541650,
                "string": "force_fignore"
            },
            {
                "encoding": "ASCII",
                "offset": 541664,
                "string": "gnu_errfmt"
            },
            {
                "encoding": "ASCII",
                "offset": 541675,
                "string": "histappend"
            },
            {
                "encoding": "ASCII",
                "offset": 541686,
                "string": "histreedit"
            },
            {
                "encoding": "ASCII",
                "offset": 541697,
                "string": "histverify"
            },
            {
                "encoding": "ASCII",
                "offset": 541708,
                "string": "hostcomplete"
            },
            {
                "encoding": "ASCII",
                "offset": 541721,
                "string": "huponexit"
            },
            {
                "encoding": "ASCII",
                "offset": 541731,
                "string": "interactive_comments"
            },
            {
                "encoding": "ASCII",
                "offset": 541752,
                "string": "lithist"
            },
            {
                "encoding": "ASCII",
                "offset": 541760,
                "string": "login_shell"
            },
            {
                "encoding": "ASCII",
                "offset": 541772,
                "string": "mailwarn"
            },
            {
                "encoding": "ASCII",
                "offset": 541781,
                "string": "no_empty_cmd_completion"
            },
            {
                "encoding": "ASCII",
                "offset": 541805,
                "string": "nocaseglob"
            },
            {
                "encoding": "ASCII",
                "offset": 541816,
                "string": "nocasematch"
            },
            {
                "encoding": "ASCII",
                "offset": 541828,
                "string": "nullglob"
            },
            {
                "encoding": "ASCII",
                "offset": 541837,
                "string": "progcomp"
            },
            {
                "encoding": "ASCII",
                "offset": 541846,
                "string": "promptvars"
            },
            {
                "encoding": "ASCII",
                "offset": 541857,
                "string": "restricted_shell"
            },
            {
                "encoding": "ASCII",
                "offset": 541874,
                "string": "shift_verbose"
            },
            {
                "encoding": "ASCII",
                "offset": 541888,
                "string": "sourcepath"
            },
            {
                "encoding": "ASCII",
                "offset": 541899,
                "string": "xpg_echo"
            },
            {
                "encoding": "ASCII",
                "offset": 541915,
                "string": "psuoq"
            },
            {
                "encoding": "ASCII",
                "offset": 541924,
                "string": "cannot set and unset shell options simultaneously"
            },
            {
                "encoding": "ASCII",
                "offset": 542004,
                "string": "%s: invalid shell option name"
            },
            {
                "encoding": "ASCII",
                "offset": 542037,
                "string": "shopt %s %s"
            },
            {
                "encoding": "ASCII",
                "offset": 542050,
                "string": "%-15s\t%s"
            },
            {
                "encoding": "ASCII",
                "offset": 542063,
                "string": "set %co %s"
            },
            {
                "encoding": "ASCII",
                "offset": 542083,
                "string": "allexport"
            },
            {
                "encoding": "ASCII",
                "offset": 542093,
                "string": "braceexpand"
            },
            {
                "encoding": "ASCII",
                "offset": 542105,
                "string": "emacs"
            },
            {
                "encoding": "ASCII",
                "offset": 542111,
                "string": "errexit"
            },
            {
                "encoding": "ASCII",
                "offset": 542119,
                "string": "errtrace"
            },
            {
                "encoding": "ASCII",
                "offset": 542128,
                "string": "functrace"
            },
            {
                "encoding": "ASCII",
                "offset": 542138,
                "string": "hashall"
            },
            {
                "encoding": "ASCII",
                "offset": 542146,
                "string": "histexpand"
            },
            {
                "encoding": "ASCII",
                "offset": 542157,
                "string": "history"
            },
            {
                "encoding": "ASCII",
                "offset": 542165,
                "string": "ignoreeof"
            },
            {
                "encoding": "ASCII",
                "offset": 542175,
                "string": "interactive-comments"
            },
            {
                "encoding": "ASCII",
                "offset": 542196,
                "string": "keyword"
            },
            {
                "encoding": "ASCII",
                "offset": 542204,
                "string": "monitor"
            },
            {
                "encoding": "ASCII",
                "offset": 542212,
                "string": "noclobber"
            },
            {
                "encoding": "ASCII",
                "offset": 542222,
                "string": "noexec"
            },
            {
                "encoding": "ASCII",
                "offset": 542229,
                "string": "noglob"
            },
            {
                "encoding": "ASCII",
                "offset": 542236,
                "string": "nolog"
            },
            {
                "encoding": "ASCII",
                "offset": 542242,
                "string": "notify"
            },
            {
                "encoding": "ASCII",
                "offset": 542249,
                "string": "nounset"
            },
            {
                "encoding": "ASCII",
                "offset": 542257,
                "string": "onecmd"
            },
            {
                "encoding": "ASCII",
                "offset": 542264,
                "string": "physical"
            },
            {
                "encoding": "ASCII",
                "offset": 542273,
                "string": "pipefail"
            },
            {
                "encoding": "ASCII",
                "offset": 542282,
                "string": "posix"
            },
            {
                "encoding": "ASCII",
                "offset": 542288,
                "string": "privileged"
            },
            {
                "encoding": "ASCII",
                "offset": 542299,
                "string": "verbose"
            },
            {
                "encoding": "ASCII",
                "offset": 542310,
                "string": "xtrace"
            },
            {
                "encoding": "ASCII",
                "offset": 542317,
                "string": "%-15s\t%s"
            },
            {
                "encoding": "ASCII",
                "offset": 542327,
                "string": "set %co %s"
            },
            {
                "encoding": "ASCII",
                "offset": 542339,
                "string": "IGNOREEOF"
            },
            {
                "encoding": "ASCII",
                "offset": 542352,
                "string": "POSIXLY_CORRECT"
            },
            {
                "encoding": "ASCII",
                "offset": 542370,
                "string": "stdin"
            },
            {
                "encoding": "ASCII",
                "offset": 542376,
                "string": "editing-mode"
            },
            {
                "encoding": "ASCII",
                "offset": 542389,
                "string": "SHELLOPTS"
            },
            {
                "encoding": "ASCII",
                "offset": 542402,
                "string": "function"
            },
            {
                "encoding": "ASCII",
                "offset": 542411,
                "string": "variable"
            },
            {
                "encoding": "ASCII",
                "offset": 542420,
                "string": "%s: cannot unset: readonly %s"
            },
            {
                "encoding": "ASCII",
                "offset": 542450,
                "string": "%s: cannot unset"
            },
            {
                "encoding": "ASCII",
                "offset": 542467,
                "string": "%s: not an array variable"
            },
            {
                "encoding": "ASCII",
                "offset": 542496,
                "string": "cannot simultaneously unset a function and a variable"
            },
            {
                "encoding": "ASCII",
                "offset": 542552,
                "string": "%s: "
            },
            {
                "encoding": "ASCII",
                "offset": 542557,
                "string": "line %d: "
            },
            {
                "encoding": "ASCII",
                "offset": 542571,
                "string": "%s: usage: "
            },
            {
                "encoding": "ASCII",
                "offset": 542583,
                "string": "too many arguments"
            },
            {
                "encoding": "ASCII",
                "offset": 542604,
                "string": "%s: option requires an argument"
            },
            {
                "encoding": "ASCII",
                "offset": 542636,
                "string": "%s: numeric argument required"
            },
            {
                "encoding": "ASCII",
                "offset": 542666,
                "string": "%s: not found"
            },
            {
                "encoding": "ASCII",
                "offset": 542680,
                "string": "%s: invalid option"
            },
            {
                "encoding": "ASCII",
                "offset": 542699,
                "string": "%s: invalid option name"
            },
            {
                "encoding": "ASCII",
                "offset": 542723,
                "string": "`%s': not a valid identifier"
            },
            {
                "encoding": "ASCII",
                "offset": 542752,
                "string": "%s: invalid number"
            },
            {
                "encoding": "ASCII",
                "offset": 542772,
                "string": "%s: invalid signal specification"
            },
            {
                "encoding": "ASCII",
                "offset": 542808,
                "string": "`%s': not a pid or valid job spec"
            },
            {
                "encoding": "ASCII",
                "offset": 542842,
                "string": "%s: readonly variable"
            },
            {
                "encoding": "ASCII",
                "offset": 542864,
                "string": "%s: %s out of range"
            },
            {
                "encoding": "ASCII",
                "offset": 542884,
                "string": "%s out of range"
            },
            {
                "encoding": "ASCII",
                "offset": 542900,
                "string": "argument"
            },
            {
                "encoding": "ASCII",
                "offset": 542909,
                "string": "%s: no such job"
            },
            {
                "encoding": "ASCII",
                "offset": 542925,
                "string": "%s: no job control"
            },
            {
                "encoding": "ASCII",
                "offset": 542944,
                "string": "no job control"
            },
            {
                "encoding": "ASCII",
                "offset": 542959,
                "string": "%s: restricted"
            },
            {
                "encoding": "ASCII",
                "offset": 542974,
                "string": "restricted"
            },
            {
                "encoding": "ASCII",
                "offset": 542985,
                "string": "%s: not a shell builtin"
            },
            {
                "encoding": "ASCII",
                "offset": 543009,
                "string": "write error: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 543028,
                "string": "%s: error retrieving current directory: %s: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 543076,
                "string": "%s: ambiguous job spec"
            },
            {
                "encoding": "ASCII",
                "offset": 543103,
                "string": "SIGJUNK"
            },
            {
                "encoding": "ASCII",
                "offset": 543113,
                "string": "%s%s"
            },
            {
                "encoding": "ASCII",
                "offset": 543118,
                "string": "%2d) %s"
            },
            {
                "encoding": "ASCII",
                "offset": 543126,
                "string": "Unknown"
            },
            {
                "encoding": "ASCII",
                "offset": 543140,
                "string": "parse_and_execute_top"
            },
            {
                "encoding": "ASCII",
                "offset": 543162,
                "string": "parse_and_execute"
            },
            {
                "encoding": "ASCII",
                "offset": 543180,
                "string": "pe_dispose"
            },
            {
                "encoding": "ASCII",
                "offset": 543192,
                "string": "FUNCNAME"
            },
            {
                "encoding": "ASCII",
                "offset": 543201,
                "string": "BASH_SOURCE"
            },
            {
                "encoding": "ASCII",
                "offset": 543213,
                "string": "BASH_LINENO"
            },
            {
                "encoding": "ASCII",
                "offset": 543225,
                "string": "BASH_ARGV"
            },
            {
                "encoding": "ASCII",
                "offset": 543235,
                "string": "BASH_ARGC"
            },
            {
                "encoding": "ASCII",
                "offset": 543245,
                "string": "%s: file is too large"
            },
            {
                "encoding": "ASCII",
                "offset": 543267,
                "string": "%s: not a regular file"
            },
            {
                "encoding": "ASCII",
                "offset": 543290,
                "string": "_evalfile"
            },
            {
                "encoding": "ASCII",
                "offset": 543300,
                "string": "source"
            },
            {
                "encoding": "ASCII",
                "offset": 543307,
                "string": "%s: is a directory"
            },
            {
                "encoding": "ASCII",
                "offset": 543328,
                "string": "%s: cannot execute binary file"
            },
            {
                "encoding": "ASCII",
                "offset": 543360,
                "string": "logout"
            },
            {
                "encoding": "ASCII",
                "offset": 543368,
                "string": "exit"
            },
            {
                "encoding": "ASCII",
                "offset": 543374,
                "string": "not login shell: use `exit'"
            },
            {
                "encoding": "ASCII",
                "offset": 543402,
                "string": "There are stopped jobs."
            },
            {
                "encoding": "ASCII",
                "offset": 543427,
                "string": "~/.bash_logout"
            },
            {
                "encoding": "ASCII",
                "offset": 543444,
                "string": "%s: file not found"
            },
            {
                "encoding": "ASCII",
                "offset": 543463,
                "string": "source"
            },
            {
                "encoding": "ASCII",
                "offset": 543470,
                "string": "filename argument required"
            },
            {
                "encoding": "ASCII",
                "offset": 543500,
                "string": "pushd"
            },
            {
                "encoding": "ASCII",
                "offset": 543506,
                "string": "no other directory"
            },
            {
                "encoding": "ASCII",
                "offset": 543526,
                "string": "dirs"
            },
            {
                "encoding": "ASCII",
                "offset": 543531,
                "string": "%2d  %s"
            },
            {
                "encoding": "ASCII",
                "offset": 543540,
                "string": "%2d  %s"
            },
            {
                "encoding": "ASCII",
                "offset": 543552,
                "string": "%s%s"
            },
            {
                "encoding": "ASCII",
                "offset": 543560,
                "string": "directory stack empty"
            },
            {
                "encoding": "ASCII",
                "offset": 543582,
                "string": "directory stack index"
            },
            {
                "encoding": "ASCII",
                "offset": 543611,
                "string": "dirstack"
            },
            {
                "encoding": "ASCII",
                "offset": 543624,
                "string": "loop count"
            },
            {
                "encoding": "ASCII",
                "offset": 543636,
                "string": "only meaningful in a `for', `while', or `until' loop"
            },
            {
                "encoding": "ASCII",
                "offset": 543696,
                "string": "command_builtin"
            },
            {
                "encoding": "ASCII",
                "offset": 543712,
                "string": "PATH"
            },
            {
                "encoding": "ASCII",
                "offset": 543724,
                "string": "/bin:/usr/bin:/sbin:/usr/sbin:/etc:/usr/etc"
            },
            {
                "encoding": "ASCII",
                "offset": 543768,
                "string": "cla:"
            },
            {
                "encoding": "ASCII",
                "offset": 543773,
                "string": "%s: cannot execute: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 543796,
                "string": "lpnxrs"
            },
            {
                "encoding": "ASCII",
                "offset": 543804,
                "string": "no other options allowed with `-x'"
            },
            {
                "encoding": "ASCII",
                "offset": 543892,
                "string": "jobs_builtin"
            },
            {
                "encoding": "ASCII",
                "offset": 543909,
                "string": "current"
            },
            {
                "encoding": "ASCII",
                "offset": 543920,
                "string": "can only `return' from a function or sourced script"
            },
            {
                "encoding": "ASCII",
                "offset": 543972,
                "string": "eval"
            },
            {
                "encoding": "ASCII",
                "offset": 543980,
                "string": "ersa:d:n:p:t:u:"
            },
            {
                "encoding": "ASCII",
                "offset": 543996,
                "string": "%d: invalid file descriptor: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 544029,
                "string": "read_builtin"
            },
            {
                "encoding": "ASCII",
                "offset": 544042,
                "string": "REPLY"
            },
            {
                "encoding": "ASCII",
                "offset": 544048,
                "string": "%s: invalid file descriptor specification"
            },
            {
                "encoding": "ASCII",
                "offset": 544092,
                "string": "%s: invalid timeout specification"
            },
            {
                "encoding": "ASCII",
                "offset": 544126,
                "string": "TMOUT"
            },
            {
                "encoding": "ASCII",
                "offset": 544132,
                "string": "read error: %d: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 544237,
                "string": "%s: illegal option -- %c"
            },
            {
                "encoding": "ASCII",
                "offset": 544264,
                "string": "%s: option requires an argument -- %c"
            },
            {
                "encoding": "ASCII",
                "offset": 544304,
                "string": "OPTIND"
            },
            {
                "encoding": "ASCII",
                "offset": 544311,
                "string": "OPTARG"
            },
            {
                "encoding": "ASCII",
                "offset": 544324,
                "string": "alias"
            },
            {
                "encoding": "ASCII",
                "offset": 544330,
                "string": "arrayvar"
            },
            {
                "encoding": "ASCII",
                "offset": 544339,
                "string": "binding"
            },
            {
                "encoding": "ASCII",
                "offset": 544347,
                "string": "builtin"
            },
            {
                "encoding": "ASCII",
                "offset": 544355,
                "string": "command"
            },
            {
                "encoding": "ASCII",
                "offset": 544363,
                "string": "directory"
            },
            {
                "encoding": "ASCII",
                "offset": 544373,
                "string": "disabled"
            },
            {
                "encoding": "ASCII",
                "offset": 544382,
                "string": "enabled"
            },
            {
                "encoding": "ASCII",
                "offset": 544390,
                "string": "export"
            },
            {
                "encoding": "ASCII",
                "offset": 544397,
                "string": "file"
            },
            {
                "encoding": "ASCII",
                "offset": 544402,
                "string": "function"
            },
            {
                "encoding": "ASCII",
                "offset": 544411,
                "string": "helptopic"
            },
            {
                "encoding": "ASCII",
                "offset": 544421,
                "string": "hostname"
            },
            {
                "encoding": "ASCII",
                "offset": 544430,
                "string": "group"
            },
            {
                "encoding": "ASCII",
                "offset": 544440,
                "string": "keyword"
            },
            {
                "encoding": "ASCII",
                "offset": 544448,
                "string": "running"
            },
            {
                "encoding": "ASCII",
                "offset": 544456,
                "string": "service"
            },
            {
                "encoding": "ASCII",
                "offset": 544464,
                "string": "setopt"
            },
            {
                "encoding": "ASCII",
                "offset": 544471,
                "string": "shopt"
            },
            {
                "encoding": "ASCII",
                "offset": 544477,
                "string": "signal"
            },
            {
                "encoding": "ASCII",
                "offset": 544484,
                "string": "stopped"
            },
            {
                "encoding": "ASCII",
                "offset": 544492,
                "string": "user"
            },
            {
                "encoding": "ASCII",
                "offset": 544497,
                "string": "variable"
            },
            {
                "encoding": "ASCII",
                "offset": 544506,
                "string": "bashdefault"
            },
            {
                "encoding": "ASCII",
                "offset": 544518,
                "string": "default"
            },
            {
                "encoding": "ASCII",
                "offset": 544526,
                "string": "dirnames"
            },
            {
                "encoding": "ASCII",
                "offset": 544535,
                "string": "filenames"
            },
            {
                "encoding": "ASCII",
                "offset": 544545,
                "string": "nospace"
            },
            {
                "encoding": "ASCII",
                "offset": 544553,
                "string": "plusdirs"
            },
            {
                "encoding": "ASCII",
                "offset": 544564,
                "string": "abcdefgjko:prsuvA:G:W:P:S:X:F:C:"
            },
            {
                "encoding": "ASCII",
                "offset": 544603,
                "string": "%s: invalid action name"
            },
            {
                "encoding": "ASCII",
                "offset": 544844,
                "string": "%s: no completion specification"
            },
            {
                "encoding": "ASCII",
                "offset": 544876,
                "string": "complete "
            },
            {
                "encoding": "ASCII",
                "offset": 544886,
                "string": "-o %s "
            },
            {
                "encoding": "ASCII",
                "offset": 544933,
                "string": "-A %s "
            },
            {
                "encoding": "ASCII",
                "offset": 544943,
                "string": "%s %s "
            },
            {
                "encoding": "ASCII",
                "offset": 544969,
                "string": "compgen"
            },
            {
                "encoding": "ASCII",
                "offset": 544980,
                "string": "warning: -C option may not work as you expect"
            },
            {
                "encoding": "ASCII",
                "offset": 545028,
                "string": "warning: -F option may not work as you expect"
            },
            {
                "encoding": "ASCII",
                "offset": 545079,
                "string": "#'-+ 0"
            },
            {
                "encoding": "ASCII",
                "offset": 545086,
                "string": "hjlLtz"
            },
            {
                "encoding": "ASCII",
                "offset": 545096,
                "string": "`%s': missing format character"
            },
            {
                "encoding": "ASCII",
                "offset": 545132,
                "string": "`%c': invalid format character"
            },
            {
                "encoding": "ASCII",
                "offset": 545376,
                "string": "warning: %s: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 545392,
                "string": "missing hex digit for \\x"
            },
            {
                "encoding": "ASCII",
                "offset": 545776,
                "string": "umask%s "
            },
            {
                "encoding": "ASCII",
                "offset": 545785,
                "string": "%04lo"
            },
            {
                "encoding": "ASCII",
                "offset": 545792,
                "string": "octal number"
            },
            {
                "encoding": "ASCII",
                "offset": 545805,
                "string": "u=%s,g=%s,o=%s"
            },
            {
                "encoding": "ASCII",
                "offset": 545821,
                "string": "agou"
            },
            {
                "encoding": "ASCII",
                "offset": 545832,
                "string": "`%c': invalid symbolic mode operator"
            },
            {
                "encoding": "ASCII",
                "offset": 545872,
                "string": "`%c': invalid symbolic mode character"
            },
            {
                "encoding": "ASCII",
                "offset": 545912,
                "string": "core file size"
            },
            {
                "encoding": "ASCII",
                "offset": 545927,
                "string": "blocks"
            },
            {
                "encoding": "ASCII",
                "offset": 545934,
                "string": "data seg size"
            },
            {
                "encoding": "ASCII",
                "offset": 545948,
                "string": "kbytes"
            },
            {
                "encoding": "ASCII",
                "offset": 545955,
                "string": "file size"
            },
            {
                "encoding": "ASCII",
                "offset": 545965,
                "string": "open files"
            },
            {
                "encoding": "ASCII",
                "offset": 545976,
                "string": "pipe size"
            },
            {
                "encoding": "ASCII",
                "offset": 545986,
                "string": "512 bytes"
            },
            {
                "encoding": "ASCII",
                "offset": 545996,
                "string": "stack size"
            },
            {
                "encoding": "ASCII",
                "offset": 546007,
                "string": "cpu time"
            },
            {
                "encoding": "ASCII",
                "offset": 546016,
                "string": "seconds"
            },
            {
                "encoding": "ASCII",
                "offset": 546024,
                "string": "max user processes"
            },
            {
                "encoding": "ASCII",
                "offset": 546043,
                "string": "virtual memory"
            },
            {
                "encoding": "ASCII",
                "offset": 546058,
                "string": "`%c': bad command"
            },
            {
                "encoding": "ASCII",
                "offset": 546076,
                "string": "limit"
            },
            {
                "encoding": "ASCII",
                "offset": 546082,
                "string": "unlimited"
            },
            {
                "encoding": "ASCII",
                "offset": 546092,
                "string": "%s: cannot modify limit: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 546120,
                "string": "hard"
            },
            {
                "encoding": "ASCII",
                "offset": 546125,
                "string": "%s: cannot get limit: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 546150,
                "string": "soft"
            },
            {
                "encoding": "ASCII",
                "offset": 546155,
                "string": "(-%c) "
            },
            {
                "encoding": "ASCII",
                "offset": 546162,
                "string": "%-20s %16s"
            },
            {
                "encoding": "ASCII",
                "offset": 546173,
                "string": "(%s, -%c) "
            },
            {
                "encoding": "ASCII",
                "offset": 546184,
                "string": "afptP"
            },
            {
                "encoding": "ASCII",
                "offset": 546194,
                "string": "type"
            },
            {
                "encoding": "ASCII",
                "offset": 546199,
                "string": "-path"
            },
            {
                "encoding": "ASCII",
                "offset": 546205,
                "string": "-all"
            },
            {
                "encoding": "ASCII",
                "offset": 546210,
                "string": "path"
            },
            {
                "encoding": "ASCII",
                "offset": 546215,
                "string": "-type"
            },
            {
                "encoding": "ASCII",
                "offset": 546372,
                "string": "keyword"
            },
            {
                "encoding": "ASCII",
                "offset": 546380,
                "string": "function"
            },
            {
                "encoding": "ASCII",
                "offset": 546389,
                "string": "file"
            },
            {
                "encoding": "ASCII",
                "offset": 546394,
                "string": "%s is hashed (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 546413,
                "string": "builtin"
            },
            {
                "encoding": "ASCII",
                "offset": 546421,
                "string": "%s is %s"
            },
            {
                "encoding": "ASCII",
                "offset": 546431,
                "string": "alias %s=%s"
            },
            {
                "encoding": "ASCII",
                "offset": 546444,
                "string": "%s is a shell keyword"
            },
            {
                "encoding": "ASCII",
                "offset": 546467,
                "string": "%s is a function"
            },
            {
                "encoding": "ASCII",
                "offset": 546485,
                "string": "%s is a shell builtin"
            },
            {
                "encoding": "ASCII",
                "offset": 546508,
                "string": "alias"
            },
            {
                "encoding": "ASCII",
                "offset": 546514,
                "string": "%s is aliased to `%s'"
            },
            {
                "encoding": "ASCII",
                "offset": 546543,
                "string": "SIGJUNK"
            },
            {
                "encoding": "ASCII",
                "offset": 546551,
                "string": "trap -- %s %s"
            },
            {
                "encoding": "ASCII",
                "offset": 546566,
                "string": "unknown"
            },
            {
                "encoding": "ASCII",
                "offset": 546574,
                "string": "trap -- %s %d"
            },
            {
                "encoding": "ASCII",
                "offset": 546596,
                "string": "missing `]'"
            },
            {
                "encoding": "ASCII",
                "offset": 546610,
                "string": "cannot suspend a login shell"
            },
            {
                "encoding": "ASCII",
                "offset": 546639,
                "string": "cannot suspend"
            },
            {
                "encoding": "ASCII",
                "offset": 546656,
                "string": "shift count"
            },
            {
                "encoding": "ASCII",
                "offset": 546668,
                "string": "afnp"
            },
            {
                "encoding": "ASCII",
                "offset": 546677,
                "string": "%s: not a function"
            },
            {
                "encoding": "ASCII",
                "offset": 546698,
                "string": "declare -%s "
            },
            {
                "encoding": "ASCII",
                "offset": 546712,
                "string": "%s=%s"
            },
            {
                "encoding": "ASCII",
                "offset": 546719,
                "string": "%s -%s "
            },
            {
                "encoding": "ASCII",
                "offset": 546732,
                "string": "expression expected"
            },
            {
                "encoding": "ASCII",
                "offset": 546752,
                "string": "TERM"
            },
            {
                "encoding": "ASCII",
                "offset": 546760,
                "string": "%s: arguments must be process or job IDs"
            },
            {
                "encoding": "ASCII",
                "offset": 546801,
                "string": "(%ld) - %s"
            },
            {
                "encoding": "ASCII",
                "offset": 546812,
                "string": "Unknown error"
            },
            {
                "encoding": "ASCII",
                "offset": 546828,
                "string": "acd:npsrw"
            },
            {
                "encoding": "ASCII",
                "offset": 546840,
                "string": "cannot use more than one of -anrw"
            },
            {
                "encoding": "ASCII",
                "offset": 546874,
                "string": "history position"
            },
            {
                "encoding": "ASCII",
                "offset": 546891,
                "string": "HISTFILE"
            },
            {
                "encoding": "ASCII",
                "offset": 546992,
                "string": "HISTTIMEFORMAT"
            },
            {
                "encoding": "ASCII",
                "offset": 547008,
                "string": "%5d%c %s%s"
            },
            {
                "encoding": "ASCII",
                "offset": 547020,
                "string": "%s: history expansion failed"
            },
            {
                "encoding": "ASCII",
                "offset": 547056,
                "string": "Shell commands matching keyword `"
            },
            {
                "encoding": "ASCII",
                "offset": 547097,
                "string": "%s: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 547108,
                "string": "no help topics match `%s'.  Try `help help' or `man -k %s' or `info %s'."
            },
            {
                "encoding": "ASCII",
                "offset": 547184,
                "string": "Shell commands matching keywords `"
            },
            {
                "encoding": "ASCII",
                "offset": 547221,
                "string": "%*s%s"
            },
            {
                "encoding": "ASCII",
                "offset": 547228,
                "string": "%s: cannot open: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 547248,
                "string": "These shell commands are defined internally.  Type `help' to see this list."
            },
            {
                "encoding": "ASCII",
                "offset": 547324,
                "string": "Type `help name' to find out more about the function `name'."
            },
            {
                "encoding": "ASCII",
                "offset": 547385,
                "string": "Use `info bash' to find out more about the shell in general."
            },
            {
                "encoding": "ASCII",
                "offset": 547446,
                "string": "Use `man -k' or `info' to find out more about commands not in this list."
            },
            {
                "encoding": "ASCII",
                "offset": 547520,
                "string": "A star (*) next to a name means that the command is disabled."
            },
            {
                "encoding": "ASCII",
                "offset": 547588,
                "string": "hashing disabled"
            },
            {
                "encoding": "ASCII",
                "offset": 547605,
                "string": "dlp:rt"
            },
            {
                "encoding": "ASCII",
                "offset": 547612,
                "string": "%s: hash table empty"
            },
            {
                "encoding": "ASCII",
                "offset": 547637,
                "string": "%s: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 547712,
                "string": "%4d\t%s"
            },
            {
                "encoding": "ASCII",
                "offset": 547720,
                "string": "builtin hash -p %s %s"
            },
            {
                "encoding": "ASCII",
                "offset": 547743,
                "string": "hits\tcommand"
            },
            {
                "encoding": "ASCII",
                "offset": 547760,
                "string": "current"
            },
            {
                "encoding": "ASCII",
                "offset": 547768,
                "string": "job %d started without job control"
            },
            {
                "encoding": "ASCII",
                "offset": 547804,
                "string": ":e:lnrs"
            },
            {
                "encoding": "ASCII",
                "offset": 547823,
                "string": "%s %s"
            },
            {
                "encoding": "ASCII",
                "offset": 547829,
                "string": "no command found"
            },
            {
                "encoding": "ASCII",
                "offset": 547846,
                "string": "history specification"
            },
            {
                "encoding": "ASCII",
                "offset": 547868,
                "string": "bash-fc"
            },
            {
                "encoding": "ASCII",
                "offset": 547877,
                "string": "%s: cannot open temp file: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 547910,
                "string": "fc builtin"
            },
            {
                "encoding": "ASCII",
                "offset": 547921,
                "string": "${FCEDIT:-${EDITOR:-ed}}"
            },
            {
                "encoding": "ASCII",
                "offset": 547946,
                "string": "${FCEDIT:-${EDITOR:-vi}}"
            },
            {
                "encoding": "ASCII",
                "offset": 548032,
                "string": "adnpsf:"
            },
            {
                "encoding": "ASCII",
                "offset": 548116,
                "string": "enable -n %s"
            },
            {
                "encoding": "ASCII",
                "offset": 548130,
                "string": "enable %s"
            },
            {
                "encoding": "ASCII",
                "offset": 548144,
                "string": "cannot find %s in shared object %s: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 548184,
                "string": "cannot open shared object %s: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 548217,
                "string": "%s: not dynamically loaded"
            },
            {
                "encoding": "ASCII",
                "offset": 548244,
                "string": "%s: cannot delete: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 548276,
                "string": "can only be used in a function"
            },
            {
                "encoding": "ASCII",
                "offset": 548307,
                "string": "+afiprtxF"
            },
            {
                "encoding": "ASCII",
                "offset": 548318,
                "string": "%s: readonly function"
            },
            {
                "encoding": "ASCII",
                "offset": 548340,
                "string": "%s: cannot destroy array variables in this way"
            },
            {
                "encoding": "ASCII",
                "offset": 548388,
                "string": "cannot use `-f' to make functions"
            },
            {
                "encoding": "ASCII",
                "offset": 548422,
                "string": "%s %d %s"
            },
            {
                "encoding": "ASCII",
                "offset": 548640,
                "string": "PWD="
            },
            {
                "encoding": "ASCII",
                "offset": 548646,
                "string": "OLDPWD"
            },
            {
                "encoding": "ASCII",
                "offset": 548656,
                "string": "OLDPWD="
            },
            {
                "encoding": "ASCII",
                "offset": 548667,
                "string": "%s: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 548674,
                "string": "CDPATH"
            },
            {
                "encoding": "ASCII",
                "offset": 548681,
                "string": "OLDPWD not set"
            },
            {
                "encoding": "ASCII",
                "offset": 548696,
                "string": "HOME"
            },
            {
                "encoding": "ASCII",
                "offset": 548701,
                "string": "HOME not set"
            },
            {
                "encoding": "ASCII",
                "offset": 548724,
                "string": "chdir"
            },
            {
                "encoding": "ASCII",
                "offset": 548732,
                "string": "FUNCNAME"
            },
            {
                "encoding": "ASCII",
                "offset": 548741,
                "string": "BASH_SOURCE"
            },
            {
                "encoding": "ASCII",
                "offset": 548753,
                "string": "BASH_LINENO"
            },
            {
                "encoding": "ASCII",
                "offset": 548765,
                "string": "%s %s %s"
            },
            {
                "encoding": "ASCII",
                "offset": 548775,
                "string": "%s %s"
            },
            {
                "encoding": "ASCII",
                "offset": 548782,
                "string": "NULL"
            },
            {
                "encoding": "ASCII",
                "offset": 548788,
                "string": "bind_builtin"
            },
            {
                "encoding": "ASCII",
                "offset": 548801,
                "string": "lvpVPsSf:q:u:m:r:x:"
            },
            {
                "encoding": "ASCII",
                "offset": 548821,
                "string": "%s: cannot read: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 548841,
                "string": "`%s': cannot unbind"
            },
            {
                "encoding": "ASCII",
                "offset": 548861,
                "string": "`%s': invalid keymap name"
            },
            {
                "encoding": "ASCII",
                "offset": 549052,
                "string": "%s can be invoked via "
            },
            {
                "encoding": "ASCII",
                "offset": 549081,
                "string": "\"%s\"%s"
            },
            {
                "encoding": "ASCII",
                "offset": 549092,
                "string": "`%s': unknown function name"
            },
            {
                "encoding": "ASCII",
                "offset": 549120,
                "string": "%s is not bound to any keys."
            },
            {
                "encoding": "ASCII",
                "offset": 549154,
                "string": "`%s': invalid alias name"
            },
            {
                "encoding": "ASCII",
                "offset": 549181,
                "string": "%s=%s"
            },
            {
                "encoding": "ASCII",
                "offset": 549188,
                "string": "alias "
            },
            {
                "encoding": "ASCII",
                "offset": 550832,
                "string": "sh_makepath"
            },
            {
                "encoding": "ASCII",
                "offset": 550848,
                "string": "BASH_REMATCH"
            },
            {
                "encoding": "ASCII",
                "offset": 550864,
                "string": "%ldm%d.%03ds"
            },
            {
                "encoding": "ASCII",
                "offset": 550880,
                "string": "invalid base"
            },
            {
                "encoding": "ASCII",
                "offset": 550893,
                "string": "0123456789ABCDEF"
            },
            {
                "encoding": "ASCII",
                "offset": 550910,
                "string": "0123456789abcdef"
            },
            {
                "encoding": "ASCII",
                "offset": 550928,
                "string": "/tmp"
            },
            {
                "encoding": "ASCII",
                "offset": 550933,
                "string": "/var/tmp"
            },
            {
                "encoding": "ASCII",
                "offset": 550942,
                "string": "/usr/tmp"
            },
            {
                "encoding": "ASCII",
                "offset": 550953,
                "string": "TMPDIR"
            },
            {
                "encoding": "ASCII",
                "offset": 550960,
                "string": "%s/%s-%lu"
            },
            {
                "encoding": "ASCII",
                "offset": 550970,
                "string": "shtmp"
            },
            {
                "encoding": "ASCII",
                "offset": 550984,
                "string": "%s/cur"
            },
            {
                "encoding": "ASCII",
                "offset": 550991,
                "string": "%s/tmp"
            },
            {
                "encoding": "ASCII",
                "offset": 550998,
                "string": "%s/new"
            },
            {
                "encoding": "ASCII",
                "offset": 551013,
                "string": "%s/%s"
            },
            {
                "encoding": "ASCII",
                "offset": 551032,
                "string": "%s: host unknown"
            },
            {
                "encoding": "ASCII",
                "offset": 551049,
                "string": "%s: invalid service"
            },
            {
                "encoding": "ASCII",
                "offset": 551069,
                "string": "socket"
            },
            {
                "encoding": "ASCII",
                "offset": 551076,
                "string": "connect"
            },
            {
                "encoding": "ASCII",
                "offset": 551084,
                "string": "%s: bad network path specification"
            },
            {
                "encoding": "ASCII",
                "offset": 551120,
                "string": "%s%s"
            },
            {
                "encoding": "ASCII",
                "offset": 551132,
                "string": "MbP?{"
            },
            {
                "encoding": "ASCII",
                "offset": 551756,
                "string": "sh_realpath"
            },
            {
                "encoding": "ASCII",
                "offset": 551768,
                "string": "invalid base"
            },
            {
                "encoding": "ASCII",
                "offset": 551781,
                "string": "0123456789ABCDEF"
            },
            {
                "encoding": "ASCII",
                "offset": 551798,
                "string": "0123456789abcdef"
            },
            {
                "encoding": "ASCII",
                "offset": 551816,
                "string": "invalid base"
            },
            {
                "encoding": "ASCII",
                "offset": 551829,
                "string": "0123456789ABCDEF"
            },
            {
                "encoding": "ASCII",
                "offset": 551846,
                "string": "0123456789abcdef"
            },
            {
                "encoding": "ASCII",
                "offset": 551869,
                "string": "TERM"
            },
            {
                "encoding": "ASCII",
                "offset": 551934,
                "string": "HOME"
            },
            {
                "encoding": "ASCII",
                "offset": 551943,
                "string": "\"\\'`@$><=;|&{("
            },
            {
                "encoding": "ASCII",
                "offset": 551961,
                "string": "--More--"
            },
            {
                "encoding": "ASCII",
                "offset": 551976,
                "string": "Display all %d possibilities? (y or n)"
            },
            {
                "encoding": "ASCII",
                "offset": 552022,
                "string": "readline: bad value %d for what_to_do in rl_complete"
            },
            {
                "encoding": "ASCII",
                "offset": 552089,
                "string": ";&()|<>"
            },
            {
                "encoding": "ASCII",
                "offset": 552097,
                "string": "unknown expansion error"
            },
            {
                "encoding": "ASCII",
                "offset": 552121,
                "string": "no previous substitution"
            },
            {
                "encoding": "ASCII",
                "offset": 552146,
                "string": "event not found"
            },
            {
                "encoding": "ASCII",
                "offset": 552162,
                "string": "bad word specifier"
            },
            {
                "encoding": "ASCII",
                "offset": 552181,
                "string": "substitution failed"
            },
            {
                "encoding": "ASCII",
                "offset": 552201,
                "string": "unrecognized history modifier"
            },
            {
                "encoding": "ASCII",
                "offset": 552252,
                "string": ":$*%^"
            },
            {
                "encoding": "ASCII",
                "offset": 552596,
                "string": "<>;&|$"
            },
            {
                "encoding": "ASCII",
                "offset": 552603,
                "string": "\\`\"$"
            },
            {
                "encoding": "ASCII",
                "offset": 552612,
                "string": "HOME"
            },
            {
                "encoding": "ASCII",
                "offset": 552620,
                "string": "X%lu"
            },
            {
                "encoding": "ASCII",
                "offset": 552634,
                "string": "COLUMNS"
            },
            {
                "encoding": "ASCII",
                "offset": 552642,
                "string": "LINES"
            },
            {
                "encoding": "ASCII",
                "offset": 552736,
                "string": "dumb"
            },
            {
                "encoding": "ASCII",
                "offset": 552750,
                "string": "TERM"
            },
            {
                "encoding": "ASCII",
                "offset": 552760,
                "string": "C-\\M-"
            },
            {
                "encoding": "ASCII",
                "offset": 553060,
                "string": "~/.inputrc"
            },
            {
                "encoding": "ASCII",
                "offset": 553071,
                "string": "INPUTRC"
            },
            {
                "encoding": "ASCII",
                "offset": 553079,
                "string": "readline: %s: line %d: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 553106,
                "string": "readline: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 553120,
                "string": "Control-"
            },
            {
                "encoding": "ASCII",
                "offset": 553132,
                "string": "CTRL-"
            },
            {
                "encoding": "ASCII",
                "offset": 553138,
                "string": "Meta"
            },
            {
                "encoding": "ASCII",
                "offset": 553146,
                "string": "other"
            },
            {
                "encoding": "ASCII",
                "offset": 553152,
                "string": "term="
            },
            {
                "encoding": "ASCII",
                "offset": 553158,
                "string": "mode="
            },
            {
                "encoding": "ASCII",
                "offset": 553164,
                "string": "emacs"
            },
            {
                "encoding": "ASCII",
                "offset": 553176,
                "string": "$else found without matching $if"
            },
            {
                "encoding": "ASCII",
                "offset": 553209,
                "string": "$endif without matching $if"
            },
            {
                "encoding": "ASCII",
                "offset": 553240,
                "string": "endif"
            },
            {
                "encoding": "ASCII",
                "offset": 553246,
                "string": "else"
            },
            {
                "encoding": "ASCII",
                "offset": 553251,
                "string": "include"
            },
            {
                "encoding": "ASCII",
                "offset": 553259,
                "string": "unknown parser directive"
            },
            {
                "encoding": "ASCII",
                "offset": 553288,
                "string": "no closing `\"' in key binding"
            },
            {
                "encoding": "ASCII",
                "offset": 553318,
                "string": "prefix-meta"
            },
            {
                "encoding": "ASCII",
                "offset": 553330,
                "string": "bind-tty-special-chars"
            },
            {
                "encoding": "ASCII",
                "offset": 553353,
                "string": "blink-matching-paren"
            },
            {
                "encoding": "ASCII",
                "offset": 553374,
                "string": "byte-oriented"
            },
            {
                "encoding": "ASCII",
                "offset": 553388,
                "string": "completion-ignore-case"
            },
            {
                "encoding": "ASCII",
                "offset": 553411,
                "string": "convert-meta"
            },
            {
                "encoding": "ASCII",
                "offset": 553424,
                "string": "disable-completion"
            },
            {
                "encoding": "ASCII",
                "offset": 553443,
                "string": "enable-keypad"
            },
            {
                "encoding": "ASCII",
                "offset": 553457,
                "string": "expand-tilde"
            },
            {
                "encoding": "ASCII",
                "offset": 553470,
                "string": "history-preserve-point"
            },
            {
                "encoding": "ASCII",
                "offset": 553493,
                "string": "horizontal-scroll-mode"
            },
            {
                "encoding": "ASCII",
                "offset": 553516,
                "string": "input-meta"
            },
            {
                "encoding": "ASCII",
                "offset": 553527,
                "string": "mark-directories"
            },
            {
                "encoding": "ASCII",
                "offset": 553544,
                "string": "mark-modified-lines"
            },
            {
                "encoding": "ASCII",
                "offset": 553564,
                "string": "mark-symlinked-directories"
            },
            {
                "encoding": "ASCII",
                "offset": 553591,
                "string": "match-hidden-files"
            },
            {
                "encoding": "ASCII",
                "offset": 553610,
                "string": "meta-flag"
            },
            {
                "encoding": "ASCII",
                "offset": 553620,
                "string": "output-meta"
            },
            {
                "encoding": "ASCII",
                "offset": 553632,
                "string": "page-completions"
            },
            {
                "encoding": "ASCII",
                "offset": 553649,
                "string": "prefer-visible-bell"
            },
            {
                "encoding": "ASCII",
                "offset": 553672,
                "string": "print-completions-horizontally"
            },
            {
                "encoding": "ASCII",
                "offset": 553703,
                "string": "show-all-if-ambiguous"
            },
            {
                "encoding": "ASCII",
                "offset": 553725,
                "string": "show-all-if-unmodified"
            },
            {
                "encoding": "ASCII",
                "offset": 553748,
                "string": "visible-stats"
            },
            {
                "encoding": "ASCII",
                "offset": 553762,
                "string": "bell-style"
            },
            {
                "encoding": "ASCII",
                "offset": 553773,
                "string": "comment-begin"
            },
            {
                "encoding": "ASCII",
                "offset": 553787,
                "string": "completion-query-items"
            },
            {
                "encoding": "ASCII",
                "offset": 553810,
                "string": "editing-mode"
            },
            {
                "encoding": "ASCII",
                "offset": 553823,
                "string": "isearch-terminators"
            },
            {
                "encoding": "ASCII",
                "offset": 553843,
                "string": "keymap"
            },
            {
                "encoding": "ASCII",
                "offset": 553857,
                "string": "none"
            },
            {
                "encoding": "ASCII",
                "offset": 553862,
                "string": "audible"
            },
            {
                "encoding": "ASCII",
                "offset": 553870,
                "string": "visible"
            },
            {
                "encoding": "ASCII",
                "offset": 553886,
                "string": "Escape"
            },
            {
                "encoding": "ASCII",
                "offset": 553897,
                "string": "Newline"
            },
            {
                "encoding": "ASCII",
                "offset": 553909,
                "string": "Return"
            },
            {
                "encoding": "ASCII",
                "offset": 553916,
                "string": "Rubout"
            },
            {
                "encoding": "ASCII",
                "offset": 553927,
                "string": "Space"
            },
            {
                "encoding": "ASCII",
                "offset": 553937,
                "string": "emacs-standard"
            },
            {
                "encoding": "ASCII",
                "offset": 553952,
                "string": "emacs-meta"
            },
            {
                "encoding": "ASCII",
                "offset": 553963,
                "string": "emacs-ctlx"
            },
            {
                "encoding": "ASCII",
                "offset": 553974,
                "string": "vi-move"
            },
            {
                "encoding": "ASCII",
                "offset": 553982,
                "string": "vi-command"
            },
            {
                "encoding": "ASCII",
                "offset": 553993,
                "string": "vi-insert"
            },
            {
                "encoding": "ASCII",
                "offset": 554007,
                "string": "\\C-%c"
            },
            {
                "encoding": "ASCII",
                "offset": 554013,
                "string": "\"%s\": %s"
            },
            {
                "encoding": "ASCII",
                "offset": 554023,
                "string": "%s can be found on "
            },
            {
                "encoding": "ASCII",
                "offset": 554049,
                "string": "\"%s\"%s"
            },
            {
                "encoding": "ASCII",
                "offset": 554061,
                "string": "%s is not bound to any keys"
            },
            {
                "encoding": "ASCII",
                "offset": 554090,
                "string": "# %s (not bound)"
            },
            {
                "encoding": "ASCII",
                "offset": 554111,
                "string": "\"%s%s\": \"%s\""
            },
            {
                "encoding": "ASCII",
                "offset": 554125,
                "string": "%s%s outputs %s"
            },
            {
                "encoding": "ASCII",
                "offset": 554148,
                "string": "set %s %s"
            },
            {
                "encoding": "ASCII",
                "offset": 554159,
                "string": "%s is set to `%s'"
            },
            {
                "encoding": "ASCII",
                "offset": 554180,
                "string": " hl^$0ftFT;,%wbeWBE|"
            },
            {
                "encoding": "ASCII",
                "offset": 554201,
                "string": "_*\\AaIiCcDdPpYyRrSsXx~"
            },
            {
                "encoding": "ASCII",
                "offset": 554224,
                "string": " l|h^0bB"
            },
            {
                "encoding": "ASCII",
                "offset": 554233,
                "string": " l|hwW^0bB"
            },
            {
                "encoding": "ASCII",
                "offset": 554244,
                "string": " l|h^0%bB"
            },
            {
                "encoding": "ASCII",
                "offset": 554276,
                "string": "readline: debug: insert_some_chars: count (%d) != col (%d)"
            },
            {
                "encoding": "ASCII",
                "offset": 554336,
                "string": "(arg: %d) "
            },
            {
                "encoding": "ASCII",
                "offset": 554348,
                "string": "/-_=~.#$"
            },
            {
                "encoding": "ASCII",
                "offset": 554364,
                "string": "abort"
            },
            {
                "encoding": "ASCII",
                "offset": 554370,
                "string": "accept-line"
            },
            {
                "encoding": "ASCII",
                "offset": 554382,
                "string": "arrow-key-prefix"
            },
            {
                "encoding": "ASCII",
                "offset": 554399,
                "string": "backward-byte"
            },
            {
                "encoding": "ASCII",
                "offset": 554413,
                "string": "backward-char"
            },
            {
                "encoding": "ASCII",
                "offset": 554427,
                "string": "backward-delete-char"
            },
            {
                "encoding": "ASCII",
                "offset": 554448,
                "string": "backward-kill-line"
            },
            {
                "encoding": "ASCII",
                "offset": 554467,
                "string": "backward-kill-word"
            },
            {
                "encoding": "ASCII",
                "offset": 554486,
                "string": "backward-word"
            },
            {
                "encoding": "ASCII",
                "offset": 554500,
                "string": "beginning-of-history"
            },
            {
                "encoding": "ASCII",
                "offset": 554521,
                "string": "beginning-of-line"
            },
            {
                "encoding": "ASCII",
                "offset": 554539,
                "string": "call-last-kbd-macro"
            },
            {
                "encoding": "ASCII",
                "offset": 554559,
                "string": "capitalize-word"
            },
            {
                "encoding": "ASCII",
                "offset": 554575,
                "string": "character-search"
            },
            {
                "encoding": "ASCII",
                "offset": 554592,
                "string": "character-search-backward"
            },
            {
                "encoding": "ASCII",
                "offset": 554618,
                "string": "clear-screen"
            },
            {
                "encoding": "ASCII",
                "offset": 554631,
                "string": "complete"
            },
            {
                "encoding": "ASCII",
                "offset": 554640,
                "string": "copy-backward-word"
            },
            {
                "encoding": "ASCII",
                "offset": 554659,
                "string": "copy-forward-word"
            },
            {
                "encoding": "ASCII",
                "offset": 554677,
                "string": "copy-region-as-kill"
            },
            {
                "encoding": "ASCII",
                "offset": 554697,
                "string": "delete-char"
            },
            {
                "encoding": "ASCII",
                "offset": 554709,
                "string": "delete-char-or-list"
            },
            {
                "encoding": "ASCII",
                "offset": 554729,
                "string": "delete-horizontal-space"
            },
            {
                "encoding": "ASCII",
                "offset": 554753,
                "string": "digit-argument"
            },
            {
                "encoding": "ASCII",
                "offset": 554768,
                "string": "do-lowercase-version"
            },
            {
                "encoding": "ASCII",
                "offset": 554789,
                "string": "downcase-word"
            },
            {
                "encoding": "ASCII",
                "offset": 554803,
                "string": "dump-functions"
            },
            {
                "encoding": "ASCII",
                "offset": 554818,
                "string": "dump-macros"
            },
            {
                "encoding": "ASCII",
                "offset": 554830,
                "string": "dump-variables"
            },
            {
                "encoding": "ASCII",
                "offset": 554845,
                "string": "emacs-editing-mode"
            },
            {
                "encoding": "ASCII",
                "offset": 554864,
                "string": "end-kbd-macro"
            },
            {
                "encoding": "ASCII",
                "offset": 554878,
                "string": "end-of-history"
            },
            {
                "encoding": "ASCII",
                "offset": 554893,
                "string": "end-of-line"
            },
            {
                "encoding": "ASCII",
                "offset": 554905,
                "string": "exchange-point-and-mark"
            },
            {
                "encoding": "ASCII",
                "offset": 554929,
                "string": "forward-backward-delete-char"
            },
            {
                "encoding": "ASCII",
                "offset": 554958,
                "string": "forward-byte"
            },
            {
                "encoding": "ASCII",
                "offset": 554971,
                "string": "forward-char"
            },
            {
                "encoding": "ASCII",
                "offset": 554984,
                "string": "forward-search-history"
            },
            {
                "encoding": "ASCII",
                "offset": 555007,
                "string": "forward-word"
            },
            {
                "encoding": "ASCII",
                "offset": 555020,
                "string": "history-search-backward"
            },
            {
                "encoding": "ASCII",
                "offset": 555044,
                "string": "history-search-forward"
            },
            {
                "encoding": "ASCII",
                "offset": 555067,
                "string": "insert-comment"
            },
            {
                "encoding": "ASCII",
                "offset": 555082,
                "string": "insert-completions"
            },
            {
                "encoding": "ASCII",
                "offset": 555101,
                "string": "kill-whole-line"
            },
            {
                "encoding": "ASCII",
                "offset": 555117,
                "string": "kill-line"
            },
            {
                "encoding": "ASCII",
                "offset": 555127,
                "string": "kill-region"
            },
            {
                "encoding": "ASCII",
                "offset": 555139,
                "string": "kill-word"
            },
            {
                "encoding": "ASCII",
                "offset": 555149,
                "string": "menu-complete"
            },
            {
                "encoding": "ASCII",
                "offset": 555163,
                "string": "next-history"
            },
            {
                "encoding": "ASCII",
                "offset": 555176,
                "string": "non-incremental-forward-search-history"
            },
            {
                "encoding": "ASCII",
                "offset": 555216,
                "string": "non-incremental-reverse-search-history"
            },
            {
                "encoding": "ASCII",
                "offset": 555256,
                "string": "non-incremental-forward-search-history-again"
            },
            {
                "encoding": "ASCII",
                "offset": 555304,
                "string": "non-incremental-reverse-search-history-again"
            },
            {
                "encoding": "ASCII",
                "offset": 555349,
                "string": "overwrite-mode"
            },
            {
                "encoding": "ASCII",
                "offset": 555364,
                "string": "paste-from-clipboard"
            },
            {
                "encoding": "ASCII",
                "offset": 555385,
                "string": "possible-completions"
            },
            {
                "encoding": "ASCII",
                "offset": 555406,
                "string": "previous-history"
            },
            {
                "encoding": "ASCII",
                "offset": 555423,
                "string": "quoted-insert"
            },
            {
                "encoding": "ASCII",
                "offset": 555437,
                "string": "re-read-init-file"
            },
            {
                "encoding": "ASCII",
                "offset": 555455,
                "string": "redraw-current-line"
            },
            {
                "encoding": "ASCII",
                "offset": 555475,
                "string": "reverse-search-history"
            },
            {
                "encoding": "ASCII",
                "offset": 555498,
                "string": "revert-line"
            },
            {
                "encoding": "ASCII",
                "offset": 555510,
                "string": "self-insert"
            },
            {
                "encoding": "ASCII",
                "offset": 555522,
                "string": "set-mark"
            },
            {
                "encoding": "ASCII",
                "offset": 555531,
                "string": "start-kbd-macro"
            },
            {
                "encoding": "ASCII",
                "offset": 555547,
                "string": "tab-insert"
            },
            {
                "encoding": "ASCII",
                "offset": 555558,
                "string": "tilde-expand"
            },
            {
                "encoding": "ASCII",
                "offset": 555571,
                "string": "transpose-chars"
            },
            {
                "encoding": "ASCII",
                "offset": 555587,
                "string": "transpose-words"
            },
            {
                "encoding": "ASCII",
                "offset": 555603,
                "string": "tty-status"
            },
            {
                "encoding": "ASCII",
                "offset": 555614,
                "string": "undo"
            },
            {
                "encoding": "ASCII",
                "offset": 555619,
                "string": "universal-argument"
            },
            {
                "encoding": "ASCII",
                "offset": 555638,
                "string": "unix-filename-rubout"
            },
            {
                "encoding": "ASCII",
                "offset": 555659,
                "string": "unix-line-discard"
            },
            {
                "encoding": "ASCII",
                "offset": 555677,
                "string": "unix-word-rubout"
            },
            {
                "encoding": "ASCII",
                "offset": 555694,
                "string": "upcase-word"
            },
            {
                "encoding": "ASCII",
                "offset": 555706,
                "string": "yank"
            },
            {
                "encoding": "ASCII",
                "offset": 555711,
                "string": "yank-last-arg"
            },
            {
                "encoding": "ASCII",
                "offset": 555725,
                "string": "yank-nth-arg"
            },
            {
                "encoding": "ASCII",
                "offset": 555738,
                "string": "yank-pop"
            },
            {
                "encoding": "ASCII",
                "offset": 555747,
                "string": "vi-append-eol"
            },
            {
                "encoding": "ASCII",
                "offset": 555761,
                "string": "vi-append-mode"
            },
            {
                "encoding": "ASCII",
                "offset": 555776,
                "string": "vi-arg-digit"
            },
            {
                "encoding": "ASCII",
                "offset": 555789,
                "string": "vi-back-to-indent"
            },
            {
                "encoding": "ASCII",
                "offset": 555807,
                "string": "vi-bWord"
            },
            {
                "encoding": "ASCII",
                "offset": 555816,
                "string": "vi-bword"
            },
            {
                "encoding": "ASCII",
                "offset": 555825,
                "string": "vi-change-case"
            },
            {
                "encoding": "ASCII",
                "offset": 555840,
                "string": "vi-change-char"
            },
            {
                "encoding": "ASCII",
                "offset": 555855,
                "string": "vi-change-to"
            },
            {
                "encoding": "ASCII",
                "offset": 555868,
                "string": "vi-char-search"
            },
            {
                "encoding": "ASCII",
                "offset": 555883,
                "string": "vi-column"
            },
            {
                "encoding": "ASCII",
                "offset": 555893,
                "string": "vi-complete"
            },
            {
                "encoding": "ASCII",
                "offset": 555905,
                "string": "vi-delete"
            },
            {
                "encoding": "ASCII",
                "offset": 555915,
                "string": "vi-delete-to"
            },
            {
                "encoding": "ASCII",
                "offset": 555928,
                "string": "vi-eWord"
            },
            {
                "encoding": "ASCII",
                "offset": 555937,
                "string": "vi-editing-mode"
            },
            {
                "encoding": "ASCII",
                "offset": 555953,
                "string": "vi-end-word"
            },
            {
                "encoding": "ASCII",
                "offset": 555965,
                "string": "vi-eof-maybe"
            },
            {
                "encoding": "ASCII",
                "offset": 555978,
                "string": "vi-eword"
            },
            {
                "encoding": "ASCII",
                "offset": 555987,
                "string": "vi-fWord"
            },
            {
                "encoding": "ASCII",
                "offset": 555996,
                "string": "vi-fetch-history"
            },
            {
                "encoding": "ASCII",
                "offset": 556013,
                "string": "vi-first-print"
            },
            {
                "encoding": "ASCII",
                "offset": 556028,
                "string": "vi-fword"
            },
            {
                "encoding": "ASCII",
                "offset": 556037,
                "string": "vi-goto-mark"
            },
            {
                "encoding": "ASCII",
                "offset": 556050,
                "string": "vi-insert-beg"
            },
            {
                "encoding": "ASCII",
                "offset": 556064,
                "string": "vi-insertion-mode"
            },
            {
                "encoding": "ASCII",
                "offset": 556082,
                "string": "vi-match"
            },
            {
                "encoding": "ASCII",
                "offset": 556091,
                "string": "vi-movement-mode"
            },
            {
                "encoding": "ASCII",
                "offset": 556108,
                "string": "vi-next-word"
            },
            {
                "encoding": "ASCII",
                "offset": 556121,
                "string": "vi-overstrike"
            },
            {
                "encoding": "ASCII",
                "offset": 556135,
                "string": "vi-overstrike-delete"
            },
            {
                "encoding": "ASCII",
                "offset": 556156,
                "string": "vi-prev-word"
            },
            {
                "encoding": "ASCII",
                "offset": 556169,
                "string": "vi-put"
            },
            {
                "encoding": "ASCII",
                "offset": 556176,
                "string": "vi-redo"
            },
            {
                "encoding": "ASCII",
                "offset": 556184,
                "string": "vi-replace"
            },
            {
                "encoding": "ASCII",
                "offset": 556195,
                "string": "vi-rubout"
            },
            {
                "encoding": "ASCII",
                "offset": 556205,
                "string": "vi-search"
            },
            {
                "encoding": "ASCII",
                "offset": 556215,
                "string": "vi-search-again"
            },
            {
                "encoding": "ASCII",
                "offset": 556231,
                "string": "vi-set-mark"
            },
            {
                "encoding": "ASCII",
                "offset": 556243,
                "string": "vi-subst"
            },
            {
                "encoding": "ASCII",
                "offset": 556252,
                "string": "vi-tilde-expand"
            },
            {
                "encoding": "ASCII",
                "offset": 556268,
                "string": "vi-yank-arg"
            },
            {
                "encoding": "ASCII",
                "offset": 556280,
                "string": "vi-yank-to"
            },
            {
                "encoding": "ASCII",
                "offset": 556292,
                "string": "LC_ALL"
            },
            {
                "encoding": "ASCII",
                "offset": 556299,
                "string": "LANG"
            },
            {
                "encoding": "ASCII",
                "offset": 556304,
                "string": "LC_CTYPE"
            },
            {
                "encoding": "ASCII",
                "offset": 556314,
                "string": "POSIX"
            },
            {
                "encoding": "ASCII",
                "offset": 556352,
                "string": "readline: readline_callback_read_char() called with no handler!"
            },
            {
                "encoding": "ASCII",
                "offset": 556700,
                "string": "alert"
            },
            {
                "encoding": "ASCII",
                "offset": 556709,
                "string": "backspace"
            },
            {
                "encoding": "ASCII",
                "offset": 556729,
                "string": "newline"
            },
            {
                "encoding": "ASCII",
                "offset": 556740,
                "string": "vertical-tab"
            },
            {
                "encoding": "ASCII",
                "offset": 556756,
                "string": "form-feed"
            },
            {
                "encoding": "ASCII",
                "offset": 556769,
                "string": "carriage-return"
            },
            {
                "encoding": "ASCII",
                "offset": 556866,
                "string": "space"
            },
            {
                "encoding": "ASCII",
                "offset": 556872,
                "string": "exclamation-mark"
            },
            {
                "encoding": "ASCII",
                "offset": 556889,
                "string": "quotation-mark"
            },
            {
                "encoding": "ASCII",
                "offset": 556904,
                "string": "number-sign"
            },
            {
                "encoding": "ASCII",
                "offset": 556916,
                "string": "dollar-sign"
            },
            {
                "encoding": "ASCII",
                "offset": 556928,
                "string": "percent-sign"
            },
            {
                "encoding": "ASCII",
                "offset": 556941,
                "string": "ampersand"
            },
            {
                "encoding": "ASCII",
                "offset": 556951,
                "string": "apostrophe"
            },
            {
                "encoding": "ASCII",
                "offset": 556962,
                "string": "left-parenthesis"
            },
            {
                "encoding": "ASCII",
                "offset": 556979,
                "string": "right-parenthesis"
            },
            {
                "encoding": "ASCII",
                "offset": 556997,
                "string": "asterisk"
            },
            {
                "encoding": "ASCII",
                "offset": 557006,
                "string": "plus-sign"
            },
            {
                "encoding": "ASCII",
                "offset": 557016,
                "string": "comma"
            },
            {
                "encoding": "ASCII",
                "offset": 557022,
                "string": "hyphen"
            },
            {
                "encoding": "ASCII",
                "offset": 557029,
                "string": "hyphen-minus"
            },
            {
                "encoding": "ASCII",
                "offset": 557042,
                "string": "minus"
            },
            {
                "encoding": "ASCII",
                "offset": 557048,
                "string": "dash"
            },
            {
                "encoding": "ASCII",
                "offset": 557053,
                "string": "period"
            },
            {
                "encoding": "ASCII",
                "offset": 557060,
                "string": "full-stop"
            },
            {
                "encoding": "ASCII",
                "offset": 557070,
                "string": "slash"
            },
            {
                "encoding": "ASCII",
                "offset": 557076,
                "string": "solidus"
            },
            {
                "encoding": "ASCII",
                "offset": 557084,
                "string": "zero"
            },
            {
                "encoding": "ASCII",
                "offset": 557097,
                "string": "three"
            },
            {
                "encoding": "ASCII",
                "offset": 557103,
                "string": "four"
            },
            {
                "encoding": "ASCII",
                "offset": 557108,
                "string": "five"
            },
            {
                "encoding": "ASCII",
                "offset": 557117,
                "string": "seven"
            },
            {
                "encoding": "ASCII",
                "offset": 557123,
                "string": "eight"
            },
            {
                "encoding": "ASCII",
                "offset": 557129,
                "string": "nine"
            },
            {
                "encoding": "ASCII",
                "offset": 557134,
                "string": "colon"
            },
            {
                "encoding": "ASCII",
                "offset": 557140,
                "string": "semicolon"
            },
            {
                "encoding": "ASCII",
                "offset": 557150,
                "string": "less-than-sign"
            },
            {
                "encoding": "ASCII",
                "offset": 557165,
                "string": "equals-sign"
            },
            {
                "encoding": "ASCII",
                "offset": 557177,
                "string": "greater-than-sign"
            },
            {
                "encoding": "ASCII",
                "offset": 557195,
                "string": "question-mark"
            },
            {
                "encoding": "ASCII",
                "offset": 557209,
                "string": "commercial-at"
            },
            {
                "encoding": "ASCII",
                "offset": 557223,
                "string": "left-square-bracket"
            },
            {
                "encoding": "ASCII",
                "offset": 557243,
                "string": "backslash"
            },
            {
                "encoding": "ASCII",
                "offset": 557253,
                "string": "reverse-solidus"
            },
            {
                "encoding": "ASCII",
                "offset": 557269,
                "string": "right-square-bracket"
            },
            {
                "encoding": "ASCII",
                "offset": 557290,
                "string": "circumflex"
            },
            {
                "encoding": "ASCII",
                "offset": 557301,
                "string": "circumflex-accent"
            },
            {
                "encoding": "ASCII",
                "offset": 557319,
                "string": "underscore"
            },
            {
                "encoding": "ASCII",
                "offset": 557330,
                "string": "grave-accent"
            },
            {
                "encoding": "ASCII",
                "offset": 557343,
                "string": "left-brace"
            },
            {
                "encoding": "ASCII",
                "offset": 557354,
                "string": "left-curly-bracket"
            },
            {
                "encoding": "ASCII",
                "offset": 557373,
                "string": "vertical-line"
            },
            {
                "encoding": "ASCII",
                "offset": 557387,
                "string": "right-brace"
            },
            {
                "encoding": "ASCII",
                "offset": 557399,
                "string": "right-curly-bracket"
            },
            {
                "encoding": "ASCII",
                "offset": 557419,
                "string": "tilde"
            },
            {
                "encoding": "ASCII",
                "offset": 557430,
                "string": "ascii"
            },
            {
                "encoding": "ASCII",
                "offset": 557436,
                "string": "alnum"
            },
            {
                "encoding": "ASCII",
                "offset": 557442,
                "string": "alpha"
            },
            {
                "encoding": "ASCII",
                "offset": 557448,
                "string": "blank"
            },
            {
                "encoding": "ASCII",
                "offset": 557454,
                "string": "cntrl"
            },
            {
                "encoding": "ASCII",
                "offset": 557460,
                "string": "digit"
            },
            {
                "encoding": "ASCII",
                "offset": 557466,
                "string": "graph"
            },
            {
                "encoding": "ASCII",
                "offset": 557472,
                "string": "lower"
            },
            {
                "encoding": "ASCII",
                "offset": 557478,
                "string": "print"
            },
            {
                "encoding": "ASCII",
                "offset": 557484,
                "string": "punct"
            },
            {
                "encoding": "ASCII",
                "offset": 557490,
                "string": "upper"
            },
            {
                "encoding": "ASCII",
                "offset": 557496,
                "string": "word"
            },
            {
                "encoding": "ASCII",
                "offset": 557501,
                "string": "xdigit"
            },
            {
                "encoding": "ASCII",
                "offset": 557656,
                "string": "?*+@!"
            },
            {
                "encoding": "ASCII",
                "offset": 557792,
                "string": "<unknown module>: "
            },
            {
                "encoding": "ASCII",
                "offset": 557816,
                "string": "Cygwin runtime failure: "
            },
            {
                "encoding": "ASCII",
                "offset": 557856,
                "string": "  VirtualQuery failed for %d bytes at address %p"
            },
            {
                "encoding": "ASCII",
                "offset": 557908,
                "string": "  Unknown pseudo relocation bit size %d."
            },
            {
                "encoding": "ASCII",
                "offset": 557952,
                "string": "  Unknown pseudo relocation protocol version %d."
            },
            {
                "encoding": "ASCII",
                "offset": 560114,
                "string": "__errno"
            },
            {
                "encoding": "ASCII",
                "offset": 560124,
                "string": "__main"
            },
            {
                "encoding": "ASCII",
                "offset": 560134,
                "string": "_ctype_"
            },
            {
                "encoding": "ASCII",
                "offset": 560144,
                "string": "abort"
            },
            {
                "encoding": "ASCII",
                "offset": 560152,
                "string": "access"
            },
            {
                "encoding": "ASCII",
                "offset": 560162,
                "string": "alarm"
            },
            {
                "encoding": "ASCII",
                "offset": 560170,
                "string": "atoi"
            },
            {
                "encoding": "ASCII",
                "offset": 560178,
                "string": "atol"
            },
            {
                "encoding": "ASCII",
                "offset": 560186,
                "string": "bcopy"
            },
            {
                "encoding": "ASCII",
                "offset": 560194,
                "string": "calloc"
            },
            {
                "encoding": "ASCII",
                "offset": 560204,
                "string": "chdir"
            },
            {
                "encoding": "ASCII",
                "offset": 560212,
                "string": "close"
            },
            {
                "encoding": "ASCII",
                "offset": 560220,
                "string": "closedir"
            },
            {
                "encoding": "ASCII",
                "offset": 560232,
                "string": "connect"
            },
            {
                "encoding": "ASCII",
                "offset": 560242,
                "string": "cygwin_conv_to_full_posix_path"
            },
            {
                "encoding": "ASCII",
                "offset": 560276,
                "string": "cygwin_conv_to_posix_path"
            },
            {
                "encoding": "ASCII",
                "offset": 560304,
                "string": "cygwin_conv_to_win32_path"
            },
            {
                "encoding": "ASCII",
                "offset": 560332,
                "string": "cygwin_internal"
            },
            {
                "encoding": "ASCII",
                "offset": 560350,
                "string": "dlclose"
            },
            {
                "encoding": "ASCII",
                "offset": 560360,
                "string": "dlerror"
            },
            {
                "encoding": "ASCII",
                "offset": 560370,
                "string": "dll_crt0__FP11per_process"
            },
            {
                "encoding": "ASCII",
                "offset": 560398,
                "string": "dlopen"
            },
            {
                "encoding": "ASCII",
                "offset": 560408,
                "string": "dlsym"
            },
            {
                "encoding": "ASCII",
                "offset": 560422,
                "string": "dup2"
            },
            {
                "encoding": "ASCII",
                "offset": 560430,
                "string": "endgrent"
            },
            {
                "encoding": "ASCII",
                "offset": 560442,
                "string": "endpwent"
            },
            {
                "encoding": "ASCII",
                "offset": 560454,
                "string": "execve"
            },
            {
                "encoding": "ASCII",
                "offset": 560464,
                "string": "exit"
            },
            {
                "encoding": "ASCII",
                "offset": 560472,
                "string": "fclose"
            },
            {
                "encoding": "ASCII",
                "offset": 560482,
                "string": "fcntl"
            },
            {
                "encoding": "ASCII",
                "offset": 560490,
                "string": "fdopen"
            },
            {
                "encoding": "ASCII",
                "offset": 560500,
                "string": "fflush"
            },
            {
                "encoding": "ASCII",
                "offset": 560510,
                "string": "fgets"
            },
            {
                "encoding": "ASCII",
                "offset": 560518,
                "string": "fileno"
            },
            {
                "encoding": "ASCII",
                "offset": 560528,
                "string": "fopen"
            },
            {
                "encoding": "ASCII",
                "offset": 560536,
                "string": "fork"
            },
            {
                "encoding": "ASCII",
                "offset": 560544,
                "string": "fprintf"
            },
            {
                "encoding": "ASCII",
                "offset": 560554,
                "string": "fputc"
            },
            {
                "encoding": "ASCII",
                "offset": 560562,
                "string": "fputs"
            },
            {
                "encoding": "ASCII",
                "offset": 560570,
                "string": "free"
            },
            {
                "encoding": "ASCII",
                "offset": 560578,
                "string": "fstat"
            },
            {
                "encoding": "ASCII",
                "offset": 560586,
                "string": "fwrite"
            },
            {
                "encoding": "ASCII",
                "offset": 560596,
                "string": "getcwd"
            },
            {
                "encoding": "ASCII",
                "offset": 560606,
                "string": "getdtablesize"
            },
            {
                "encoding": "ASCII",
                "offset": 560622,
                "string": "getegid"
            },
            {
                "encoding": "ASCII",
                "offset": 560632,
                "string": "geteuid"
            },
            {
                "encoding": "ASCII",
                "offset": 560642,
                "string": "getgid"
            },
            {
                "encoding": "ASCII",
                "offset": 560652,
                "string": "getgrent"
            },
            {
                "encoding": "ASCII",
                "offset": 560664,
                "string": "getgroups"
            },
            {
                "encoding": "ASCII",
                "offset": 560676,
                "string": "gethostbyname"
            },
            {
                "encoding": "ASCII",
                "offset": 560692,
                "string": "gethostname"
            },
            {
                "encoding": "ASCII",
                "offset": 560706,
                "string": "getpeername"
            },
            {
                "encoding": "ASCII",
                "offset": 560720,
                "string": "getpgrp"
            },
            {
                "encoding": "ASCII",
                "offset": 560730,
                "string": "getpid"
            },
            {
                "encoding": "ASCII",
                "offset": 560740,
                "string": "getppid"
            },
            {
                "encoding": "ASCII",
                "offset": 560750,
                "string": "getpwent"
            },
            {
                "encoding": "ASCII",
                "offset": 560762,
                "string": "getpwnam"
            },
            {
                "encoding": "ASCII",
                "offset": 560774,
                "string": "getpwuid"
            },
            {
                "encoding": "ASCII",
                "offset": 560786,
                "string": "getrlimit"
            },
            {
                "encoding": "ASCII",
                "offset": 560798,
                "string": "getrusage"
            },
            {
                "encoding": "ASCII",
                "offset": 560810,
                "string": "getservbyname"
            },
            {
                "encoding": "ASCII",
                "offset": 560826,
                "string": "gettimeofday"
            },
            {
                "encoding": "ASCII",
                "offset": 560842,
                "string": "getuid"
            },
            {
                "encoding": "ASCII",
                "offset": 560852,
                "string": "inet_aton"
            },
            {
                "encoding": "ASCII",
                "offset": 560864,
                "string": "ioctl"
            },
            {
                "encoding": "ASCII",
                "offset": 560872,
                "string": "isatty"
            },
            {
                "encoding": "ASCII",
                "offset": 560882,
                "string": "isinf"
            },
            {
                "encoding": "ASCII",
                "offset": 560890,
                "string": "isnan"
            },
            {
                "encoding": "ASCII",
                "offset": 560898,
                "string": "kill"
            },
            {
                "encoding": "ASCII",
                "offset": 560906,
                "string": "killpg"
            },
            {
                "encoding": "ASCII",
                "offset": 560916,
                "string": "localeconv"
            },
            {
                "encoding": "ASCII",
                "offset": 560930,
                "string": "localtime"
            },
            {
                "encoding": "ASCII",
                "offset": 560942,
                "string": "longjmp"
            },
            {
                "encoding": "ASCII",
                "offset": 560952,
                "string": "lseek"
            },
            {
                "encoding": "ASCII",
                "offset": 560960,
                "string": "lstat"
            },
            {
                "encoding": "ASCII",
                "offset": 560968,
                "string": "malloc"
            },
            {
                "encoding": "ASCII",
                "offset": 560978,
                "string": "memcpy"
            },
            {
                "encoding": "ASCII",
                "offset": 560988,
                "string": "memmove"
            },
            {
                "encoding": "ASCII",
                "offset": 560998,
                "string": "memset"
            },
            {
                "encoding": "ASCII",
                "offset": 561008,
                "string": "mkfifo"
            },
            {
                "encoding": "ASCII",
                "offset": 561018,
                "string": "open"
            },
            {
                "encoding": "ASCII",
                "offset": 561026,
                "string": "opendir"
            },
            {
                "encoding": "ASCII",
                "offset": 561036,
                "string": "pathconf"
            },
            {
                "encoding": "ASCII",
                "offset": 561048,
                "string": "pipe"
            },
            {
                "encoding": "ASCII",
                "offset": 561056,
                "string": "printf"
            },
            {
                "encoding": "ASCII",
                "offset": 561066,
                "string": "putc"
            },
            {
                "encoding": "ASCII",
                "offset": 561074,
                "string": "putchar"
            },
            {
                "encoding": "ASCII",
                "offset": 561084,
                "string": "puts"
            },
            {
                "encoding": "ASCII",
                "offset": 561092,
                "string": "qsort"
            },
            {
                "encoding": "ASCII",
                "offset": 561100,
                "string": "read"
            },
            {
                "encoding": "ASCII",
                "offset": 561108,
                "string": "readdir"
            },
            {
                "encoding": "ASCII",
                "offset": 561118,
                "string": "readlink"
            },
            {
                "encoding": "ASCII",
                "offset": 561130,
                "string": "realloc"
            },
            {
                "encoding": "ASCII",
                "offset": 561140,
                "string": "sbrk"
            },
            {
                "encoding": "ASCII",
                "offset": 561148,
                "string": "select"
            },
            {
                "encoding": "ASCII",
                "offset": 561158,
                "string": "setdtablesize"
            },
            {
                "encoding": "ASCII",
                "offset": 561174,
                "string": "setgid"
            },
            {
                "encoding": "ASCII",
                "offset": 561184,
                "string": "setgrent"
            },
            {
                "encoding": "ASCII",
                "offset": 561196,
                "string": "setjmp"
            },
            {
                "encoding": "ASCII",
                "offset": 561206,
                "string": "setlocale"
            },
            {
                "encoding": "ASCII",
                "offset": 561218,
                "string": "setmode"
            },
            {
                "encoding": "ASCII",
                "offset": 561228,
                "string": "setpgid"
            },
            {
                "encoding": "ASCII",
                "offset": 561238,
                "string": "setpwent"
            },
            {
                "encoding": "ASCII",
                "offset": 561250,
                "string": "setrlimit"
            },
            {
                "encoding": "ASCII",
                "offset": 561262,
                "string": "setuid"
            },
            {
                "encoding": "ASCII",
                "offset": 561272,
                "string": "setvbuf"
            },
            {
                "encoding": "ASCII",
                "offset": 561282,
                "string": "sigaction"
            },
            {
                "encoding": "ASCII",
                "offset": 561294,
                "string": "sigaddset"
            },
            {
                "encoding": "ASCII",
                "offset": 561306,
                "string": "sigdelset"
            },
            {
                "encoding": "ASCII",
                "offset": 561318,
                "string": "sigemptyset"
            },
            {
                "encoding": "ASCII",
                "offset": 561332,
                "string": "sigprocmask"
            },
            {
                "encoding": "ASCII",
                "offset": 561346,
                "string": "sleep"
            },
            {
                "encoding": "ASCII",
                "offset": 561354,
                "string": "snprintf"
            },
            {
                "encoding": "ASCII",
                "offset": 561366,
                "string": "socket"
            },
            {
                "encoding": "ASCII",
                "offset": 561376,
                "string": "sprintf"
            },
            {
                "encoding": "ASCII",
                "offset": 561386,
                "string": "stat"
            },
            {
                "encoding": "ASCII",
                "offset": 561394,
                "string": "strcasecmp"
            },
            {
                "encoding": "ASCII",
                "offset": 561408,
                "string": "strcat"
            },
            {
                "encoding": "ASCII",
                "offset": 561418,
                "string": "strchr"
            },
            {
                "encoding": "ASCII",
                "offset": 561428,
                "string": "strcmp"
            },
            {
                "encoding": "ASCII",
                "offset": 561438,
                "string": "strcoll"
            },
            {
                "encoding": "ASCII",
                "offset": 561448,
                "string": "strcpy"
            },
            {
                "encoding": "ASCII",
                "offset": 561458,
                "string": "strerror"
            },
            {
                "encoding": "ASCII",
                "offset": 561470,
                "string": "strftime"
            },
            {
                "encoding": "ASCII",
                "offset": 561482,
                "string": "strlen"
            },
            {
                "encoding": "ASCII",
                "offset": 561492,
                "string": "strncasecmp"
            },
            {
                "encoding": "ASCII",
                "offset": 561506,
                "string": "strncmp"
            },
            {
                "encoding": "ASCII",
                "offset": 561516,
                "string": "strncpy"
            },
            {
                "encoding": "ASCII",
                "offset": 561526,
                "string": "strpbrk"
            },
            {
                "encoding": "ASCII",
                "offset": 561536,
                "string": "strrchr"
            },
            {
                "encoding": "ASCII",
                "offset": 561546,
                "string": "strsignal"
            },
            {
                "encoding": "ASCII",
                "offset": 561558,
                "string": "strstr"
            },
            {
                "encoding": "ASCII",
                "offset": 561568,
                "string": "strtod"
            },
            {
                "encoding": "ASCII",
                "offset": 561578,
                "string": "strtoul"
            },
            {
                "encoding": "ASCII",
                "offset": 561588,
                "string": "sysconf"
            },
            {
                "encoding": "ASCII",
                "offset": 561598,
                "string": "tcflow"
            },
            {
                "encoding": "ASCII",
                "offset": 561608,
                "string": "tcgetattr"
            },
            {
                "encoding": "ASCII",
                "offset": 561620,
                "string": "tcgetpgrp"
            },
            {
                "encoding": "ASCII",
                "offset": 561632,
                "string": "tcsetattr"
            },
            {
                "encoding": "ASCII",
                "offset": 561644,
                "string": "tcsetpgrp"
            },
            {
                "encoding": "ASCII",
                "offset": 561656,
                "string": "time"
            },
            {
                "encoding": "ASCII",
                "offset": 561664,
                "string": "ttyname"
            },
            {
                "encoding": "ASCII",
                "offset": 561674,
                "string": "tzset"
            },
            {
                "encoding": "ASCII",
                "offset": 561682,
                "string": "umask"
            },
            {
                "encoding": "ASCII",
                "offset": 561690,
                "string": "unlink"
            },
            {
                "encoding": "ASCII",
                "offset": 561700,
                "string": "vfprintf"
            },
            {
                "encoding": "ASCII",
                "offset": 561712,
                "string": "vsnprintf"
            },
            {
                "encoding": "ASCII",
                "offset": 561724,
                "string": "waitpid"
            },
            {
                "encoding": "ASCII",
                "offset": 561734,
                "string": "write"
            },
            {
                "encoding": "ASCII",
                "offset": 561742,
                "string": "regcomp"
            },
            {
                "encoding": "ASCII",
                "offset": 561754,
                "string": "regexec"
            },
            {
                "encoding": "ASCII",
                "offset": 561766,
                "string": "regfree"
            },
            {
                "encoding": "ASCII",
                "offset": 561778,
                "string": "tgetent"
            },
            {
                "encoding": "ASCII",
                "offset": 561790,
                "string": "tgetflag"
            },
            {
                "encoding": "ASCII",
                "offset": 561802,
                "string": "tgetnum"
            },
            {
                "encoding": "ASCII",
                "offset": 561814,
                "string": "tgetstr"
            },
            {
                "encoding": "ASCII",
                "offset": 561826,
                "string": "tgoto"
            },
            {
                "encoding": "ASCII",
                "offset": 561834,
                "string": "tputs"
            },
            {
                "encoding": "ASCII",
                "offset": 561842,
                "string": "GetModuleFileNameA"
            },
            {
                "encoding": "ASCII",
                "offset": 561864,
                "string": "GetModuleHandleA"
            },
            {
                "encoding": "ASCII",
                "offset": 561884,
                "string": "GetStdHandle"
            },
            {
                "encoding": "ASCII",
                "offset": 561900,
                "string": "VirtualProtect"
            },
            {
                "encoding": "ASCII",
                "offset": 561918,
                "string": "VirtualQuery"
            },
            {
                "encoding": "ASCII",
                "offset": 561934,
                "string": "WriteFile"
            },
            {
                "encoding": "ASCII",
                "offset": 561946,
                "string": "CloseClipboard"
            },
            {
                "encoding": "ASCII",
                "offset": 561964,
                "string": "GetClipboardData"
            },
            {
                "encoding": "ASCII",
                "offset": 561984,
                "string": "OpenClipboard"
            },
            {
                "encoding": "ASCII",
                "offset": 562600,
                "string": "msys-1.0.dll"
            },
            {
                "encoding": "ASCII",
                "offset": 562628,
                "string": "msys-regex-1.dll"
            },
            {
                "encoding": "ASCII",
                "offset": 562672,
                "string": "msys-termcap-0.dll"
            },
            {
                "encoding": "ASCII",
                "offset": 562716,
                "string": "KERNEL32.dll"
            },
            {
                "encoding": "ASCII",
                "offset": 562744,
                "string": "USER32.dll"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 480422,
                "string": " !c\"#$%&'()"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 480446,
                "string": "*+,-."
            },
            {
                "encoding": "UTF-16LE",
                "offset": 480466,
                "string": "56tufp7/0v23"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 480554,
                "string": "hsu|"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 481222,
                "string": "b|1@"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 481244,
                "string": "PTQUB"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 481272,
                "string": "wy8~"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 481288,
                "string": "dezRV"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 481376,
                "string": "C:Ns"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 481522,
                "string": "[\\_11"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 482412,
                "string": "DEFGH"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 482526,
                "string": ";5,>"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 482558,
                "string": "3\t24"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 482594,
                "string": ",c+,-"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 482646,
                "string": "4x2,4|}"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 482680,
                "string": "r2ij"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 482788,
                "string": ".1++"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 482834,
                "string": "+,-*+,"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 482894,
                "string": " !\"#$"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 482906,
                "string": "&'()"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 482924,
                "string": "/055"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 483064,
                "string": " !\"#$"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 483076,
                "string": "&'()"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 483150,
                "string": " !\"#$"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 483162,
                "string": "&'()"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 483236,
                "string": " !\"#$"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 483248,
                "string": "&'()"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 483322,
                "string": " !\"#$"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 483334,
                "string": "&'()"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 483408,
                "string": " !\"#$"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 483420,
                "string": "&'()"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 483494,
                "string": " !\"#$"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 483506,
                "string": "&'()"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 483580,
                "string": " !\"#$"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 483592,
                "string": "&'()"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 483626,
                "string": " !\"#$"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 483638,
                "string": "&'()"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 483656,
                "string": "/0 !\"#$"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 484711,
                "string": "e{}!"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 484768,
                "string": "F><-;()|&"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 562648,
                "string": "(\t(\t(\t(\t(\t(\t"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 562692,
                "string": "<\t<\t<\t<\t<\t<\t"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 562732,
                "string": "P\tP\tP\t"
            }
        ],
        "tight_strings": []
    },
    "is_malicious": false
}