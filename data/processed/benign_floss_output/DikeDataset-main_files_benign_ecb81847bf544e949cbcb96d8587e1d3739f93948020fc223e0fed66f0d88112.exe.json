{
    "analysis": {
        "enable_decoded_strings": true,
        "enable_stack_strings": true,
        "enable_static_strings": true,
        "enable_tight_strings": true,
        "functions": {
            "analyzed_decoded_strings": 23,
            "analyzed_stack_strings": 361,
            "analyzed_tight_strings": 45,
            "decoding_function_scores": {
                "4200640": 0.954,
                "4204784": 0.931,
                "4241696": 0.95,
                "4243008": 0.95,
                "4262064": 0.953,
                "4264128": 0.939,
                "4276944": 0.97,
                "4291456": 0.98,
                "4296992": 0.964,
                "4299184": 0.93,
                "4314192": 0.954,
                "4336688": 0.656,
                "4358960": 0.923,
                "4365504": 0.558,
                "4376880": 0.954,
                "4380624": 0.982,
                "4391168": 0.924,
                "4408816": 0.944,
                "4412656": 0.977,
                "4415264": 0.953,
                "4420384": 0.927,
                "4450672": 0.926,
                "4451456": 0.558
            },
            "discovered": 521,
            "library": 0
        }
    },
    "metadata": {
        "file_path": "DikeDataset-main/files/benign/ecb81847bf544e949cbcb96d8587e1d3739f93948020fc223e0fed66f0d88112.exe",
        "imagebase": 4194304,
        "min_length": 4,
        "runtime": {
            "decoded_strings": 84.2735,
            "find_features": 3.479,
            "stack_strings": 10.6577,
            "start_date": "2023-02-09T18:06:05.602417Z",
            "static_strings": 0.1495,
            "tight_strings": 6.3145,
            "total": 152.455,
            "vivisect": 47.5807
        },
        "version": "v2.2.0-0-g783dd8f"
    },
    "strings": {
        "decoded_strings": [
            {
                "address": 3216242152,
                "address_type": "STACK",
                "decoded_at": 4427404,
                "decoding_routine": 4420384,
                "encoding": "ASCII",
                "string": "%.0f%.0f"
            },
            {
                "address": 3216233476,
                "address_type": "STACK",
                "decoded_at": 4273134,
                "decoding_routine": 4420384,
                "encoding": "ASCII",
                "string": "src8"
            }
        ],
        "stack_strings": [
            {
                "encoding": "ASCII",
                "frame_offset": 44,
                "function": 4229456,
                "offset": 44,
                "original_stack_pointer": 3216244656,
                "program_counter": 4451656,
                "stack_pointer": 3216244564,
                "string": "make"
            }
        ],
        "static_strings": [
            {
                "encoding": "ASCII",
                "offset": 77,
                "string": "!This program cannot be run in DOS mode."
            },
            {
                "encoding": "ASCII",
                "offset": 376,
                "string": ".text"
            },
            {
                "encoding": "ASCII",
                "offset": 414,
                "string": "P`.data"
            },
            {
                "encoding": "ASCII",
                "offset": 456,
                "string": ".data_cy"
            },
            {
                "encoding": "ASCII",
                "offset": 496,
                "string": ".bss"
            },
            {
                "encoding": "ASCII",
                "offset": 536,
                "string": ".idata"
            },
            {
                "encoding": "ASCII",
                "offset": 2186,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 3179,
                "string": "G98~"
            },
            {
                "encoding": "ASCII",
                "offset": 3246,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 3767,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 3793,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 4239,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 4403,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 4899,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 5009,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 5441,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 5716,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 5904,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 6048,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 6611,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 6860,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 7238,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 7747,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 8224,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 8902,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 9144,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 9230,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 9443,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 9610,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 10572,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 10783,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 10881,
                "string": "$_!D"
            },
            {
                "encoding": "ASCII",
                "offset": 11075,
                "string": "$l!D"
            },
            {
                "encoding": "ASCII",
                "offset": 12617,
                "string": "$L\"D"
            },
            {
                "encoding": "ASCII",
                "offset": 16368,
                "string": "$L#D"
            },
            {
                "encoding": "ASCII",
                "offset": 16433,
                "string": "$`#D"
            },
            {
                "encoding": "ASCII",
                "offset": 16445,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 16501,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 16734,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 16785,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 16842,
                "string": "$.$D"
            },
            {
                "encoding": "ASCII",
                "offset": 16900,
                "string": "$.$D"
            },
            {
                "encoding": "ASCII",
                "offset": 17099,
                "string": "$S$D"
            },
            {
                "encoding": "ASCII",
                "offset": 17250,
                "string": "$p$D"
            },
            {
                "encoding": "ASCII",
                "offset": 17459,
                "string": "txC;"
            },
            {
                "encoding": "ASCII",
                "offset": 17960,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 18049,
                "string": "$@%D"
            },
            {
                "encoding": "ASCII",
                "offset": 18125,
                "string": "$t%D"
            },
            {
                "encoding": "ASCII",
                "offset": 18137,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 18196,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 18260,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 18299,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 18353,
                "string": "$$&D"
            },
            {
                "encoding": "ASCII",
                "offset": 18439,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 18495,
                "string": "$`&D"
            },
            {
                "encoding": "ASCII",
                "offset": 18525,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 18635,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 18696,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 18733,
                "string": "$l!D"
            },
            {
                "encoding": "ASCII",
                "offset": 18757,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 18794,
                "string": "$$&D"
            },
            {
                "encoding": "ASCII",
                "offset": 18842,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 19068,
                "string": "t9C9"
            },
            {
                "encoding": "ASCII",
                "offset": 19139,
                "string": "$\\/D"
            },
            {
                "encoding": "ASCII",
                "offset": 19251,
                "string": "B<\ttI"
            },
            {
                "encoding": "ASCII",
                "offset": 19303,
                "string": "$a/D"
            },
            {
                "encoding": "ASCII",
                "offset": 19324,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 19353,
                "string": "$d/D"
            },
            {
                "encoding": "ASCII",
                "offset": 19380,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 20104,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 20275,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 20365,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 20486,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 20557,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 20695,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 20752,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 21113,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 21276,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 21481,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 21856,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 21957,
                "string": "$L0D"
            },
            {
                "encoding": "ASCII",
                "offset": 21980,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 24231,
                "string": "$p0D"
            },
            {
                "encoding": "ASCII",
                "offset": 24412,
                "string": "$L0D"
            },
            {
                "encoding": "ASCII",
                "offset": 25544,
                "string": "8:tT"
            },
            {
                "encoding": "ASCII",
                "offset": 25936,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 26918,
                "string": "$L0D"
            },
            {
                "encoding": "ASCII",
                "offset": 27156,
                "string": "$L0D"
            },
            {
                "encoding": "ASCII",
                "offset": 27168,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 27431,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 27453,
                "string": "$<1D"
            },
            {
                "encoding": "ASCII",
                "offset": 27589,
                "string": "$L0D"
            },
            {
                "encoding": "ASCII",
                "offset": 27601,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 28203,
                "string": "$h1D"
            },
            {
                "encoding": "ASCII",
                "offset": 28259,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 28343,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 28653,
                "string": "$02D"
            },
            {
                "encoding": "ASCII",
                "offset": 28665,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 28715,
                "string": "$L2D"
            },
            {
                "encoding": "ASCII",
                "offset": 28750,
                "string": "$m2D"
            },
            {
                "encoding": "ASCII",
                "offset": 28762,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 28824,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 28898,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 29016,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 29082,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 29499,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 29597,
                "string": "$L3D"
            },
            {
                "encoding": "ASCII",
                "offset": 29666,
                "string": "$l3D"
            },
            {
                "encoding": "ASCII",
                "offset": 30372,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 31105,
                "string": "$47D"
            },
            {
                "encoding": "ASCII",
                "offset": 31129,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 31318,
                "string": "$`7D"
            },
            {
                "encoding": "ASCII",
                "offset": 31410,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 31444,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 31719,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 31853,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 31976,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 31997,
                "string": "$47D"
            },
            {
                "encoding": "ASCII",
                "offset": 32204,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 32546,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 32557,
                "string": "$H8D"
            },
            {
                "encoding": "ASCII",
                "offset": 32621,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 32944,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 33357,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 33542,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 33693,
                "string": "GtY1"
            },
            {
                "encoding": "ASCII",
                "offset": 33775,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 33814,
                "string": "$U9D"
            },
            {
                "encoding": "ASCII",
                "offset": 34091,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 34213,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 34424,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 34773,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 35007,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 35039,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 35047,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 35143,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 35470,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 35680,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 36372,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 36443,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 36464,
                "string": "$4:D"
            },
            {
                "encoding": "ASCII",
                "offset": 36634,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 36655,
                "string": "$\\:D"
            },
            {
                "encoding": "ASCII",
                "offset": 36684,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 36751,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 36835,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 37024,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 37121,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 37264,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 37354,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 37558,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 37792,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 37827,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 37844,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 37851,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 37935,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 38167,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 38186,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 38232,
                "string": "$0;D"
            },
            {
                "encoding": "ASCII",
                "offset": 38244,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 38361,
                "string": "$X;D"
            },
            {
                "encoding": "ASCII",
                "offset": 38504,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 38697,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 39002,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 39154,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 39626,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 39966,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 40057,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 40142,
                "string": "Ft$v"
            },
            {
                "encoding": "ASCII",
                "offset": 40190,
                "string": "$`&D"
            },
            {
                "encoding": "ASCII",
                "offset": 40344,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 40354,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 40702,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 40723,
                "string": "$L>D"
            },
            {
                "encoding": "ASCII",
                "offset": 41320,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 41341,
                "string": "$m>D"
            },
            {
                "encoding": "ASCII",
                "offset": 41538,
                "string": "u4z2"
            },
            {
                "encoding": "ASCII",
                "offset": 41641,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 41662,
                "string": "$|>D"
            },
            {
                "encoding": "ASCII",
                "offset": 41682,
                "string": "$U!D"
            },
            {
                "encoding": "ASCII",
                "offset": 42220,
                "string": "$#?D"
            },
            {
                "encoding": "ASCII",
                "offset": 42241,
                "string": "$2?D"
            },
            {
                "encoding": "ASCII",
                "offset": 42320,
                "string": "$I?D"
            },
            {
                "encoding": "ASCII",
                "offset": 42460,
                "string": "8\"t`"
            },
            {
                "encoding": "ASCII",
                "offset": 42486,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 42562,
                "string": "$\\?D"
            },
            {
                "encoding": "ASCII",
                "offset": 42609,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 42926,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 43193,
                "string": "$H@D"
            },
            {
                "encoding": "ASCII",
                "offset": 43750,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 44014,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 44458,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 44530,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 44768,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 44947,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 45013,
                "string": "$HAD"
            },
            {
                "encoding": "ASCII",
                "offset": 45145,
                "string": "$pAD"
            },
            {
                "encoding": "ASCII",
                "offset": 45409,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 45470,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 47226,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 47273,
                "string": "$XBD"
            },
            {
                "encoding": "ASCII",
                "offset": 49425,
                "string": "$`CD"
            },
            {
                "encoding": "ASCII",
                "offset": 50779,
                "string": "t#9}"
            },
            {
                "encoding": "ASCII",
                "offset": 54419,
                "string": "$(DD"
            },
            {
                "encoding": "ASCII",
                "offset": 54479,
                "string": "$TDD"
            },
            {
                "encoding": "ASCII",
                "offset": 54973,
                "string": "$DED"
            },
            {
                "encoding": "ASCII",
                "offset": 55773,
                "string": "$0FD"
            },
            {
                "encoding": "ASCII",
                "offset": 55806,
                "string": "$PFD"
            },
            {
                "encoding": "ASCII",
                "offset": 55839,
                "string": "$|FD"
            },
            {
                "encoding": "ASCII",
                "offset": 56962,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 57108,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 57620,
                "string": "$,ID"
            },
            {
                "encoding": "ASCII",
                "offset": 57684,
                "string": "\\[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 57881,
                "string": "$QID"
            },
            {
                "encoding": "ASCII",
                "offset": 57960,
                "string": "$pID"
            },
            {
                "encoding": "ASCII",
                "offset": 58382,
                "string": "\\[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 58698,
                "string": "$DJD"
            },
            {
                "encoding": "ASCII",
                "offset": 59703,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 59838,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 59975,
                "string": "$LKD"
            },
            {
                "encoding": "ASCII",
                "offset": 60056,
                "string": "$tKD"
            },
            {
                "encoding": "ASCII",
                "offset": 60609,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 60676,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 61001,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 61075,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 62003,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 62836,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 62880,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 62913,
                "string": "$DLD"
            },
            {
                "encoding": "ASCII",
                "offset": 63220,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 63264,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 63297,
                "string": "$lLD"
            },
            {
                "encoding": "ASCII",
                "offset": 63610,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 64041,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 64097,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 64345,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 64401,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 64598,
                "string": "58MD"
            },
            {
                "encoding": "ASCII",
                "offset": 64880,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 64920,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 65043,
                "string": "$@MD"
            },
            {
                "encoding": "ASCII",
                "offset": 66000,
                "string": "starf"
            },
            {
                "encoding": "ASCII",
                "offset": 66178,
                "string": "leng1"
            },
            {
                "encoding": "ASCII",
                "offset": 66472,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 66733,
                "string": "$xMD"
            },
            {
                "encoding": "ASCII",
                "offset": 67119,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 68105,
                "string": ";O s/"
            },
            {
                "encoding": "ASCII",
                "offset": 69154,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 70004,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 70171,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 70783,
                "string": "u,z*"
            },
            {
                "encoding": "ASCII",
                "offset": 70831,
                "string": "$<ND"
            },
            {
                "encoding": "ASCII",
                "offset": 70907,
                "string": "$tND"
            },
            {
                "encoding": "ASCII",
                "offset": 71079,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 71759,
                "string": "u,z*"
            },
            {
                "encoding": "ASCII",
                "offset": 71807,
                "string": "$XOD"
            },
            {
                "encoding": "ASCII",
                "offset": 72055,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 72638,
                "string": "$8PD"
            },
            {
                "encoding": "ASCII",
                "offset": 72732,
                "string": "u,z*"
            },
            {
                "encoding": "ASCII",
                "offset": 72780,
                "string": "$tPD"
            },
            {
                "encoding": "ASCII",
                "offset": 72937,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 73078,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 73645,
                "string": "u,z*"
            },
            {
                "encoding": "ASCII",
                "offset": 73693,
                "string": "$<QD"
            },
            {
                "encoding": "ASCII",
                "offset": 73849,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 73990,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 74084,
                "string": "$pQD"
            },
            {
                "encoding": "ASCII",
                "offset": 74557,
                "string": "u,z*"
            },
            {
                "encoding": "ASCII",
                "offset": 74761,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 74902,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 74996,
                "string": "$8RD"
            },
            {
                "encoding": "ASCII",
                "offset": 75045,
                "string": "$dRD"
            },
            {
                "encoding": "ASCII",
                "offset": 75379,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 75494,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 76036,
                "string": ">0tl"
            },
            {
                "encoding": "ASCII",
                "offset": 76074,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 76611,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 76968,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 77135,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 77810,
                "string": "L[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 78062,
                "string": "L[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 78517,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 78639,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 79747,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 80030,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 83786,
                "string": "$!VD"
            },
            {
                "encoding": "ASCII",
                "offset": 83839,
                "string": "$!VD"
            },
            {
                "encoding": "ASCII",
                "offset": 83903,
                "string": "$!VD"
            },
            {
                "encoding": "ASCII",
                "offset": 84540,
                "string": "$!VD"
            },
            {
                "encoding": "ASCII",
                "offset": 85110,
                "string": "L[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 86144,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 87795,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 88461,
                "string": "$@YD"
            },
            {
                "encoding": "ASCII",
                "offset": 88778,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 88830,
                "string": "$MYD"
            },
            {
                "encoding": "ASCII",
                "offset": 89183,
                "string": "u\t@9E"
            },
            {
                "encoding": "ASCII",
                "offset": 89595,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 90141,
                "string": "L[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 91310,
                "string": "Y09D"
            },
            {
                "encoding": "ASCII",
                "offset": 91864,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 95021,
                "string": "w$9\\"
            },
            {
                "encoding": "ASCII",
                "offset": 96690,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 98140,
                "string": "G8;E"
            },
            {
                "encoding": "ASCII",
                "offset": 98270,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 98345,
                "string": "W8C9"
            },
            {
                "encoding": "ASCII",
                "offset": 99339,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 99363,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 100029,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 100231,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 100562,
                "string": "uPF9"
            },
            {
                "encoding": "ASCII",
                "offset": 100639,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 100653,
                "string": "W8F9"
            },
            {
                "encoding": "ASCII",
                "offset": 101071,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 101747,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 101801,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 103263,
                "string": "l[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 103906,
                "string": "l[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 104833,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 104847,
                "string": "$ ZD"
            },
            {
                "encoding": "ASCII",
                "offset": 104895,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 104978,
                "string": "$ ZD"
            },
            {
                "encoding": "ASCII",
                "offset": 105002,
                "string": "$@ZD"
            },
            {
                "encoding": "ASCII",
                "offset": 105086,
                "string": "$`ZD"
            },
            {
                "encoding": "ASCII",
                "offset": 105098,
                "string": "$@ZD"
            },
            {
                "encoding": "ASCII",
                "offset": 105177,
                "string": "$@ZD"
            },
            {
                "encoding": "ASCII",
                "offset": 105279,
                "string": "$@ZD"
            },
            {
                "encoding": "ASCII",
                "offset": 105467,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 105493,
                "string": "$@ZD"
            },
            {
                "encoding": "ASCII",
                "offset": 105550,
                "string": "$@ZD"
            },
            {
                "encoding": "ASCII",
                "offset": 105571,
                "string": "$D[D"
            },
            {
                "encoding": "ASCII",
                "offset": 105980,
                "string": "$@ZD"
            },
            {
                "encoding": "ASCII",
                "offset": 106048,
                "string": "$@ZD"
            },
            {
                "encoding": "ASCII",
                "offset": 106081,
                "string": "$@ZD"
            },
            {
                "encoding": "ASCII",
                "offset": 106114,
                "string": "$@ZD"
            },
            {
                "encoding": "ASCII",
                "offset": 106198,
                "string": "$@ZD"
            },
            {
                "encoding": "ASCII",
                "offset": 106583,
                "string": "$@ZD"
            },
            {
                "encoding": "ASCII",
                "offset": 106604,
                "string": "$X\\D"
            },
            {
                "encoding": "ASCII",
                "offset": 106671,
                "string": "$@ZD"
            },
            {
                "encoding": "ASCII",
                "offset": 106725,
                "string": "$@ZD"
            },
            {
                "encoding": "ASCII",
                "offset": 106767,
                "string": "$@ZD"
            },
            {
                "encoding": "ASCII",
                "offset": 107091,
                "string": "$8]D"
            },
            {
                "encoding": "ASCII",
                "offset": 107127,
                "string": "$\\]D"
            },
            {
                "encoding": "ASCII",
                "offset": 107373,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 107380,
                "string": "$8]D"
            },
            {
                "encoding": "ASCII",
                "offset": 107416,
                "string": "$\\]D"
            },
            {
                "encoding": "ASCII",
                "offset": 108230,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 108260,
                "string": "$8]D"
            },
            {
                "encoding": "ASCII",
                "offset": 108295,
                "string": "$8]D"
            },
            {
                "encoding": "ASCII",
                "offset": 108331,
                "string": "$\\]D"
            },
            {
                "encoding": "ASCII",
                "offset": 108706,
                "string": "$8]D"
            },
            {
                "encoding": "ASCII",
                "offset": 108742,
                "string": "$\\]D"
            },
            {
                "encoding": "ASCII",
                "offset": 108796,
                "string": "$8]D"
            },
            {
                "encoding": "ASCII",
                "offset": 108832,
                "string": "$\\]D"
            },
            {
                "encoding": "ASCII",
                "offset": 109542,
                "string": "CxS;"
            },
            {
                "encoding": "ASCII",
                "offset": 109644,
                "string": "$8]D"
            },
            {
                "encoding": "ASCII",
                "offset": 109679,
                "string": "$8]D"
            },
            {
                "encoding": "ASCII",
                "offset": 109864,
                "string": "@tE;u"
            },
            {
                "encoding": "ASCII",
                "offset": 109967,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 111080,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 111559,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 111947,
                "string": "$8]D"
            },
            {
                "encoding": "ASCII",
                "offset": 112002,
                "string": "$4^D"
            },
            {
                "encoding": "ASCII",
                "offset": 112014,
                "string": "$8]D"
            },
            {
                "encoding": "ASCII",
                "offset": 112035,
                "string": "$X^D"
            },
            {
                "encoding": "ASCII",
                "offset": 112377,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 112417,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 112640,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 112680,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 112844,
                "string": "t-;u"
            },
            {
                "encoding": "ASCII",
                "offset": 112870,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 113159,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 113214,
                "string": "tP;]"
            },
            {
                "encoding": "ASCII",
                "offset": 113301,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 113325,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 113832,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 113864,
                "string": "$8]D"
            },
            {
                "encoding": "ASCII",
                "offset": 114011,
                "string": "$8]D"
            },
            {
                "encoding": "ASCII",
                "offset": 114067,
                "string": "$8]D"
            },
            {
                "encoding": "ASCII",
                "offset": 114099,
                "string": "$\\]D"
            },
            {
                "encoding": "ASCII",
                "offset": 114500,
                "string": "$8]D"
            },
            {
                "encoding": "ASCII",
                "offset": 114977,
                "string": "L[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 115060,
                "string": "[\\\\]"
            },
            {
                "encoding": "ASCII",
                "offset": 116093,
                "string": "$a_D"
            },
            {
                "encoding": "ASCII",
                "offset": 116310,
                "string": "$t_D"
            },
            {
                "encoding": "ASCII",
                "offset": 117052,
                "string": "$L`D"
            },
            {
                "encoding": "ASCII",
                "offset": 117494,
                "string": ":-t8"
            },
            {
                "encoding": "ASCII",
                "offset": 117533,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 117569,
                "string": "t\t<-u"
            },
            {
                "encoding": "ASCII",
                "offset": 117999,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 118260,
                "string": "} @;E"
            },
            {
                "encoding": "ASCII",
                "offset": 118594,
                "string": "9Wtb"
            },
            {
                "encoding": "ASCII",
                "offset": 118614,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 119233,
                "string": "$``D"
            },
            {
                "encoding": "ASCII",
                "offset": 120109,
                "string": "$@aD"
            },
            {
                "encoding": "ASCII",
                "offset": 120266,
                "string": "$`aD"
            },
            {
                "encoding": "ASCII",
                "offset": 121367,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 121391,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 121620,
                "string": "$ bD"
            },
            {
                "encoding": "ASCII",
                "offset": 121783,
                "string": "$JbD"
            },
            {
                "encoding": "ASCII",
                "offset": 121855,
                "string": "$JbD"
            },
            {
                "encoding": "ASCII",
                "offset": 121935,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 121965,
                "string": "$ bD"
            },
            {
                "encoding": "ASCII",
                "offset": 122605,
                "string": "$TbD"
            },
            {
                "encoding": "ASCII",
                "offset": 122810,
                "string": "9CLs"
            },
            {
                "encoding": "ASCII",
                "offset": 122942,
                "string": "9CLs"
            },
            {
                "encoding": "ASCII",
                "offset": 123048,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 123366,
                "string": "$HcD"
            },
            {
                "encoding": "ASCII",
                "offset": 124204,
                "string": "|[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 124388,
                "string": "$ dD"
            },
            {
                "encoding": "ASCII",
                "offset": 124948,
                "string": "$PdD"
            },
            {
                "encoding": "ASCII",
                "offset": 125991,
                "string": "$$eD"
            },
            {
                "encoding": "ASCII",
                "offset": 126087,
                "string": "$$eD"
            },
            {
                "encoding": "ASCII",
                "offset": 126174,
                "string": "$`eD"
            },
            {
                "encoding": "ASCII",
                "offset": 126383,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 126411,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 126614,
                "string": "$0fD"
            },
            {
                "encoding": "ASCII",
                "offset": 126690,
                "string": "$|fD"
            },
            {
                "encoding": "ASCII",
                "offset": 127076,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 127948,
                "string": "$*gD"
            },
            {
                "encoding": "ASCII",
                "offset": 128090,
                "string": "tA;B"
            },
            {
                "encoding": "ASCII",
                "offset": 128194,
                "string": "$0gD"
            },
            {
                "encoding": "ASCII",
                "offset": 128353,
                "string": "$XgD"
            },
            {
                "encoding": "ASCII",
                "offset": 128526,
                "string": "$,hD"
            },
            {
                "encoding": "ASCII",
                "offset": 128538,
                "string": "$ThD"
            },
            {
                "encoding": "ASCII",
                "offset": 128689,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 129068,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 129195,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 129379,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 130094,
                "string": "$<iD"
            },
            {
                "encoding": "ASCII",
                "offset": 130135,
                "string": "$diD"
            },
            {
                "encoding": "ASCII",
                "offset": 130916,
                "string": "<ru%"
            },
            {
                "encoding": "ASCII",
                "offset": 131443,
                "string": "$BjD"
            },
            {
                "encoding": "ASCII",
                "offset": 131496,
                "string": "$`jD"
            },
            {
                "encoding": "ASCII",
                "offset": 131619,
                "string": "$tjD"
            },
            {
                "encoding": "ASCII",
                "offset": 131995,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 132099,
                "string": "$$eD"
            },
            {
                "encoding": "ASCII",
                "offset": 132161,
                "string": "$(kD"
            },
            {
                "encoding": "ASCII",
                "offset": 132567,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 132654,
                "string": "$$eD"
            },
            {
                "encoding": "ASCII",
                "offset": 132989,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 134168,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 135124,
                "string": "$7lD"
            },
            {
                "encoding": "ASCII",
                "offset": 135784,
                "string": "$LlD"
            },
            {
                "encoding": "ASCII",
                "offset": 135834,
                "string": "$|lD"
            },
            {
                "encoding": "ASCII",
                "offset": 136198,
                "string": "$LmD"
            },
            {
                "encoding": "ASCII",
                "offset": 136453,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 136615,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 136640,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 136983,
                "string": "$7lD"
            },
            {
                "encoding": "ASCII",
                "offset": 137532,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 137805,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 138054,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 138176,
                "string": "$$eD"
            },
            {
                "encoding": "ASCII",
                "offset": 138310,
                "string": "$$eD"
            },
            {
                "encoding": "ASCII",
                "offset": 138700,
                "string": "|[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 138783,
                "string": "$$eD"
            },
            {
                "encoding": "ASCII",
                "offset": 138970,
                "string": "$$eD"
            },
            {
                "encoding": "ASCII",
                "offset": 139196,
                "string": "$0nD"
            },
            {
                "encoding": "ASCII",
                "offset": 139263,
                "string": "$$eD"
            },
            {
                "encoding": "ASCII",
                "offset": 139415,
                "string": "_[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 139441,
                "string": "Vd_[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 139521,
                "string": "Bt@u}"
            },
            {
                "encoding": "ASCII",
                "offset": 139646,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 139696,
                "string": ";OPse"
            },
            {
                "encoding": "ASCII",
                "offset": 139765,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 140325,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 140672,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 141093,
                "string": "Sd[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 141212,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 141487,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 141555,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 142209,
                "string": "$$eD"
            },
            {
                "encoding": "ASCII",
                "offset": 142363,
                "string": "$ rD"
            },
            {
                "encoding": "ASCII",
                "offset": 142390,
                "string": "$(rD"
            },
            {
                "encoding": "ASCII",
                "offset": 142564,
                "string": "$IrD"
            },
            {
                "encoding": "ASCII",
                "offset": 142576,
                "string": "$IrD"
            },
            {
                "encoding": "ASCII",
                "offset": 142926,
                "string": "$SrD"
            },
            {
                "encoding": "ASCII",
                "offset": 143004,
                "string": "$drD"
            },
            {
                "encoding": "ASCII",
                "offset": 143078,
                "string": "5$\tE"
            },
            {
                "encoding": "ASCII",
                "offset": 143494,
                "string": "5$\tE"
            },
            {
                "encoding": "ASCII",
                "offset": 143562,
                "string": "5$\tE"
            },
            {
                "encoding": "ASCII",
                "offset": 143742,
                "string": "$4rD"
            },
            {
                "encoding": "ASCII",
                "offset": 144304,
                "string": "$!sD"
            },
            {
                "encoding": "ASCII",
                "offset": 144346,
                "string": "$4sD"
            },
            {
                "encoding": "ASCII",
                "offset": 144358,
                "string": "$xsD"
            },
            {
                "encoding": "ASCII",
                "offset": 144551,
                "string": "$xsD"
            },
            {
                "encoding": "ASCII",
                "offset": 144815,
                "string": "$xsD"
            },
            {
                "encoding": "ASCII",
                "offset": 144836,
                "string": "$AtD"
            },
            {
                "encoding": "ASCII",
                "offset": 144861,
                "string": "$xsD"
            },
            {
                "encoding": "ASCII",
                "offset": 144897,
                "string": "$PtD"
            },
            {
                "encoding": "ASCII",
                "offset": 144923,
                "string": "$xsD"
            },
            {
                "encoding": "ASCII",
                "offset": 144959,
                "string": "$xtD"
            },
            {
                "encoding": "ASCII",
                "offset": 144968,
                "string": "$xsD"
            },
            {
                "encoding": "ASCII",
                "offset": 145064,
                "string": "$xsD"
            },
            {
                "encoding": "ASCII",
                "offset": 145603,
                "string": "$xsD"
            },
            {
                "encoding": "ASCII",
                "offset": 145695,
                "string": "$xsD"
            },
            {
                "encoding": "ASCII",
                "offset": 145806,
                "string": "$<wD"
            },
            {
                "encoding": "ASCII",
                "offset": 145999,
                "string": "$\"xD"
            },
            {
                "encoding": "ASCII",
                "offset": 146023,
                "string": "$8xD"
            },
            {
                "encoding": "ASCII",
                "offset": 146047,
                "string": "$RxD"
            },
            {
                "encoding": "ASCII",
                "offset": 146071,
                "string": "$pxD"
            },
            {
                "encoding": "ASCII",
                "offset": 146215,
                "string": "$$yD"
            },
            {
                "encoding": "ASCII",
                "offset": 146239,
                "string": "$PyD"
            },
            {
                "encoding": "ASCII",
                "offset": 146263,
                "string": "$uyD"
            },
            {
                "encoding": "ASCII",
                "offset": 146407,
                "string": "$5zD"
            },
            {
                "encoding": "ASCII",
                "offset": 146431,
                "string": "$PzD"
            },
            {
                "encoding": "ASCII",
                "offset": 146479,
                "string": "$D{D"
            },
            {
                "encoding": "ASCII",
                "offset": 146630,
                "string": "$ }D"
            },
            {
                "encoding": "ASCII",
                "offset": 146663,
                "string": "$ ~D"
            },
            {
                "encoding": "ASCII",
                "offset": 146863,
                "string": ">ttJ"
            },
            {
                "encoding": "ASCII",
                "offset": 146994,
                "string": "$xsD"
            },
            {
                "encoding": "ASCII",
                "offset": 147380,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 147912,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 148017,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 148195,
                "string": "$cpD"
            },
            {
                "encoding": "ASCII",
                "offset": 149117,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 149176,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 149642,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 149699,
                "string": "$xsD"
            },
            {
                "encoding": "ASCII",
                "offset": 149957,
                "string": "$xsD"
            },
            {
                "encoding": "ASCII",
                "offset": 150024,
                "string": "$xsD"
            },
            {
                "encoding": "ASCII",
                "offset": 150070,
                "string": "$xsD"
            },
            {
                "encoding": "ASCII",
                "offset": 150161,
                "string": "$xsD"
            },
            {
                "encoding": "ASCII",
                "offset": 150225,
                "string": "$xsD"
            },
            {
                "encoding": "ASCII",
                "offset": 150440,
                "string": "`[^]"
            },
            {
                "encoding": "ASCII",
                "offset": 150584,
                "string": "$xsD"
            },
            {
                "encoding": "ASCII",
                "offset": 150648,
                "string": "$xsD"
            },
            {
                "encoding": "ASCII",
                "offset": 151369,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 152048,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 152180,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 152413,
                "string": "u1z/"
            },
            {
                "encoding": "ASCII",
                "offset": 152687,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 152776,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 153398,
                "string": " [^]"
            },
            {
                "encoding": "ASCII",
                "offset": 154164,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 156411,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 156769,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 158010,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 158338,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 160265,
                "string": "u+F9"
            },
            {
                "encoding": "ASCII",
                "offset": 160305,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 160315,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 160556,
                "string": "C ui"
            },
            {
                "encoding": "ASCII",
                "offset": 161000,
                "string": "SxE9P tE"
            },
            {
                "encoding": "ASCII",
                "offset": 161140,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 161756,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 162040,
                "string": "~f)M"
            },
            {
                "encoding": "ASCII",
                "offset": 162245,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 162321,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 162412,
                "string": "4QJI"
            },
            {
                "encoding": "ASCII",
                "offset": 163755,
                "string": "HD!M"
            },
            {
                "encoding": "ASCII",
                "offset": 163802,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 164304,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 164395,
                "string": "G(;E"
            },
            {
                "encoding": "ASCII",
                "offset": 165051,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 165139,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 165330,
                "string": "B(;E"
            },
            {
                "encoding": "ASCII",
                "offset": 165486,
                "string": "C(;E"
            },
            {
                "encoding": "ASCII",
                "offset": 165810,
                "string": "C$;C(t"
            },
            {
                "encoding": "ASCII",
                "offset": 165837,
                "string": "C$;C,t"
            },
            {
                "encoding": "ASCII",
                "offset": 165864,
                "string": "C$;C0t"
            },
            {
                "encoding": "ASCII",
                "offset": 166234,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 166520,
                "string": "C$;C(t"
            },
            {
                "encoding": "ASCII",
                "offset": 166547,
                "string": "C$;C,t"
            },
            {
                "encoding": "ASCII",
                "offset": 166574,
                "string": "C$;C0t"
            },
            {
                "encoding": "ASCII",
                "offset": 166612,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 167145,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 167807,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 168098,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 168195,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 168727,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 169116,
                "string": "\ttwF9"
            },
            {
                "encoding": "ASCII",
                "offset": 169439,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 171051,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 171148,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 171255,
                "string": "!CP1"
            },
            {
                "encoding": "ASCII",
                "offset": 171290,
                "string": "\tCP1"
            },
            {
                "encoding": "ASCII",
                "offset": 171486,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 171730,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 173039,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 173153,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 173720,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 173759,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 173827,
                "string": "t+F9"
            },
            {
                "encoding": "ASCII",
                "offset": 173948,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 174351,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 175170,
                "string": "@;C t#"
            },
            {
                "encoding": "ASCII",
                "offset": 176060,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 176185,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 176631,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 176691,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 176789,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 176943,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 177350,
                "string": "\tCP1"
            },
            {
                "encoding": "ASCII",
                "offset": 178212,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 178481,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 178941,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 180020,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 180073,
                "string": "B;S "
            },
            {
                "encoding": "ASCII",
                "offset": 180324,
                "string": ";w }"
            },
            {
                "encoding": "ASCII",
                "offset": 181283,
                "string": "B;W "
            },
            {
                "encoding": "ASCII",
                "offset": 181536,
                "string": "B;V "
            },
            {
                "encoding": "ASCII",
                "offset": 181594,
                "string": ";G }"
            },
            {
                "encoding": "ASCII",
                "offset": 181702,
                "string": ";s }"
            },
            {
                "encoding": "ASCII",
                "offset": 182045,
                "string": "B;Q "
            },
            {
                "encoding": "ASCII",
                "offset": 182123,
                "string": ";^ }"
            },
            {
                "encoding": "ASCII",
                "offset": 182757,
                "string": ";F }"
            },
            {
                "encoding": "ASCII",
                "offset": 182783,
                "string": ";F }"
            },
            {
                "encoding": "ASCII",
                "offset": 182953,
                "string": "~::U"
            },
            {
                "encoding": "ASCII",
                "offset": 183021,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 183075,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 183406,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 185253,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 185488,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 185511,
                "string": "^[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 186146,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 186814,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 187263,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 187405,
                "string": "F$;F(t"
            },
            {
                "encoding": "ASCII",
                "offset": 187432,
                "string": "F$;F,t"
            },
            {
                "encoding": "ASCII",
                "offset": 187459,
                "string": "F$;F0t"
            },
            {
                "encoding": "ASCII",
                "offset": 187737,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 189204,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 190702,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 190957,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 191366,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 192430,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 192469,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 192759,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 193022,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 193230,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 193661,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 194063,
                "string": "9_Pu"
            },
            {
                "encoding": "ASCII",
                "offset": 194389,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 194905,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 195285,
                "string": "9Fh|Z"
            },
            {
                "encoding": "ASCII",
                "offset": 195360,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 195375,
                "string": "9Fh}"
            },
            {
                "encoding": "ASCII",
                "offset": 195437,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 195667,
                "string": "uKCtH"
            },
            {
                "encoding": "ASCII",
                "offset": 195767,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 195876,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 196311,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 197140,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 197792,
                "string": "Jx=9"
            },
            {
                "encoding": "ASCII",
                "offset": 197886,
                "string": "\\[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 198347,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 198389,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 198643,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 199099,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 199537,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 199770,
                "string": "u4Ct1"
            },
            {
                "encoding": "ASCII",
                "offset": 200899,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 201179,
                "string": "CHJxd9S tO"
            },
            {
                "encoding": "ASCII",
                "offset": 201394,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 202123,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 202133,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 202220,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 202575,
                "string": "W\\;U"
            },
            {
                "encoding": "ASCII",
                "offset": 202969,
                "string": "twC9"
            },
            {
                "encoding": "ASCII",
                "offset": 203052,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 204304,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 204641,
                "string": "wX9W"
            },
            {
                "encoding": "ASCII",
                "offset": 204666,
                "string": "uR;u"
            },
            {
                "encoding": "ASCII",
                "offset": 204970,
                "string": "~X~w"
            },
            {
                "encoding": "ASCII",
                "offset": 205088,
                "string": ";F }"
            },
            {
                "encoding": "ASCII",
                "offset": 205185,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 205200,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 205583,
                "string": "C4@t1"
            },
            {
                "encoding": "ASCII",
                "offset": 206515,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 207407,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 207694,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 207949,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 208011,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 208648,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 208808,
                "string": "3~81"
            },
            {
                "encoding": "ASCII",
                "offset": 210067,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 210965,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 212628,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 213534,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 213979,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 214196,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 214500,
                "string": "9Ch|"
            },
            {
                "encoding": "ASCII",
                "offset": 214510,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 214702,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 214738,
                "string": "pl;pp"
            },
            {
                "encoding": "ASCII",
                "offset": 215265,
                "string": "K Y[]"
            },
            {
                "encoding": "ASCII",
                "offset": 216183,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 216883,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 217295,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 217387,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 218019,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 218216,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 218330,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 222774,
                "string": "ulzj"
            },
            {
                "encoding": "ASCII",
                "offset": 223847,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 227685,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 227960,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 228271,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 228358,
                "string": ",[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 229564,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 230460,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 231748,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 231852,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 232070,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 232434,
                "string": "5d\tE"
            },
            {
                "encoding": "ASCII",
                "offset": 233244,
                "string": "5D\tE"
            },
            {
                "encoding": "ASCII",
                "offset": 234174,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 234275,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 234412,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 234651,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 235505,
                "string": "8%t#"
            },
            {
                "encoding": "ASCII",
                "offset": 235983,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 236204,
                "string": "=d\tE"
            },
            {
                "encoding": "ASCII",
                "offset": 236284,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 245765,
                "string": "tmw)"
            },
            {
                "encoding": "ASCII",
                "offset": 247756,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 248528,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 250181,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 250605,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 250786,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 251528,
                "string": "<[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 256243,
                "string": "[^_]"
            },
            {
                "encoding": "ASCII",
                "offset": 257544,
                "string": "@builtin"
            },
            {
                "encoding": "ASCII",
                "offset": 257553,
                "string": "(END OF FILE)"
            },
            {
                "encoding": "ASCII",
                "offset": 257772,
                "string": "pqrstuvwxyzabcdefghijklmno"
            },
            {
                "encoding": "ASCII",
                "offset": 258039,
                "string": "CAk[S"
            },
            {
                "encoding": "ASCII",
                "offset": 258082,
                "string": ".*+(){}[]|?^$\\"
            },
            {
                "encoding": "ASCII",
                "offset": 258144,
                "string": " !\"#$%&'()*+,-./0123456789:;<=>?@abcdefghijklmnopqrstuvwxyz[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~"
            },
            {
                "encoding": "ASCII",
                "offset": 258412,
                "string": "bfnrtv\\"
            },
            {
                "encoding": "ASCII",
                "offset": 258432,
                "string": "AVG_CHAIN_MAX"
            },
            {
                "encoding": "ASCII",
                "offset": 258446,
                "string": "AWK_HASH"
            },
            {
                "encoding": "ASCII",
                "offset": 258460,
                "string": "/usr/src/gawk/gawk-3.1.7/array.c"
            },
            {
                "encoding": "ASCII",
                "offset": 258496,
                "string": "attempt to use scalar parameter `%s' as an array"
            },
            {
                "encoding": "ASCII",
                "offset": 258548,
                "string": "internal error line %d, file: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 258584,
                "string": "attempt to use function `%s' as an array"
            },
            {
                "encoding": "ASCII",
                "offset": 258628,
                "string": "attempt to use scalar `%s' as array"
            },
            {
                "encoding": "ASCII",
                "offset": 258664,
                "string": "from %s"
            },
            {
                "encoding": "ASCII",
                "offset": 258672,
                "string": "%s ("
            },
            {
                "encoding": "ASCII",
                "offset": 258682,
                "string": "message"
            },
            {
                "encoding": "ASCII",
                "offset": 258692,
                "string": "%s: %s: can't allocate %ld bytes of memory (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 258740,
                "string": "array_vname"
            },
            {
                "encoding": "ASCII",
                "offset": 258752,
                "string": "concat_exp"
            },
            {
                "encoding": "ASCII",
                "offset": 258800,
                "string": "symbol->type == Node_var_array"
            },
            {
                "encoding": "ASCII",
                "offset": 258832,
                "string": "reference to uninitialized element `%s[\"%s\"]'"
            },
            {
                "encoding": "ASCII",
                "offset": 258880,
                "string": "subscript of array `%s' is null string"
            },
            {
                "encoding": "ASCII",
                "offset": 258919,
                "string": "assoc_lookup"
            },
            {
                "encoding": "ASCII",
                "offset": 258932,
                "string": "bucket->ahname_str"
            },
            {
                "encoding": "ASCII",
                "offset": 258952,
                "string": "delete: index `%s' not in array `%s'"
            },
            {
                "encoding": "ASCII",
                "offset": 259091,
                "string": "@grow_table"
            },
            {
                "encoding": "ASCII",
                "offset": 259108,
                "string": "%s: table_size = %d, array_size = %d"
            },
            {
                "encoding": "ASCII",
                "offset": 259146,
                "string": "%.*s"
            },
            {
                "encoding": "ASCII",
                "offset": 259154,
                "string": "%s: I: [len %d <%.*s>] V: ["
            },
            {
                "encoding": "ASCII",
                "offset": 259185,
                "string": "%s: empty (zero)"
            },
            {
                "encoding": "ASCII",
                "offset": 259203,
                "string": "%s: empty (null)"
            },
            {
                "encoding": "ASCII",
                "offset": 259221,
                "string": "%s: is parameter"
            },
            {
                "encoding": "ASCII",
                "offset": 259239,
                "string": "%s: array_ref to %s"
            },
            {
                "encoding": "ASCII",
                "offset": 259260,
                "string": "dup_table"
            },
            {
                "encoding": "ASCII",
                "offset": 259274,
                "string": "list->ahname_ref == 1"
            },
            {
                "encoding": "ASCII",
                "offset": 259296,
                "string": "list->ahname_str == NULL"
            },
            {
                "encoding": "ASCII",
                "offset": 259321,
                "string": "assoc_from_list"
            },
            {
                "encoding": "ASCII",
                "offset": 259337,
                "string": "list->ahname_str"
            },
            {
                "encoding": "ASCII",
                "offset": 259400,
                "string": "<=5304"
            },
            {
                "encoding": "ASCII",
                "offset": 259647,
                "string": " !\"#$%&'()*+,-9"
            },
            {
                "encoding": "ASCII",
                "offset": 259681,
                "string": "CDEEEFFFGGGGGHIIIJJLKNMOOPPPQQRRRRRRRRRRRRRRSRRUTTTTTVVWXXXYYZZZZZ[[\\\\]^]__``aabbccdddddeeffgggggghhhhhhhhiiijjkklllmmmmmmmmmmmnnnnnnnooooooooooooooppqqqrssstuvwwxyz"
            },
            {
                "encoding": "ASCII",
                "offset": 260099,
                "string": "jrsu"
            },
            {
                "encoding": "ASCII",
                "offset": 260158,
                "string": "lk}~"
            },
            {
                "encoding": "ASCII",
                "offset": 260192,
                "string": "fgde"
            },
            {
                "encoding": "ASCII",
                "offset": 260200,
                "string": "z{wxyv"
            },
            {
                "encoding": "ASCII",
                "offset": 260263,
                "string": "6()*"
            },
            {
                "encoding": "ASCII",
                "offset": 260298,
                "string": "XUN."
            },
            {
                "encoding": "ASCII",
                "offset": 260308,
                "string": "N]H1"
            },
            {
                "encoding": "ASCII",
                "offset": 260343,
                "string": ":$%6"
            },
            {
                "encoding": "ASCII",
                "offset": 260348,
                "string": "K\">A"
            },
            {
                "encoding": "ASCII",
                "offset": 260359,
                "string": "N@?N"
            },
            {
                "encoding": "ASCII",
                "offset": 265697,
                "string": ",D`a"
            },
            {
                "encoding": "ASCII",
                "offset": 265711,
                "string": "\"#()*+-3468;<FGKMOahlmnoqr<>Lpqqq<<mqmm<oq"
            },
            {
                "encoding": "ASCII",
                "offset": 265754,
                "string": "gh@BHQ`txHN\t"
            },
            {
                "encoding": "ASCII",
                "offset": 265767,
                "string": "%&'.012jk"
            },
            {
                "encoding": "ASCII",
                "offset": 265777,
                "string": "m34567:34567:"
            },
            {
                "encoding": "ASCII",
                "offset": 265792,
                "string": "()-ifghg"
            },
            {
                "encoding": "ASCII",
                "offset": 265802,
                "string": "*+IJ1bffh()s"
            },
            {
                "encoding": "ASCII",
                "offset": 265815,
                "string": "0=vzvaPa"
            },
            {
                "encoding": "ASCII",
                "offset": 265826,
                "string": "hhhhh#mmmmmmmmmmmm"
            },
            {
                "encoding": "ASCII",
                "offset": 265845,
                "string": "hv?<mvvha%"
            },
            {
                "encoding": "ASCII",
                "offset": 265869,
                "string": " !$ART[_htux/p"
            },
            {
                "encoding": "ASCII",
                "offset": 265891,
                "string": "<<<a<QQQehQaQUPwxahv"
            },
            {
                "encoding": "ASCII",
                "offset": 265912,
                "string": "zhe>"
            },
            {
                "encoding": "ASCII",
                "offset": 265921,
                "string": "TVQ<\\fuaa"
            },
            {
                "encoding": "ASCII",
                "offset": 265932,
                "string": "vQg=vv"
            },
            {
                "encoding": "ASCII",
                "offset": 265943,
                "string": "]a?aa<"
            },
            {
                "encoding": "ASCII",
                "offset": 265950,
                "string": "az^RtRhvhxgl"
            },
            {
                "encoding": "ASCII",
                "offset": 265963,
                "string": "WXvaxavaa"
            },
            {
                "encoding": "ASCII",
                "offset": 265975,
                "string": "YaRaVRu"
            },
            {
                "encoding": "ASCII",
                "offset": 265984,
                "string": "34MZ/yVv"
            },
            {
                "encoding": "ASCII",
                "offset": 265994,
                "string": "yavaaPaRPRplain `print' in BEGIN or END rule should probably be `print \"\"'"
            },
            {
                "encoding": "ASCII",
                "offset": 266069,
                "string": "awkgram.y"
            },
            {
                "encoding": "ASCII",
                "offset": 266079,
                "string": "syntax error"
            },
            {
                "encoding": "ASCII",
                "offset": 266092,
                "string": "`delete(array)' is a non-portable tawk extension"
            },
            {
                "encoding": "ASCII",
                "offset": 266144,
                "string": "`delete array' is a gawk extension"
            },
            {
                "encoding": "ASCII",
                "offset": 266180,
                "string": "`return' used outside function context"
            },
            {
                "encoding": "ASCII",
                "offset": 266220,
                "string": "`nextfile' is a gawk extension"
            },
            {
                "encoding": "ASCII",
                "offset": 266252,
                "string": "old awk does not support the keyword `in' except after `for'"
            },
            {
                "encoding": "ASCII",
                "offset": 266316,
                "string": "old awk does not support multidimensional arrays"
            },
            {
                "encoding": "ASCII",
                "offset": 266368,
                "string": "%s blocks must have an action part"
            },
            {
                "encoding": "ASCII",
                "offset": 266407,
                "string": "BEGIN"
            },
            {
                "encoding": "ASCII",
                "offset": 266420,
                "string": "multistage two-way pipelines don't work"
            },
            {
                "encoding": "ASCII",
                "offset": 266460,
                "string": "`%s' is a built-in function, it cannot be redefined"
            },
            {
                "encoding": "ASCII",
                "offset": 266512,
                "string": "call of `length' without parentheses is deprecated by POSIX"
            },
            {
                "encoding": "ASCII",
                "offset": 266572,
                "string": "memory exhausted"
            },
            {
                "encoding": "ASCII",
                "offset": 266592,
                "string": "non-redirected `getline' undefined inside END action"
            },
            {
                "encoding": "ASCII",
                "offset": 266648,
                "string": "(yyvsp[(8) - (8)].nodeval)->rnode->type == Node_expression_list"
            },
            {
                "encoding": "ASCII",
                "offset": 266712,
                "string": "regular expression on right of comparison"
            },
            {
                "encoding": "ASCII",
                "offset": 266756,
                "string": "regular expression on right of assignment"
            },
            {
                "encoding": "ASCII",
                "offset": 266798,
                "string": "`%s' used in %s action"
            },
            {
                "encoding": "ASCII",
                "offset": 266821,
                "string": "nextfile"
            },
            {
                "encoding": "ASCII",
                "offset": 266830,
                "string": "next"
            },
            {
                "encoding": "ASCII",
                "offset": 266835,
                "string": "use of non-array as array"
            },
            {
                "encoding": "ASCII",
                "offset": 266864,
                "string": "Duplicate `default' detected in switch body"
            },
            {
                "encoding": "ASCII",
                "offset": 266908,
                "string": "duplicate case values in switch body: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 266952,
                "string": "each rule must have a pattern or an action part"
            },
            {
                "encoding": "ASCII",
                "offset": 267000,
                "string": "%s: %s: can't allocate %ld bytes of memory (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 267048,
                "string": "switch_body"
            },
            {
                "encoding": "ASCII",
                "offset": 267060,
                "string": "case_values"
            },
            {
                "encoding": "ASCII",
                "offset": 267072,
                "string": "regular expression on left of `~' or `!~' operator"
            },
            {
                "encoding": "ASCII",
                "offset": 267124,
                "string": "regexp constant `/%s/' looks like a C comment, but is not"
            },
            {
                "encoding": "ASCII",
                "offset": 267184,
                "string": "regexp constant `//' looks like a C++ comment, but is not"
            },
            {
                "encoding": "ASCII",
                "offset": 267242,
                "string": "statement may have no effect"
            },
            {
                "encoding": "ASCII",
                "offset": 267271,
                "string": "invalid subscript expression"
            },
            {
                "encoding": "ASCII",
                "offset": 267300,
                "string": "old awk does not support multiple `BEGIN' or `END' rules"
            },
            {
                "encoding": "ASCII",
                "offset": 267360,
                "string": "internal error line %d, file: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 267396,
                "string": "call of `length' without parentheses is not portable"
            },
            {
                "encoding": "ASCII",
                "offset": 268120,
                "string": "asort"
            },
            {
                "encoding": "ASCII",
                "offset": 268126,
                "string": "asorti"
            },
            {
                "encoding": "ASCII",
                "offset": 268133,
                "string": "atan2"
            },
            {
                "encoding": "ASCII",
                "offset": 268139,
                "string": "bindtextdomain"
            },
            {
                "encoding": "ASCII",
                "offset": 268154,
                "string": "break"
            },
            {
                "encoding": "ASCII",
                "offset": 268160,
                "string": "close"
            },
            {
                "encoding": "ASCII",
                "offset": 268166,
                "string": "compl"
            },
            {
                "encoding": "ASCII",
                "offset": 268172,
                "string": "continue"
            },
            {
                "encoding": "ASCII",
                "offset": 268185,
                "string": "dcgettext"
            },
            {
                "encoding": "ASCII",
                "offset": 268195,
                "string": "dcngettext"
            },
            {
                "encoding": "ASCII",
                "offset": 268206,
                "string": "delete"
            },
            {
                "encoding": "ASCII",
                "offset": 268216,
                "string": "else"
            },
            {
                "encoding": "ASCII",
                "offset": 268221,
                "string": "exit"
            },
            {
                "encoding": "ASCII",
                "offset": 268230,
                "string": "extension"
            },
            {
                "encoding": "ASCII",
                "offset": 268240,
                "string": "fflush"
            },
            {
                "encoding": "ASCII",
                "offset": 268251,
                "string": "func"
            },
            {
                "encoding": "ASCII",
                "offset": 268256,
                "string": "function"
            },
            {
                "encoding": "ASCII",
                "offset": 268265,
                "string": "gensub"
            },
            {
                "encoding": "ASCII",
                "offset": 268272,
                "string": "getline"
            },
            {
                "encoding": "ASCII",
                "offset": 268280,
                "string": "gsub"
            },
            {
                "encoding": "ASCII",
                "offset": 268291,
                "string": "index"
            },
            {
                "encoding": "ASCII",
                "offset": 268301,
                "string": "length"
            },
            {
                "encoding": "ASCII",
                "offset": 268312,
                "string": "lshift"
            },
            {
                "encoding": "ASCII",
                "offset": 268319,
                "string": "match"
            },
            {
                "encoding": "ASCII",
                "offset": 268325,
                "string": "mktime"
            },
            {
                "encoding": "ASCII",
                "offset": 268335,
                "string": "print"
            },
            {
                "encoding": "ASCII",
                "offset": 268341,
                "string": "printf"
            },
            {
                "encoding": "ASCII",
                "offset": 268348,
                "string": "rand"
            },
            {
                "encoding": "ASCII",
                "offset": 268353,
                "string": "return"
            },
            {
                "encoding": "ASCII",
                "offset": 268360,
                "string": "rshift"
            },
            {
                "encoding": "ASCII",
                "offset": 268371,
                "string": "split"
            },
            {
                "encoding": "ASCII",
                "offset": 268377,
                "string": "sprintf"
            },
            {
                "encoding": "ASCII",
                "offset": 268385,
                "string": "sqrt"
            },
            {
                "encoding": "ASCII",
                "offset": 268390,
                "string": "srand"
            },
            {
                "encoding": "ASCII",
                "offset": 268396,
                "string": "strftime"
            },
            {
                "encoding": "ASCII",
                "offset": 268405,
                "string": "strtonum"
            },
            {
                "encoding": "ASCII",
                "offset": 268418,
                "string": "substr"
            },
            {
                "encoding": "ASCII",
                "offset": 268425,
                "string": "system"
            },
            {
                "encoding": "ASCII",
                "offset": 268432,
                "string": "systime"
            },
            {
                "encoding": "ASCII",
                "offset": 268440,
                "string": "tolower"
            },
            {
                "encoding": "ASCII",
                "offset": 268448,
                "string": "toupper"
            },
            {
                "encoding": "ASCII",
                "offset": 268456,
                "string": "while"
            },
            {
                "encoding": "ASCII",
                "offset": 269660,
                "string": "%.*s"
            },
            {
                "encoding": "ASCII",
                "offset": 269668,
                "string": "unexpected newline or end of string"
            },
            {
                "encoding": "ASCII",
                "offset": 269708,
                "string": "yyerror"
            },
            {
                "encoding": "ASCII",
                "offset": 269716,
                "string": "can't read sourcefile `%s' (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 269748,
                "string": "get_src_buf"
            },
            {
                "encoding": "ASCII",
                "offset": 269760,
                "string": "source file `%s' is empty"
            },
            {
                "encoding": "ASCII",
                "offset": 269788,
                "string": "empty program text on command line"
            },
            {
                "encoding": "ASCII",
                "offset": 269823,
                "string": "AWKREADFUNC"
            },
            {
                "encoding": "ASCII",
                "offset": 269836,
                "string": "can't open source file `%s' for reading (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 269881,
                "string": "tokstart"
            },
            {
                "encoding": "ASCII",
                "offset": 269890,
                "string": "tokexpand"
            },
            {
                "encoding": "ASCII",
                "offset": 269900,
                "string": "source file does not end in newline"
            },
            {
                "encoding": "ASCII",
                "offset": 269936,
                "string": "operator `^' is not supported in old awk"
            },
            {
                "encoding": "ASCII",
                "offset": 269980,
                "string": "%s: %d: tawk regex modifier `/.../%c' doesn't work in gawk"
            },
            {
                "encoding": "ASCII",
                "offset": 270040,
                "string": "unterminated regexp at end of file"
            },
            {
                "encoding": "ASCII",
                "offset": 270075,
                "string": "unterminated string"
            },
            {
                "encoding": "ASCII",
                "offset": 270096,
                "string": "operator `^=' is not supported in old awk"
            },
            {
                "encoding": "ASCII",
                "offset": 270140,
                "string": "numeric constant `%.*s' treated as octal"
            },
            {
                "encoding": "ASCII",
                "offset": 270184,
                "string": "unterminated regexp ends with `\\' at end of file"
            },
            {
                "encoding": "ASCII",
                "offset": 270236,
                "string": "tawk regex modifier `/.../%c' doesn't work in gawk"
            },
            {
                "encoding": "ASCII",
                "offset": 270288,
                "string": "POSIX does not allow operator `**='"
            },
            {
                "encoding": "ASCII",
                "offset": 270324,
                "string": "old awk does not support operator `**='"
            },
            {
                "encoding": "ASCII",
                "offset": 270364,
                "string": "unterminated regexp"
            },
            {
                "encoding": "ASCII",
                "offset": 270384,
                "string": "POSIX does not allow `%s'"
            },
            {
                "encoding": "ASCII",
                "offset": 270412,
                "string": "`%s' is not supported in old awk"
            },
            {
                "encoding": "ASCII",
                "offset": 270445,
                "string": "`%s' is a Bell Labs extension"
            },
            {
                "encoding": "ASCII",
                "offset": 270475,
                "string": "`%s' is a gawk extension"
            },
            {
                "encoding": "ASCII",
                "offset": 270500,
                "string": "old awk does not support operator `**'"
            },
            {
                "encoding": "ASCII",
                "offset": 270540,
                "string": "POSIX does not allow operator `**'"
            },
            {
                "encoding": "ASCII",
                "offset": 270575,
                "string": "goto"
            },
            {
                "encoding": "ASCII",
                "offset": 270580,
                "string": "`goto' considered harmful!"
            },
            {
                "encoding": "ASCII",
                "offset": 270608,
                "string": "numeric constant `%.*s' treated as hexadecimal"
            },
            {
                "encoding": "ASCII",
                "offset": 270655,
                "string": "tokkey"
            },
            {
                "encoding": "ASCII",
                "offset": 270662,
                "string": "yylex"
            },
            {
                "encoding": "ASCII",
                "offset": 270668,
                "string": "invalid char '%c' in expression"
            },
            {
                "encoding": "ASCII",
                "offset": 270700,
                "string": "backslash not last character on line"
            },
            {
                "encoding": "ASCII",
                "offset": 271552,
                "string": "use of dcngettext(_\"...\") is incorrect: remove leading underscore"
            },
            {
                "encoding": "ASCII",
                "offset": 271620,
                "string": "%s third parameter is not a changeable object"
            },
            {
                "encoding": "ASCII",
                "offset": 271668,
                "string": "match: third argument is a gawk extension"
            },
            {
                "encoding": "ASCII",
                "offset": 271712,
                "string": "use of dcgettext(_\"...\") is incorrect: remove leading underscore"
            },
            {
                "encoding": "ASCII",
                "offset": 271780,
                "string": "close: second argument is a gawk extension"
            },
            {
                "encoding": "ASCII",
                "offset": 271824,
                "string": "%s: string literal as last arg of substitute has no effect"
            },
            {
                "encoding": "ASCII",
                "offset": 271884,
                "string": "%d is invalid as number of arguments for %s"
            },
            {
                "encoding": "ASCII",
                "offset": 271930,
                "string": "make_for_loop"
            },
            {
                "encoding": "ASCII",
                "offset": 271944,
                "string": "function `%s': parameter #%d, `%s', duplicates parameter #%d"
            },
            {
                "encoding": "ASCII",
                "offset": 272005,
                "string": "names"
            },
            {
                "encoding": "ASCII",
                "offset": 272011,
                "string": "dup_parms"
            },
            {
                "encoding": "ASCII",
                "offset": 272021,
                "string": "number value (%.17g)"
            },
            {
                "encoding": "ASCII",
                "offset": 272043,
                "string": "string ("
            },
            {
                "encoding": "ASCII",
                "offset": 272055,
                "string": "number (%.17g)"
            },
            {
                "encoding": "ASCII",
                "offset": 272071,
                "string": "?? flags %s"
            },
            {
                "encoding": "ASCII",
                "offset": 272084,
                "string": "string value ("
            },
            {
                "encoding": "ASCII",
                "offset": 272101,
                "string": "j == var_count"
            },
            {
                "encoding": "ASCII",
                "offset": 272116,
                "string": "could not open `%s' for writing (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 272156,
                "string": "sending profile to standard error"
            },
            {
                "encoding": "ASCII",
                "offset": 272190,
                "string": "table"
            },
            {
                "encoding": "ASCII",
                "offset": 272196,
                "string": "dump_vars"
            },
            {
                "encoding": "ASCII",
                "offset": 272206,
                "string": "%.*s: "
            },
            {
                "encoding": "ASCII",
                "offset": 272213,
                "string": "%s: close failed (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 272235,
                "string": "unused variable"
            },
            {
                "encoding": "ASCII",
                "offset": 272252,
                "string": "array, %ld elements"
            },
            {
                "encoding": "ASCII",
                "offset": 272277,
                "string": "dump_funcs"
            },
            {
                "encoding": "ASCII",
                "offset": 272288,
                "string": "j == func_count"
            },
            {
                "encoding": "ASCII",
                "offset": 272304,
                "string": "there were shadowed variables."
            },
            {
                "encoding": "ASCII",
                "offset": 272335,
                "string": "shadow_funcs"
            },
            {
                "encoding": "ASCII",
                "offset": 272348,
                "string": "shadow_funcs() called twice!"
            },
            {
                "encoding": "ASCII",
                "offset": 272380,
                "string": "function `%s': parameter `%s' shadows global variable"
            },
            {
                "encoding": "ASCII",
                "offset": 272436,
                "string": "function name `%s' previously defined"
            },
            {
                "encoding": "ASCII",
                "offset": 272476,
                "string": "function `%s': can't use function name as parameter name"
            },
            {
                "encoding": "ASCII",
                "offset": 272536,
                "string": "function `%s': can't use special variable `%s' as a function parameter"
            },
            {
                "encoding": "ASCII",
                "offset": 272607,
                "string": "pnames"
            },
            {
                "encoding": "ASCII",
                "offset": 272614,
                "string": "func_install"
            },
            {
                "encoding": "ASCII",
                "offset": 272627,
                "string": "fp->name"
            },
            {
                "encoding": "ASCII",
                "offset": 272636,
                "string": "func_use"
            },
            {
                "encoding": "ASCII",
                "offset": 272648,
                "string": "function `%s' defined but never called"
            },
            {
                "encoding": "ASCII",
                "offset": 272688,
                "string": "function `%s' called but never defined"
            },
            {
                "encoding": "ASCII",
                "offset": 272728,
                "string": "regexp constant for parameter #%d yields boolean value"
            },
            {
                "encoding": "ASCII",
                "offset": 272786,
                "string": "register_deferred_variable"
            },
            {
                "encoding": "ASCII",
                "offset": 272816,
                "string": "function `%s' called with space between name and `(',"
            },
            {
                "encoding": "ASCII",
                "offset": 272870,
                "string": "or used as a variable or an array"
            },
            {
                "encoding": "ASCII",
                "offset": 273304,
                "string": "#: %s:%d"
            },
            {
                "encoding": "ASCII",
                "offset": 273314,
                "string": "msgid "
            },
            {
                "encoding": "ASCII",
                "offset": 273321,
                "string": "msgstr \"\""
            },
            {
                "encoding": "ASCII",
                "offset": 273333,
                "string": "msgid_plural "
            },
            {
                "encoding": "ASCII",
                "offset": 273347,
                "string": "msgstr[0] \"\""
            },
            {
                "encoding": "ASCII",
                "offset": 273360,
                "string": "msgstr[1] \"\""
            },
            {
                "encoding": "ASCII",
                "offset": 273376,
                "string": "tree->type == Node_K_printf || (tree->type == Node_builtin && tree->builtin == do_sprintf)"
            },
            {
                "encoding": "ASCII",
                "offset": 273467,
                "string": "ugh. fdopen: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 273484,
                "string": "debugging read/close screwed up!"
            },
            {
                "encoding": "ASCII",
                "offset": 273517,
                "string": "can't happen"
            },
            {
                "encoding": "ASCII",
                "offset": 273532,
                "string": "division by zero attempted in `%%'"
            },
            {
                "encoding": "ASCII",
                "offset": 273567,
                "string": "constant_fold"
            },
            {
                "encoding": "ASCII",
                "offset": 273581,
                "string": "left->stptr"
            },
            {
                "encoding": "ASCII",
                "offset": 273664,
                "string": "/usr/src/gawk/gawk-3.1.7/builtin.c"
            },
            {
                "encoding": "ASCII",
                "offset": 273699,
                "string": "reason unknown"
            },
            {
                "encoding": "ASCII",
                "offset": 273714,
                "string": "%s to \"%s\" failed (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 273737,
                "string": "standard output"
            },
            {
                "encoding": "ASCII",
                "offset": 273756,
                "string": "exp: argument %g is out of range"
            },
            {
                "encoding": "ASCII",
                "offset": 273792,
                "string": "exp: received non-numeric argument"
            },
            {
                "encoding": "ASCII",
                "offset": 273828,
                "string": "internal error line %d, file: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 273864,
                "string": "fflush: cannot flush: pipe `%s' opened for reading, not writing"
            },
            {
                "encoding": "ASCII",
                "offset": 273928,
                "string": "fflush: cannot flush: file `%s' opened for reading, not writing"
            },
            {
                "encoding": "ASCII",
                "offset": 273992,
                "string": "fflush: `%s' is not an open file, pipe or co-process"
            },
            {
                "encoding": "ASCII",
                "offset": 274045,
                "string": "/dev/stderr"
            },
            {
                "encoding": "ASCII",
                "offset": 274057,
                "string": "/dev/stdout"
            },
            {
                "encoding": "ASCII",
                "offset": 274072,
                "string": "index: received non-string first argument"
            },
            {
                "encoding": "ASCII",
                "offset": 274116,
                "string": "index: received non-string second argument"
            },
            {
                "encoding": "ASCII",
                "offset": 274160,
                "string": "int: received non-numeric argument"
            },
            {
                "encoding": "ASCII",
                "offset": 274196,
                "string": "length: untyped argument will be forced to scalar"
            },
            {
                "encoding": "ASCII",
                "offset": 274248,
                "string": "length: received non-string argument"
            },
            {
                "encoding": "ASCII",
                "offset": 274288,
                "string": "`length(array)' is a gawk extension"
            },
            {
                "encoding": "ASCII",
                "offset": 274324,
                "string": "log: received negative argument %g"
            },
            {
                "encoding": "ASCII",
                "offset": 274360,
                "string": "log: received non-numeric argument"
            },
            {
                "encoding": "ASCII",
                "offset": 274399,
                "string": "0123456789abcdef"
            },
            {
                "encoding": "ASCII",
                "offset": 274416,
                "string": "0123456789ABCDEF"
            },
            {
                "encoding": "ASCII",
                "offset": 274436,
                "string": "%s: %s: can't allocate %ld bytes of memory (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 274484,
                "string": "the_args"
            },
            {
                "encoding": "ASCII",
                "offset": 274493,
                "string": "format_tree"
            },
            {
                "encoding": "ASCII",
                "offset": 274505,
                "string": "i == num_args"
            },
            {
                "encoding": "ASCII",
                "offset": 274520,
                "string": "too many arguments supplied for format string"
            },
            {
                "encoding": "ASCII",
                "offset": 274568,
                "string": "[s]printf: format specifier does not have control letter"
            },
            {
                "encoding": "ASCII",
                "offset": 274625,
                "string": "^ ran out for this one"
            },
            {
                "encoding": "ASCII",
                "offset": 274648,
                "string": "not enough arguments to satisfy format string"
            },
            {
                "encoding": "ASCII",
                "offset": 274698,
                "string": "\t`%s'"
            },
            {
                "encoding": "ASCII",
                "offset": 274704,
                "string": "\t%*s%s"
            },
            {
                "encoding": "ASCII",
                "offset": 274712,
                "string": "ignoring unknown format specifier character `%c': no argument converted"
            },
            {
                "encoding": "ASCII",
                "offset": 274784,
                "string": "arg count %ld greater than total number of supplied arguments"
            },
            {
                "encoding": "ASCII",
                "offset": 274846,
                "string": "%.0f"
            },
            {
                "encoding": "ASCII",
                "offset": 274851,
                "string": "cpbufs[1].buf"
            },
            {
                "encoding": "ASCII",
                "offset": 274868,
                "string": "cp == arg->stptr || cp == cpbuf"
            },
            {
                "encoding": "ASCII",
                "offset": 274900,
                "string": "cpbufs[1].bufsize > 0"
            },
            {
                "encoding": "ASCII",
                "offset": 274922,
                "string": "obuf"
            },
            {
                "encoding": "ASCII",
                "offset": 274928,
                "string": "[s]printf: value %g is out of range for `%%%c' format"
            },
            {
                "encoding": "ASCII",
                "offset": 274984,
                "string": "`h' is meaningless in awk formats; ignored"
            },
            {
                "encoding": "ASCII",
                "offset": 275028,
                "string": "field width is ignored for `%%%%' specifier"
            },
            {
                "encoding": "ASCII",
                "offset": 275072,
                "string": "`l' is meaningless in awk formats; ignored"
            },
            {
                "encoding": "ASCII",
                "offset": 275116,
                "string": "[s]printf: value %g is too big for %%c format"
            },
            {
                "encoding": "ASCII",
                "offset": 275164,
                "string": "`L' is meaningless in awk formats; ignored"
            },
            {
                "encoding": "ASCII",
                "offset": 275207,
                "string": "cpbufs[0].buf"
            },
            {
                "encoding": "ASCII",
                "offset": 275224,
                "string": "precision is ignored for `%%%%' specifier"
            },
            {
                "encoding": "ASCII",
                "offset": 275268,
                "string": "field width and precision are ignored for `%%%%' specifier"
            },
            {
                "encoding": "ASCII",
                "offset": 275328,
                "string": "must use `count$' on all formats or none"
            },
            {
                "encoding": "ASCII",
                "offset": 275372,
                "string": "`l' is not permitted in POSIX awk formats"
            },
            {
                "encoding": "ASCII",
                "offset": 275416,
                "string": "`L' is not permitted in POSIX awk formats"
            },
            {
                "encoding": "ASCII",
                "offset": 275460,
                "string": "`h' is not permitted in POSIX awk formats"
            },
            {
                "encoding": "ASCII",
                "offset": 275504,
                "string": "arg count with `$' must be > 0"
            },
            {
                "encoding": "ASCII",
                "offset": 275536,
                "string": "`$' not permitted after period in format"
            },
            {
                "encoding": "ASCII",
                "offset": 275580,
                "string": "`$' is not permitted in awk formats"
            },
            {
                "encoding": "ASCII",
                "offset": 275616,
                "string": "no `$' supplied for positional field width or precision"
            },
            {
                "encoding": "ASCII",
                "offset": 276164,
                "string": "printf"
            },
            {
                "encoding": "ASCII",
                "offset": 276171,
                "string": "printf: no arguments"
            },
            {
                "encoding": "ASCII",
                "offset": 276192,
                "string": "sqrt: called with negative argument %g"
            },
            {
                "encoding": "ASCII",
                "offset": 276232,
                "string": "sqrt: received non-numeric argument"
            },
            {
                "encoding": "ASCII",
                "offset": 276268,
                "string": "substr: source string is zero length"
            },
            {
                "encoding": "ASCII",
                "offset": 276305,
                "string": "substr: length %g is not >= 0"
            },
            {
                "encoding": "ASCII",
                "offset": 276336,
                "string": "substr: start index %g is past end of string"
            },
            {
                "encoding": "ASCII",
                "offset": 276384,
                "string": "substr: non-integer start index %g will be truncated"
            },
            {
                "encoding": "ASCII",
                "offset": 276440,
                "string": "substr: start index %g is invalid, using 1"
            },
            {
                "encoding": "ASCII",
                "offset": 276484,
                "string": "substr: length %g too big for string indexing, truncating to %g"
            },
            {
                "encoding": "ASCII",
                "offset": 276548,
                "string": "substr: length %g at start index %g exceeds length of first argument (%lu)"
            },
            {
                "encoding": "ASCII",
                "offset": 276624,
                "string": "substr: non-integer length %g will be truncated"
            },
            {
                "encoding": "ASCII",
                "offset": 276672,
                "string": "substr: length %g is not >= 1"
            },
            {
                "encoding": "ASCII",
                "offset": 276719,
                "string": "?%a %b %d %H:%M:%S %Z %Y"
            },
            {
                "encoding": "ASCII",
                "offset": 276744,
                "string": "bufp"
            },
            {
                "encoding": "ASCII",
                "offset": 276749,
                "string": "do_strftime"
            },
            {
                "encoding": "ASCII",
                "offset": 276764,
                "string": "strftime: received non-string first argument"
            },
            {
                "encoding": "ASCII",
                "offset": 276812,
                "string": "strftime: received empty format string"
            },
            {
                "encoding": "ASCII",
                "offset": 276852,
                "string": "strftime: received non-numeric second argument"
            },
            {
                "encoding": "ASCII",
                "offset": 276899,
                "string": "%ld %d %d %d %d %d %d"
            },
            {
                "encoding": "ASCII",
                "offset": 276924,
                "string": "mktime: received non-string argument"
            },
            {
                "encoding": "ASCII",
                "offset": 276964,
                "string": "system: received non-string argument"
            },
            {
                "encoding": "ASCII",
                "offset": 277001,
                "string": "print"
            },
            {
                "encoding": "ASCII",
                "offset": 277007,
                "string": "do_print"
            },
            {
                "encoding": "ASCII",
                "offset": 277020,
                "string": "reference to uninitialized field `$%d'"
            },
            {
                "encoding": "ASCII",
                "offset": 277060,
                "string": "tolower: received non-string argument"
            },
            {
                "encoding": "ASCII",
                "offset": 277100,
                "string": "toupper: received non-string argument"
            },
            {
                "encoding": "ASCII",
                "offset": 277140,
                "string": "atan2: received non-numeric second argument"
            },
            {
                "encoding": "ASCII",
                "offset": 277184,
                "string": "atan2: received non-numeric first argument"
            },
            {
                "encoding": "ASCII",
                "offset": 277228,
                "string": "sin: received non-numeric argument"
            },
            {
                "encoding": "ASCII",
                "offset": 277264,
                "string": "cos: received non-numeric argument"
            },
            {
                "encoding": "ASCII",
                "offset": 277311,
                "string": "Asrand: received non-numeric argument"
            },
            {
                "encoding": "ASCII",
                "offset": 277356,
                "string": "do_match"
            },
            {
                "encoding": "ASCII",
                "offset": 277368,
                "string": "match: third argument is not an array"
            },
            {
                "encoding": "ASCII",
                "offset": 277415,
                "string": "?\\\\\\&"
            },
            {
                "encoding": "ASCII",
                "offset": 277421,
                "string": "mb_indices"
            },
            {
                "encoding": "ASCII",
                "offset": 277432,
                "string": "sub_common"
            },
            {
                "encoding": "ASCII",
                "offset": 277448,
                "string": "gensub: third argument of 0 treated as 1"
            },
            {
                "encoding": "ASCII",
                "offset": 277503,
                "string": "Alshift(%lf, %lf): negative values will give strange results"
            },
            {
                "encoding": "ASCII",
                "offset": 277564,
                "string": "lshift(%lf, %lf): fractional values will be truncated"
            },
            {
                "encoding": "ASCII",
                "offset": 277620,
                "string": "lshift(%lf, %lf): too large shift value will give strange results"
            },
            {
                "encoding": "ASCII",
                "offset": 277688,
                "string": "lshift: received non-numeric second argument"
            },
            {
                "encoding": "ASCII",
                "offset": 277736,
                "string": "lshift: received non-numeric first argument"
            },
            {
                "encoding": "ASCII",
                "offset": 277787,
                "string": "_rshift(%lf, %lf): negative values will give strange results"
            },
            {
                "encoding": "ASCII",
                "offset": 277848,
                "string": "rshift(%lf, %lf): fractional values will be truncated"
            },
            {
                "encoding": "ASCII",
                "offset": 277904,
                "string": "rshift(%lf, %lf): too large shift value will give strange results"
            },
            {
                "encoding": "ASCII",
                "offset": 277972,
                "string": "rshift: received non-numeric second argument"
            },
            {
                "encoding": "ASCII",
                "offset": 278020,
                "string": "rshift: received non-numeric first argument"
            },
            {
                "encoding": "ASCII",
                "offset": 278071,
                "string": "_and(%lf, %lf): negative values will give strange results"
            },
            {
                "encoding": "ASCII",
                "offset": 278132,
                "string": "and(%lf, %lf): fractional values will be truncated"
            },
            {
                "encoding": "ASCII",
                "offset": 278184,
                "string": "and: received non-numeric second argument"
            },
            {
                "encoding": "ASCII",
                "offset": 278228,
                "string": "and: received non-numeric first argument"
            },
            {
                "encoding": "ASCII",
                "offset": 278275,
                "string": "_or(%lf, %lf): negative values will give strange results"
            },
            {
                "encoding": "ASCII",
                "offset": 278332,
                "string": "or(%lf, %lf): fractional values will be truncated"
            },
            {
                "encoding": "ASCII",
                "offset": 278384,
                "string": "or: received non-numeric second argument"
            },
            {
                "encoding": "ASCII",
                "offset": 278428,
                "string": "or: received non-numeric first argument"
            },
            {
                "encoding": "ASCII",
                "offset": 278471,
                "string": "_xor(%lf, %lf): negative values will give strange results"
            },
            {
                "encoding": "ASCII",
                "offset": 278532,
                "string": "xor(%lf, %lf): fractional values will be truncated"
            },
            {
                "encoding": "ASCII",
                "offset": 278584,
                "string": "xor: received non-numeric second argument"
            },
            {
                "encoding": "ASCII",
                "offset": 278628,
                "string": "xor: received non-numeric first argument"
            },
            {
                "encoding": "ASCII",
                "offset": 278675,
                "string": "_compl(%lf): fractional value will be truncated"
            },
            {
                "encoding": "ASCII",
                "offset": 278724,
                "string": "compl(%lf): negative value will give strange results"
            },
            {
                "encoding": "ASCII",
                "offset": 278780,
                "string": "compl: received non-numeric argument"
            },
            {
                "encoding": "ASCII",
                "offset": 279052,
                "string": "LC_ALL"
            },
            {
                "encoding": "ASCII",
                "offset": 279059,
                "string": "LC_COLLATE"
            },
            {
                "encoding": "ASCII",
                "offset": 279070,
                "string": "LC_CTYPE"
            },
            {
                "encoding": "ASCII",
                "offset": 279079,
                "string": "LC_MESSAGES"
            },
            {
                "encoding": "ASCII",
                "offset": 279091,
                "string": "LC_MONETARY"
            },
            {
                "encoding": "ASCII",
                "offset": 279103,
                "string": "LC_NUMERIC"
            },
            {
                "encoding": "ASCII",
                "offset": 279114,
                "string": "LC_TIME"
            },
            {
                "encoding": "ASCII",
                "offset": 279192,
                "string": "dcgettext: `%s' is not a valid locale category"
            },
            {
                "encoding": "ASCII",
                "offset": 279266,
                "string": "POSIX"
            },
            {
                "encoding": "ASCII",
                "offset": 279272,
                "string": "Memory exhausted"
            },
            {
                "encoding": "ASCII",
                "offset": 279289,
                "string": ":alpha:]"
            },
            {
                "encoding": "ASCII",
                "offset": 279298,
                "string": ":upper:]"
            },
            {
                "encoding": "ASCII",
                "offset": 279307,
                "string": ":lower:]"
            },
            {
                "encoding": "ASCII",
                "offset": 279316,
                "string": ":digit:]"
            },
            {
                "encoding": "ASCII",
                "offset": 279325,
                "string": ":xdigit:]"
            },
            {
                "encoding": "ASCII",
                "offset": 279335,
                "string": ":space:]"
            },
            {
                "encoding": "ASCII",
                "offset": 279344,
                "string": ":punct:]"
            },
            {
                "encoding": "ASCII",
                "offset": 279353,
                "string": ":alnum:]"
            },
            {
                "encoding": "ASCII",
                "offset": 279362,
                "string": ":print:]"
            },
            {
                "encoding": "ASCII",
                "offset": 279371,
                "string": ":graph:]"
            },
            {
                "encoding": "ASCII",
                "offset": 279380,
                "string": ":cntrl:]"
            },
            {
                "encoding": "ASCII",
                "offset": 279389,
                "string": ":blank:]"
            },
            {
                "encoding": "ASCII",
                "offset": 279528,
                "string": "unfinished repeat count"
            },
            {
                "encoding": "ASCII",
                "offset": 279552,
                "string": "Unbalanced ["
            },
            {
                "encoding": "ASCII",
                "offset": 279565,
                "string": "Unfinished \\ escape"
            },
            {
                "encoding": "ASCII",
                "offset": 279585,
                "string": "malformed repeat count"
            },
            {
                "encoding": "ASCII",
                "offset": 280068,
                "string": "Unbalanced ("
            },
            {
                "encoding": "ASCII",
                "offset": 280384,
                "string": "Unbalanced )"
            },
            {
                "encoding": "ASCII",
                "offset": 280397,
                "string": "No syntax specified"
            },
            {
                "encoding": "ASCII",
                "offset": 280564,
                "string": "memory exhausted"
            },
            {
                "encoding": "ASCII",
                "offset": 280608,
                "string": "`extension' is a gawk extension"
            },
            {
                "encoding": "ASCII",
                "offset": 280640,
                "string": "/usr/src/gawk/gawk-3.1.7/ext.c"
            },
            {
                "encoding": "ASCII",
                "offset": 280672,
                "string": "internal error line %d, file: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 280708,
                "string": "extension: cannot open `%s' (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 280744,
                "string": "extension: library `%s': cannot call function `%s' (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 280804,
                "string": "extension: missing function name"
            },
            {
                "encoding": "ASCII",
                "offset": 280840,
                "string": "extension: can't use gawk built-in `%s' as function name"
            },
            {
                "encoding": "ASCII",
                "offset": 280900,
                "string": "extension: illegal character `%c' in function name `%s'"
            },
            {
                "encoding": "ASCII",
                "offset": 280960,
                "string": "extension: function `%s' already defined"
            },
            {
                "encoding": "ASCII",
                "offset": 281004,
                "string": "extension: function name `%s' previously defined"
            },
            {
                "encoding": "ASCII",
                "offset": 281056,
                "string": "extension: can't redefine function `%s'"
            },
            {
                "encoding": "ASCII",
                "offset": 281096,
                "string": "vnames"
            },
            {
                "encoding": "ASCII",
                "offset": 281104,
                "string": "%s: %s: can't allocate %ld bytes of memory (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 281152,
                "string": "make_builtin"
            },
            {
                "encoding": "ASCII",
                "offset": 281165,
                "string": "parm_names"
            },
            {
                "encoding": "ASCII",
                "offset": 281176,
                "string": "function `%s': argument #%d: attempt to use array as a scalar"
            },
            {
                "encoding": "ASCII",
                "offset": 281240,
                "string": "function `%s': argument #%d: attempt to use scalar as an array"
            },
            {
                "encoding": "ASCII",
                "offset": 281304,
                "string": "function `%s' defined to take no more than %d argument(s)"
            },
            {
                "encoding": "ASCII",
                "offset": 281364,
                "string": "function `%s': missing argument #%d"
            },
            {
                "encoding": "ASCII",
                "offset": 281400,
                "string": "/usr/src/gawk/gawk-3.1.7/field.c"
            },
            {
                "encoding": "ASCII",
                "offset": 281436,
                "string": "%s: %s: can't allocate %ld bytes of memory (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 281484,
                "string": "fields_arr"
            },
            {
                "encoding": "ASCII",
                "offset": 281495,
                "string": "init_fields"
            },
            {
                "encoding": "ASCII",
                "offset": 281507,
                "string": "grow_fields_arr"
            },
            {
                "encoding": "ASCII",
                "offset": 281523,
                "string": "NF != -1"
            },
            {
                "encoding": "ASCII",
                "offset": 281536,
                "string": "rebuild_record"
            },
            {
                "encoding": "ASCII",
                "offset": 281551,
                "string": "databuf"
            },
            {
                "encoding": "ASCII",
                "offset": 281559,
                "string": "set_record"
            },
            {
                "encoding": "ASCII",
                "offset": 281570,
                "string": "NF set to negative value"
            },
            {
                "encoding": "ASCII",
                "offset": 281596,
                "string": "split: null string for third arg is a gawk extension"
            },
            {
                "encoding": "ASCII",
                "offset": 281652,
                "string": "internal error line %d, file: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 281688,
                "string": "split: second argument is not an array"
            },
            {
                "encoding": "ASCII",
                "offset": 281727,
                "string": "FIELDWIDTHS"
            },
            {
                "encoding": "ASCII",
                "offset": 281744,
                "string": "`FIELDWIDTHS' is a gawk extension"
            },
            {
                "encoding": "ASCII",
                "offset": 281780,
                "string": "invalid FIELDWIDTHS value, near `%s'"
            },
            {
                "encoding": "ASCII",
                "offset": 281817,
                "string": "set_FIELDWIDTHS"
            },
            {
                "encoding": "ASCII",
                "offset": 281836,
                "string": "null string for `FS' is a gawk extension"
            },
            {
                "encoding": "ASCII",
                "offset": 281884,
                "string": "old awk does not support regexps as value of `FS'"
            },
            {
                "encoding": "ASCII",
                "offset": 281936,
                "string": ".:/usr/share/awk"
            },
            {
                "encoding": "ASCII",
                "offset": 281953,
                "string": "AWKBUFSIZE"
            },
            {
                "encoding": "ASCII",
                "offset": 281964,
                "string": "exact"
            },
            {
                "encoding": "ASCII",
                "offset": 281972,
                "string": "/usr/src/gawk/gawk-3.1.7/posix/gawkmisc.c"
            },
            {
                "encoding": "ASCII",
                "offset": 282014,
                "string": "can't stat fd %d (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 282036,
                "string": "%s %s `%s': could not set close-on-exec: (fcntl: %s)"
            },
            {
                "encoding": "ASCII",
                "offset": 282092,
                "string": "/usr/src/gawk/gawk-3.1.7/gawkmisc.c"
            },
            {
                "encoding": "ASCII",
                "offset": 282128,
                "string": "%s: %s: can't allocate %ld bytes of memory (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 282178,
                "string": "xmalloc"
            },
            {
                "encoding": "ASCII",
                "offset": 282188,
                "string": "POSIXLY_CORRECT"
            },
            {
                "encoding": "ASCII",
                "offset": 282208,
                "string": "%s: unrecognized option '%c%s'"
            },
            {
                "encoding": "ASCII",
                "offset": 282241,
                "string": "%s: invalid option -- '%c'"
            },
            {
                "encoding": "ASCII",
                "offset": 282272,
                "string": "%s: option '%c%s' doesn't allow an argument"
            },
            {
                "encoding": "ASCII",
                "offset": 282320,
                "string": "%s: option '%s' requires an argument"
            },
            {
                "encoding": "ASCII",
                "offset": 282358,
                "string": "%s: option '%s' is ambiguous"
            },
            {
                "encoding": "ASCII",
                "offset": 282388,
                "string": "%s: option requires an argument -- '%c'"
            },
            {
                "encoding": "ASCII",
                "offset": 282432,
                "string": "%s: unrecognized option '--%s'"
            },
            {
                "encoding": "ASCII",
                "offset": 282464,
                "string": "%s: option '-W %s' is ambiguous"
            },
            {
                "encoding": "ASCII",
                "offset": 282500,
                "string": "%s: option '--%s' doesn't allow an argument"
            },
            {
                "encoding": "ASCII",
                "offset": 282548,
                "string": "%s: option '-W %s' doesn't allow an argument"
            },
            {
                "encoding": "ASCII",
                "offset": 282626,
                "string": "/usr/src/gawk/gawk-3.1.7/io.c"
            },
            {
                "encoding": "ASCII",
                "offset": 282656,
                "string": "cannot open file `%s' for reading (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 282708,
                "string": "close of fd %d (`%s') failed (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 282742,
                "string": "RED_FILE"
            },
            {
                "encoding": "ASCII",
                "offset": 282751,
                "string": "RED_PIPE"
            },
            {
                "encoding": "ASCII",
                "offset": 282760,
                "string": "RED_READ"
            },
            {
                "encoding": "ASCII",
                "offset": 282769,
                "string": "RED_WRITE"
            },
            {
                "encoding": "ASCII",
                "offset": 282779,
                "string": "RED_APPEND"
            },
            {
                "encoding": "ASCII",
                "offset": 282790,
                "string": "RED_NOBUF"
            },
            {
                "encoding": "ASCII",
                "offset": 282800,
                "string": "RED_EOF"
            },
            {
                "encoding": "ASCII",
                "offset": 282808,
                "string": "RED_TWOWAY"
            },
            {
                "encoding": "ASCII",
                "offset": 282819,
                "string": "RED_PTY"
            },
            {
                "encoding": "ASCII",
                "offset": 282827,
                "string": "RED_SOCKET"
            },
            {
                "encoding": "ASCII",
                "offset": 282838,
                "string": "RED_TCP"
            },
            {
                "encoding": "ASCII",
                "offset": 282952,
                "string": "expression for `%s' redirection has null string value"
            },
            {
                "encoding": "ASCII",
                "offset": 283016,
                "string": "filename `%s' for `%s' redirection may be result of logical expression"
            },
            {
                "encoding": "ASCII",
                "offset": 283088,
                "string": "expression in `%s' redirection only has numeric value"
            },
            {
                "encoding": "ASCII",
                "offset": 283142,
                "string": "/inet/"
            },
            {
                "encoding": "ASCII",
                "offset": 283149,
                "string": "tcp/"
            },
            {
                "encoding": "ASCII",
                "offset": 283154,
                "string": "to/from"
            },
            {
                "encoding": "ASCII",
                "offset": 283162,
                "string": "from"
            },
            {
                "encoding": "ASCII",
                "offset": 283168,
                "string": "can't open pipe `%s' for input (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 283208,
                "string": "pipe"
            },
            {
                "encoding": "ASCII",
                "offset": 283216,
                "string": "can't open two way pipe `%s' for input/output (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 283267,
                "string": "can't redirect from `%s' (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 283300,
                "string": "invalid tree type %s in redirect()"
            },
            {
                "encoding": "ASCII",
                "offset": 283336,
                "string": "internal error line %d, file: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 283372,
                "string": "unnecessary mixing of `>' and `>>' for file `%.*s'"
            },
            {
                "encoding": "ASCII",
                "offset": 283428,
                "string": "%s: %s: can't allocate %ld bytes of memory (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 283476,
                "string": "redirect"
            },
            {
                "encoding": "ASCII",
                "offset": 283488,
                "string": "can't open pipe `%s' for output (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 283528,
                "string": "can't open two way socket `%s' for input/output (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 283581,
                "string": "can't redirect to `%s' (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 283660,
                "string": "too many pipes or input files open"
            },
            {
                "encoding": "ASCII",
                "offset": 283696,
                "string": "reached system limit for open files: starting to multiplex file descriptors"
            },
            {
                "encoding": "ASCII",
                "offset": 283772,
                "string": "close of `%s' failed (%s)."
            },
            {
                "encoding": "ASCII",
                "offset": 283800,
                "string": "close of redirection that was never opened"
            },
            {
                "encoding": "ASCII",
                "offset": 283844,
                "string": "close: `%.*s' is not an open file, pipe or co-process"
            },
            {
                "encoding": "ASCII",
                "offset": 283900,
                "string": "close: second argument must be `to' or `from'"
            },
            {
                "encoding": "ASCII",
                "offset": 283952,
                "string": "no explicit close of pipe `%s' provided"
            },
            {
                "encoding": "ASCII",
                "offset": 283992,
                "string": "failure status (%d) on file close of `%s' (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 284040,
                "string": "no explicit close of co-process `%s' provided"
            },
            {
                "encoding": "ASCII",
                "offset": 284088,
                "string": "close: redirection `%s' not opened with `|&', second argument ignored"
            },
            {
                "encoding": "ASCII",
                "offset": 284160,
                "string": "no explicit close of socket `%s' provided"
            },
            {
                "encoding": "ASCII",
                "offset": 284204,
                "string": "no explicit close of file `%s' provided"
            },
            {
                "encoding": "ASCII",
                "offset": 284244,
                "string": "failure status (%d) on pipe close of `%s' (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 284292,
                "string": "co-process flush of pipe to `%s' failed (%s)."
            },
            {
                "encoding": "ASCII",
                "offset": 284340,
                "string": "error writing standard error (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 284376,
                "string": "error writing standard output (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 284412,
                "string": "file flush of `%s' failed (%s)."
            },
            {
                "encoding": "ASCII",
                "offset": 284444,
                "string": "pipe flush of `%s' failed (%s)."
            },
            {
                "encoding": "ASCII",
                "offset": 284476,
                "string": "/inet/raw client not ready yet, sorry"
            },
            {
                "encoding": "ASCII",
                "offset": 284516,
                "string": "/inet/raw server not ready yet, sorry"
            },
            {
                "encoding": "ASCII",
                "offset": 284556,
                "string": "remote host and port information (%s, %s) invalid"
            },
            {
                "encoding": "ASCII",
                "offset": 284608,
                "string": "local port %s invalid in `/inet'"
            },
            {
                "encoding": "ASCII",
                "offset": 284642,
                "string": "file"
            },
            {
                "encoding": "ASCII",
                "offset": 284647,
                "string": "/dev/"
            },
            {
                "encoding": "ASCII",
                "offset": 284657,
                "string": "raw/"
            },
            {
                "encoding": "ASCII",
                "offset": 284664,
                "string": "no (known) protocol supplied in special filename `%s'"
            },
            {
                "encoding": "ASCII",
                "offset": 284718,
                "string": "stdin"
            },
            {
                "encoding": "ASCII",
                "offset": 284724,
                "string": "stdout"
            },
            {
                "encoding": "ASCII",
                "offset": 284731,
                "string": "stderr"
            },
            {
                "encoding": "ASCII",
                "offset": 284738,
                "string": "file `%s' is a directory"
            },
            {
                "encoding": "ASCII",
                "offset": 284763,
                "string": "udp/"
            },
            {
                "encoding": "ASCII",
                "offset": 284768,
                "string": "GAWK_SOCK_RETRIES"
            },
            {
                "encoding": "ASCII",
                "offset": 284788,
                "string": "special file name `%s' is incomplete"
            },
            {
                "encoding": "ASCII",
                "offset": 284828,
                "string": "must supply a remote port to `/inet'"
            },
            {
                "encoding": "ASCII",
                "offset": 284868,
                "string": "must supply a remote hostname to `/inet'"
            },
            {
                "encoding": "ASCII",
                "offset": 284912,
                "string": "use `PROCINFO[\"%s\"]' instead of `%s'"
            },
            {
                "encoding": "ASCII",
                "offset": 284953,
                "string": "spec_setup"
            },
            {
                "encoding": "ASCII",
                "offset": 284968,
                "string": "use `PROCINFO[...]' instead of `/dev/user'"
            },
            {
                "encoding": "ASCII",
                "offset": 285011,
                "string": "%d %d %d %d"
            },
            {
                "encoding": "ASCII",
                "offset": 285026,
                "string": "/dev/fd/"
            },
            {
                "encoding": "ASCII",
                "offset": 285035,
                "string": "/dev/stdin"
            },
            {
                "encoding": "ASCII",
                "offset": 285046,
                "string": "/dev/stdout"
            },
            {
                "encoding": "ASCII",
                "offset": 285058,
                "string": "/dev/stderr"
            },
            {
                "encoding": "ASCII",
                "offset": 285070,
                "string": "/dev/pid"
            },
            {
                "encoding": "ASCII",
                "offset": 285079,
                "string": "/dev/ppid"
            },
            {
                "encoding": "ASCII",
                "offset": 285089,
                "string": "/dev/pgrpid"
            },
            {
                "encoding": "ASCII",
                "offset": 285101,
                "string": "/dev/user"
            },
            {
                "encoding": "ASCII",
                "offset": 285112,
                "string": "could not open `%s', mode `%s'"
            },
            {
                "encoding": "ASCII",
                "offset": 285143,
                "string": "close of pipe failed (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 285169,
                "string": "/dev/pty%c%x"
            },
            {
                "encoding": "ASCII",
                "offset": 285185,
                "string": "/dev/ptmx"
            },
            {
                "encoding": "ASCII",
                "offset": 285195,
                "string": "/dev/pty%c0"
            },
            {
                "encoding": "ASCII",
                "offset": 285208,
                "string": "close of slave pty failed (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 285239,
                "string": "/bin/sh"
            },
            {
                "encoding": "ASCII",
                "offset": 285253,
                "string": "socket"
            },
            {
                "encoding": "ASCII",
                "offset": 285260,
                "string": "moving pipe to stdin in child failed (dup: %s)"
            },
            {
                "encoding": "ASCII",
                "offset": 285308,
                "string": "close of stdin in child failed (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 285344,
                "string": "moving pipe to stdout in child failed (dup: %s)"
            },
            {
                "encoding": "ASCII",
                "offset": 285392,
                "string": "close of stdout in child failed (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 285432,
                "string": "close of master pty failed (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 285464,
                "string": "moving slave pty to stdin in child failed (dup: %s)"
            },
            {
                "encoding": "ASCII",
                "offset": 285516,
                "string": "moving slave pty to stdout in child failed (dup: %s)"
            },
            {
                "encoding": "ASCII",
                "offset": 285569,
                "string": "cannot open pipe `%s' (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 285596,
                "string": "cannot create child process for `%s' (fork: %s)"
            },
            {
                "encoding": "ASCII",
                "offset": 285644,
                "string": "AWKPATH"
            },
            {
                "encoding": "ASCII",
                "offset": 285652,
                "string": "trypath"
            },
            {
                "encoding": "ASCII",
                "offset": 285660,
                "string": "do_pathopen"
            },
            {
                "encoding": "ASCII",
                "offset": 285675,
                "string": "register_open_hook"
            },
            {
                "encoding": "ASCII",
                "offset": 285698,
                "string": "iop_alloc"
            },
            {
                "encoding": "ASCII",
                "offset": 285708,
                "string": "data file `%s' is empty"
            },
            {
                "encoding": "ASCII",
                "offset": 285732,
                "string": "iop->buf"
            },
            {
                "encoding": "ASCII",
                "offset": 285744,
                "string": "could not allocate more input memory"
            },
            {
                "encoding": "ASCII",
                "offset": 285781,
                "string": "grow_iop_buffer"
            },
            {
                "encoding": "ASCII",
                "offset": 285797,
                "string": "recm.rt_start != NULL"
            },
            {
                "encoding": "ASCII",
                "offset": 285819,
                "string": "recm.start != NULL"
            },
            {
                "encoding": "ASCII",
                "offset": 285840,
                "string": "error reading input file `%s': %s"
            },
            {
                "encoding": "ASCII",
                "offset": 285876,
                "string": "multicharacter value of `RS' is a gawk extension"
            },
            {
                "encoding": "ASCII",
                "offset": 285925,
                "string": "%s%.*spty"
            },
            {
                "encoding": "ASCII",
                "offset": 285935,
                "string": "pty_vs_pipe"
            },
            {
                "encoding": "ASCII",
                "offset": 285947,
                "string": "full_index"
            },
            {
                "encoding": "ASCII",
                "offset": 285958,
                "string": "IOP_IS_TTY"
            },
            {
                "encoding": "ASCII",
                "offset": 285969,
                "string": "IOP_IS_INTERNAL"
            },
            {
                "encoding": "ASCII",
                "offset": 285985,
                "string": "IOP_NO_FREE"
            },
            {
                "encoding": "ASCII",
                "offset": 285997,
                "string": "IOP_NOFREE_OBJ"
            },
            {
                "encoding": "ASCII",
                "offset": 286012,
                "string": "IOP_AT_EOF"
            },
            {
                "encoding": "ASCII",
                "offset": 286023,
                "string": "IOP_CLOSED"
            },
            {
                "encoding": "ASCII",
                "offset": 286034,
                "string": "IOP_AT_START"
            },
            {
                "encoding": "ASCII",
                "offset": 286112,
                "string": "awkvars.out"
            },
            {
                "encoding": "ASCII",
                "offset": 286124,
                "string": "%.6g"
            },
            {
                "encoding": "ASCII",
                "offset": 286136,
                "string": "compat"
            },
            {
                "encoding": "ASCII",
                "offset": 286143,
                "string": "traditional"
            },
            {
                "encoding": "ASCII",
                "offset": 286155,
                "string": "lint"
            },
            {
                "encoding": "ASCII",
                "offset": 286160,
                "string": "lint-old"
            },
            {
                "encoding": "ASCII",
                "offset": 286169,
                "string": "optimize"
            },
            {
                "encoding": "ASCII",
                "offset": 286178,
                "string": "posix"
            },
            {
                "encoding": "ASCII",
                "offset": 286184,
                "string": "nostalgia"
            },
            {
                "encoding": "ASCII",
                "offset": 286194,
                "string": "gen-po"
            },
            {
                "encoding": "ASCII",
                "offset": 286201,
                "string": "non-decimal-data"
            },
            {
                "encoding": "ASCII",
                "offset": 286218,
                "string": "profile"
            },
            {
                "encoding": "ASCII",
                "offset": 286226,
                "string": "copyleft"
            },
            {
                "encoding": "ASCII",
                "offset": 286235,
                "string": "copyright"
            },
            {
                "encoding": "ASCII",
                "offset": 286245,
                "string": "field-separator"
            },
            {
                "encoding": "ASCII",
                "offset": 286261,
                "string": "file"
            },
            {
                "encoding": "ASCII",
                "offset": 286266,
                "string": "re-interval"
            },
            {
                "encoding": "ASCII",
                "offset": 286278,
                "string": "source"
            },
            {
                "encoding": "ASCII",
                "offset": 286285,
                "string": "dump-variables"
            },
            {
                "encoding": "ASCII",
                "offset": 286300,
                "string": "assign"
            },
            {
                "encoding": "ASCII",
                "offset": 286307,
                "string": "version"
            },
            {
                "encoding": "ASCII",
                "offset": 286315,
                "string": "usage"
            },
            {
                "encoding": "ASCII",
                "offset": 286321,
                "string": "help"
            },
            {
                "encoding": "ASCII",
                "offset": 286326,
                "string": "exec"
            },
            {
                "encoding": "ASCII",
                "offset": 286331,
                "string": "use-lc-numeric"
            },
            {
                "encoding": "ASCII",
                "offset": 286752,
                "string": "TIDYMEM"
            },
            {
                "encoding": "ASCII",
                "offset": 286760,
                "string": "WHINY_USERS"
            },
            {
                "encoding": "ASCII",
                "offset": 286775,
                "string": "/usr/share/locale"
            },
            {
                "encoding": "ASCII",
                "offset": 286793,
                "string": "gawk"
            },
            {
                "encoding": "ASCII",
                "offset": 286798,
                "string": "@(#)"
            },
            {
                "encoding": "ASCII",
                "offset": 286803,
                "string": "+F:f:v:W;m:DO"
            },
            {
                "encoding": "ASCII",
                "offset": 286820,
                "string": "%s: option requires an argument -- %c"
            },
            {
                "encoding": "ASCII",
                "offset": 286860,
                "string": "empty argument to `--source' ignored"
            },
            {
                "encoding": "ASCII",
                "offset": 286897,
                "string": "fatal"
            },
            {
                "encoding": "ASCII",
                "offset": 286904,
                "string": "%s: option `-W %s' unrecognized, ignored"
            },
            {
                "encoding": "ASCII",
                "offset": 286946,
                "string": "awkprof.out"
            },
            {
                "encoding": "ASCII",
                "offset": 286960,
                "string": "running %s setuid root may be a security problem"
            },
            {
                "encoding": "ASCII",
                "offset": 287009,
                "string": "POSIXLY_CORRECT"
            },
            {
                "encoding": "ASCII",
                "offset": 287028,
                "string": "environment variable `POSIXLY_CORRECT' set: turning on `--posix'"
            },
            {
                "encoding": "ASCII",
                "offset": 287096,
                "string": "/usr/src/gawk/gawk-3.1.7/main.c"
            },
            {
                "encoding": "ASCII",
                "offset": 287128,
                "string": "-m option usage: `-m[fr] nnn'"
            },
            {
                "encoding": "ASCII",
                "offset": 287160,
                "string": "`-m[fr]' option irrelevant in gawk"
            },
            {
                "encoding": "ASCII",
                "offset": 287196,
                "string": "`--posix' overrides `--traditional'"
            },
            {
                "encoding": "ASCII",
                "offset": 287232,
                "string": "invalid"
            },
            {
                "encoding": "ASCII",
                "offset": 287240,
                "string": "`--posix'/`--traditional' overrides `--non-decimal-data'"
            },
            {
                "encoding": "ASCII",
                "offset": 287297,
                "string": "out of memory"
            },
            {
                "encoding": "ASCII",
                "offset": 287312,
                "string": "can't set binary mode on stderr (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 287352,
                "string": "can't set binary mode on stdout (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 287392,
                "string": "can't set binary mode on stdin (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 287428,
                "string": "no program text at all!"
            },
            {
                "encoding": "ASCII",
                "offset": 287928,
                "string": "%s: %s: can't allocate %ld bytes of memory (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 287976,
                "string": "*data"
            },
            {
                "encoding": "ASCII",
                "offset": 287982,
                "string": "add_src"
            },
            {
                "encoding": "ASCII",
                "offset": 287992,
                "string": "Usage: %s [POSIX or GNU style options] -f progfile [--] file ..."
            },
            {
                "encoding": "ASCII",
                "offset": 288060,
                "string": "Usage: %s [POSIX or GNU style options] [--] %cprogram%c file ..."
            },
            {
                "encoding": "ASCII",
                "offset": 288128,
                "string": "POSIX options:\t\tGNU long options:"
            },
            {
                "encoding": "ASCII",
                "offset": 288164,
                "string": "\t-f progfile\t\t--file=progfile"
            },
            {
                "encoding": "ASCII",
                "offset": 288196,
                "string": "\t-F fs\t\t\t--field-separator=fs"
            },
            {
                "encoding": "ASCII",
                "offset": 288228,
                "string": "\t-v var=val\t\t--assign=var=val"
            },
            {
                "encoding": "ASCII",
                "offset": 288259,
                "string": "\t-m[fr] val"
            },
            {
                "encoding": "ASCII",
                "offset": 288272,
                "string": "\t-O\t\t\t--optimize"
            },
            {
                "encoding": "ASCII",
                "offset": 288290,
                "string": "\t-W compat\t\t--compat"
            },
            {
                "encoding": "ASCII",
                "offset": 288312,
                "string": "\t-W copyleft\t\t--copyleft"
            },
            {
                "encoding": "ASCII",
                "offset": 288338,
                "string": "\t-W copyright\t\t--copyright"
            },
            {
                "encoding": "ASCII",
                "offset": 288368,
                "string": "\t-W dump-variables[=file]\t--dump-variables[=file]"
            },
            {
                "encoding": "ASCII",
                "offset": 288419,
                "string": "\t-W exec=file\t\t--exec=file"
            },
            {
                "encoding": "ASCII",
                "offset": 288447,
                "string": "\t-W gen-po\t\t--gen-po"
            },
            {
                "encoding": "ASCII",
                "offset": 288469,
                "string": "\t-W help\t\t\t--help"
            },
            {
                "encoding": "ASCII",
                "offset": 288488,
                "string": "\t-W lint[=fatal]\t\t--lint[=fatal]"
            },
            {
                "encoding": "ASCII",
                "offset": 288522,
                "string": "\t-W lint-old\t\t--lint-old"
            },
            {
                "encoding": "ASCII",
                "offset": 288548,
                "string": "\t-W non-decimal-data\t--non-decimal-data"
            },
            {
                "encoding": "ASCII",
                "offset": 288592,
                "string": "\t-W profile[=file]\t--profile[=file]"
            },
            {
                "encoding": "ASCII",
                "offset": 288629,
                "string": "\t-W posix\t\t--posix"
            },
            {
                "encoding": "ASCII",
                "offset": 288652,
                "string": "\t-W re-interval\t\t--re-interval"
            },
            {
                "encoding": "ASCII",
                "offset": 288684,
                "string": "\t-W source=program-text\t--source=program-text"
            },
            {
                "encoding": "ASCII",
                "offset": 288732,
                "string": "\t-W traditional\t\t--traditional"
            },
            {
                "encoding": "ASCII",
                "offset": 288764,
                "string": "\t-W usage\t\t--usage"
            },
            {
                "encoding": "ASCII",
                "offset": 288784,
                "string": "\t-W use-lc-numeric\t--use-lc-numeric"
            },
            {
                "encoding": "ASCII",
                "offset": 288821,
                "string": "\t-W version\t\t--version"
            },
            {
                "encoding": "ASCII",
                "offset": 288849,
                "string": "To report bugs, see node `Bugs' in `gawk.info', which is"
            },
            {
                "encoding": "ASCII",
                "offset": 288906,
                "string": "section `Reporting Problems and Bugs' in the printed version."
            },
            {
                "encoding": "ASCII",
                "offset": 288972,
                "string": "gawk is a pattern scanning and processing language."
            },
            {
                "encoding": "ASCII",
                "offset": 289024,
                "string": "By default it reads standard input and writes standard output."
            },
            {
                "encoding": "ASCII",
                "offset": 289092,
                "string": "Examples:"
            },
            {
                "encoding": "ASCII",
                "offset": 289102,
                "string": "\tgawk '{ sum += $1 }; END { print sum }' file"
            },
            {
                "encoding": "ASCII",
                "offset": 289148,
                "string": "\tgawk -F: '{ print $1 }' /etc/passwd"
            },
            {
                "encoding": "ASCII",
                "offset": 289188,
                "string": "error writing standard output (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 289248,
                "string": "Copyright (C) 1989, 1991-%d Free Software Foundation."
            },
            {
                "encoding": "ASCII",
                "offset": 289303,
                "string": "This program is free software; you can redistribute it and/or modify"
            },
            {
                "encoding": "ASCII",
                "offset": 289372,
                "string": "it under the terms of the GNU General Public License as published by"
            },
            {
                "encoding": "ASCII",
                "offset": 289441,
                "string": "the Free Software Foundation; either version 3 of the License, or"
            },
            {
                "encoding": "ASCII",
                "offset": 289507,
                "string": "(at your option) any later version."
            },
            {
                "encoding": "ASCII",
                "offset": 289568,
                "string": "This program is distributed in the hope that it will be useful,"
            },
            {
                "encoding": "ASCII",
                "offset": 289632,
                "string": "but WITHOUT ANY WARRANTY; without even the implied warranty of"
            },
            {
                "encoding": "ASCII",
                "offset": 289695,
                "string": "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the"
            },
            {
                "encoding": "ASCII",
                "offset": 289757,
                "string": "GNU General Public License for more details."
            },
            {
                "encoding": "ASCII",
                "offset": 289824,
                "string": "You should have received a copy of the GNU General Public License"
            },
            {
                "encoding": "ASCII",
                "offset": 289890,
                "string": "along with this program. If not, see http://www.gnu.org/licenses/."
            },
            {
                "encoding": "ASCII",
                "offset": 289960,
                "string": "-Ft does not set FS to tab in POSIX awk"
            },
            {
                "encoding": "ASCII",
                "offset": 290000,
                "string": "ARGV"
            },
            {
                "encoding": "ASCII",
                "offset": 290005,
                "string": "ARGC"
            },
            {
                "encoding": "ASCII",
                "offset": 290010,
                "string": "ARGIND"
            },
            {
                "encoding": "ASCII",
                "offset": 290017,
                "string": "BINMODE"
            },
            {
                "encoding": "ASCII",
                "offset": 290025,
                "string": "CONVFMT"
            },
            {
                "encoding": "ASCII",
                "offset": 290033,
                "string": "ENVIRON"
            },
            {
                "encoding": "ASCII",
                "offset": 290041,
                "string": "ERRNO"
            },
            {
                "encoding": "ASCII",
                "offset": 290047,
                "string": "FIELDWIDTHS"
            },
            {
                "encoding": "ASCII",
                "offset": 290059,
                "string": "FILENAME"
            },
            {
                "encoding": "ASCII",
                "offset": 290077,
                "string": "IGNORECASE"
            },
            {
                "encoding": "ASCII",
                "offset": 290088,
                "string": "LINT"
            },
            {
                "encoding": "ASCII",
                "offset": 290099,
                "string": "OFMT"
            },
            {
                "encoding": "ASCII",
                "offset": 290114,
                "string": "PROCINFO"
            },
            {
                "encoding": "ASCII",
                "offset": 290123,
                "string": "RLENGTH"
            },
            {
                "encoding": "ASCII",
                "offset": 290134,
                "string": "RSTART"
            },
            {
                "encoding": "ASCII",
                "offset": 290144,
                "string": "SUBSEP"
            },
            {
                "encoding": "ASCII",
                "offset": 290153,
                "string": "TEXTDOMAIN"
            },
            {
                "encoding": "ASCII",
                "offset": 290164,
                "string": "messages"
            },
            {
                "encoding": "ASCII",
                "offset": 291008,
                "string": "AWKPATH"
            },
            {
                "encoding": "ASCII",
                "offset": 291016,
                "string": "pgrpid"
            },
            {
                "encoding": "ASCII",
                "offset": 291023,
                "string": "3.1.7"
            },
            {
                "encoding": "ASCII",
                "offset": 291033,
                "string": "ppid"
            },
            {
                "encoding": "ASCII",
                "offset": 291042,
                "string": "euid"
            },
            {
                "encoding": "ASCII",
                "offset": 291051,
                "string": "egid"
            },
            {
                "encoding": "ASCII",
                "offset": 291056,
                "string": "group%d"
            },
            {
                "encoding": "ASCII",
                "offset": 291064,
                "string": "`%s' is not a variable name, looking for file `%s=%s'"
            },
            {
                "encoding": "ASCII",
                "offset": 291120,
                "string": "%s: `%s' argument to `-v' not in `var=value' form"
            },
            {
                "encoding": "ASCII",
                "offset": 291172,
                "string": "`%s' is not a legal variable name"
            },
            {
                "encoding": "ASCII",
                "offset": 291206,
                "string": "fatal error: internal error"
            },
            {
                "encoding": "ASCII",
                "offset": 291234,
                "string": "floating point exception"
            },
            {
                "encoding": "ASCII",
                "offset": 291260,
                "string": "internal error line %d, file: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 291296,
                "string": "fatal error: internal error: segfault"
            },
            {
                "encoding": "ASCII",
                "offset": 291336,
                "string": "fatal error: internal error: stack overflow"
            },
            {
                "encoding": "ASCII",
                "offset": 291380,
                "string": "awk: bailing out near line 1"
            },
            {
                "encoding": "ASCII",
                "offset": 291418,
                "string": "/dev/null"
            },
            {
                "encoding": "ASCII",
                "offset": 291428,
                "string": "could not find groups: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 291454,
                "string": "groupset"
            },
            {
                "encoding": "ASCII",
                "offset": 291463,
                "string": "init_groupset"
            },
            {
                "encoding": "ASCII",
                "offset": 291488,
                "string": "%s: "
            },
            {
                "encoding": "ASCII",
                "offset": 291493,
                "string": "cmd. line:"
            },
            {
                "encoding": "ASCII",
                "offset": 291504,
                "string": "%d: "
            },
            {
                "encoding": "ASCII",
                "offset": 291509,
                "string": "FILENAME=%s "
            },
            {
                "encoding": "ASCII",
                "offset": 291522,
                "string": "FNR=%ld) "
            },
            {
                "encoding": "ASCII",
                "offset": 291542,
                "string": "warning: "
            },
            {
                "encoding": "ASCII",
                "offset": 291552,
                "string": "error: "
            },
            {
                "encoding": "ASCII",
                "offset": 291560,
                "string": "fatal: "
            },
            {
                "encoding": "ASCII",
                "offset": 291588,
                "string": "%.0f"
            },
            {
                "encoding": "ASCII",
                "offset": 291600,
                "string": "/usr/src/gawk/gawk-3.1.7/node.c"
            },
            {
                "encoding": "ASCII",
                "offset": 291632,
                "string": "s->stptr"
            },
            {
                "encoding": "ASCII",
                "offset": 291644,
                "string": "%s: %s: can't allocate %ld bytes of memory (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 291692,
                "string": "format_val"
            },
            {
                "encoding": "ASCII",
                "offset": 291719,
                "string": "Ar->stptr"
            },
            {
                "encoding": "ASCII",
                "offset": 291729,
                "string": "dupnode"
            },
            {
                "encoding": "ASCII",
                "offset": 291737,
                "string": "r->ahname_str"
            },
            {
                "encoding": "ASCII",
                "offset": 291751,
                "string": "old != NULL"
            },
            {
                "encoding": "ASCII",
                "offset": 291763,
                "string": "backslash at end of string"
            },
            {
                "encoding": "ASCII",
                "offset": 291790,
                "string": "make_str_node"
            },
            {
                "encoding": "ASCII",
                "offset": 291804,
                "string": "nextfree"
            },
            {
                "encoding": "ASCII",
                "offset": 291813,
                "string": "more_nodes"
            },
            {
                "encoding": "ASCII",
                "offset": 291824,
                "string": "old awk does not support the `\\%c' escape sequence"
            },
            {
                "encoding": "ASCII",
                "offset": 291876,
                "string": "escape sequence `\\%c' treated as plain `%c'"
            },
            {
                "encoding": "ASCII",
                "offset": 291920,
                "string": "hex escape \\x%.*s of %d characters probably not interpreted the way you expect"
            },
            {
                "encoding": "ASCII",
                "offset": 292000,
                "string": "POSIX does not allow `\\x' escapes"
            },
            {
                "encoding": "ASCII",
                "offset": 292036,
                "string": "no hex digits in `\\x' escape sequence"
            },
            {
                "encoding": "ASCII",
                "offset": 292600,
                "string": "random: not enough state (%ld bytes); ignored."
            },
            {
                "encoding": "ASCII",
                "offset": 292648,
                "string": "random: state info corrupted; not changed."
            },
            {
                "encoding": "ASCII",
                "offset": 292704,
                "string": "GAWK_NO_DFA"
            },
            {
                "encoding": "ASCII",
                "offset": 292716,
                "string": "()|*+?.^$\\[]"
            },
            {
                "encoding": "ASCII",
                "offset": 292729,
                "string": "/usr/src/gawk/gawk-3.1.7/re.c"
            },
            {
                "encoding": "ASCII",
                "offset": 292760,
                "string": "%s: %s: can't allocate %ld bytes of memory (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 292811,
                "string": "make_regexp"
            },
            {
                "encoding": "ASCII",
                "offset": 292823,
                "string": "rp->pat.fastmap"
            },
            {
                "encoding": "ASCII",
                "offset": 292839,
                "string": "dest"
            },
            {
                "encoding": "ASCII",
                "offset": 292844,
                "string": "%s: /%s/"
            },
            {
                "encoding": "ASCII",
                "offset": 292856,
                "string": "internal error line %d, file: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 293191,
                "string": "t->type == Node_regex"
            },
            {
                "encoding": "ASCII",
                "offset": 293213,
                "string": "*+|?"
            },
            {
                "encoding": "ASCII",
                "offset": 293218,
                "string": "RE_BACKSLASH_ESCAPE_IN_LISTS"
            },
            {
                "encoding": "ASCII",
                "offset": 293247,
                "string": "RE_BK_PLUS_QM"
            },
            {
                "encoding": "ASCII",
                "offset": 293261,
                "string": "RE_CHAR_CLASSES"
            },
            {
                "encoding": "ASCII",
                "offset": 293277,
                "string": "RE_CONTEXT_INDEP_ANCHORS"
            },
            {
                "encoding": "ASCII",
                "offset": 293302,
                "string": "RE_CONTEXT_INDEP_OPS"
            },
            {
                "encoding": "ASCII",
                "offset": 293323,
                "string": "RE_CONTEXT_INVALID_OPS"
            },
            {
                "encoding": "ASCII",
                "offset": 293346,
                "string": "RE_DOT_NEWLINE"
            },
            {
                "encoding": "ASCII",
                "offset": 293361,
                "string": "RE_DOT_NOT_NULL"
            },
            {
                "encoding": "ASCII",
                "offset": 293377,
                "string": "RE_HAT_LISTS_NOT_NEWLINE"
            },
            {
                "encoding": "ASCII",
                "offset": 293402,
                "string": "RE_INTERVALS"
            },
            {
                "encoding": "ASCII",
                "offset": 293415,
                "string": "RE_LIMITED_OPS"
            },
            {
                "encoding": "ASCII",
                "offset": 293430,
                "string": "RE_NEWLINE_ALT"
            },
            {
                "encoding": "ASCII",
                "offset": 293445,
                "string": "RE_NO_BK_BRACES"
            },
            {
                "encoding": "ASCII",
                "offset": 293461,
                "string": "RE_NO_BK_PARENS"
            },
            {
                "encoding": "ASCII",
                "offset": 293477,
                "string": "RE_NO_BK_REFS"
            },
            {
                "encoding": "ASCII",
                "offset": 293491,
                "string": "RE_NO_BK_VBAR"
            },
            {
                "encoding": "ASCII",
                "offset": 293505,
                "string": "RE_NO_EMPTY_RANGES"
            },
            {
                "encoding": "ASCII",
                "offset": 293524,
                "string": "RE_UNMATCHED_RIGHT_PAREN_ORD"
            },
            {
                "encoding": "ASCII",
                "offset": 293553,
                "string": "RE_NO_POSIX_BACKTRACKING"
            },
            {
                "encoding": "ASCII",
                "offset": 293578,
                "string": "RE_NO_GNU_OPS"
            },
            {
                "encoding": "ASCII",
                "offset": 293592,
                "string": "RE_DEBUG"
            },
            {
                "encoding": "ASCII",
                "offset": 293601,
                "string": "RE_INVALID_INTERVAL_ORD"
            },
            {
                "encoding": "ASCII",
                "offset": 293625,
                "string": "RE_ICASE"
            },
            {
                "encoding": "ASCII",
                "offset": 293634,
                "string": "RE_CARET_ANCHORS_HERE"
            },
            {
                "encoding": "ASCII",
                "offset": 293656,
                "string": "RE_CONTEXT_INVALID_DUP"
            },
            {
                "encoding": "ASCII",
                "offset": 293679,
                "string": "RE_NO_SUB"
            },
            {
                "encoding": "ASCII",
                "offset": 293912,
                "string": "RE_SYNTAX_EMACS"
            },
            {
                "encoding": "ASCII",
                "offset": 293952,
                "string": "Success"
            },
            {
                "encoding": "ASCII",
                "offset": 293960,
                "string": "No match"
            },
            {
                "encoding": "ASCII",
                "offset": 293969,
                "string": "Invalid regular expression"
            },
            {
                "encoding": "ASCII",
                "offset": 293996,
                "string": "Invalid collation character"
            },
            {
                "encoding": "ASCII",
                "offset": 294024,
                "string": "Invalid character class name"
            },
            {
                "encoding": "ASCII",
                "offset": 294053,
                "string": "Trailing backslash"
            },
            {
                "encoding": "ASCII",
                "offset": 294072,
                "string": "Invalid back reference"
            },
            {
                "encoding": "ASCII",
                "offset": 294095,
                "string": "Unmatched [ or [^"
            },
            {
                "encoding": "ASCII",
                "offset": 294113,
                "string": "Unmatched ( or \\("
            },
            {
                "encoding": "ASCII",
                "offset": 294131,
                "string": "Unmatched \\{"
            },
            {
                "encoding": "ASCII",
                "offset": 294144,
                "string": "Invalid content of \\{\\}"
            },
            {
                "encoding": "ASCII",
                "offset": 294168,
                "string": "Invalid range end"
            },
            {
                "encoding": "ASCII",
                "offset": 294186,
                "string": "Memory exhausted"
            },
            {
                "encoding": "ASCII",
                "offset": 294203,
                "string": "Invalid preceding regular expression"
            },
            {
                "encoding": "ASCII",
                "offset": 294240,
                "string": "Premature end of regular expression"
            },
            {
                "encoding": "ASCII",
                "offset": 294276,
                "string": "Regular expression too big"
            },
            {
                "encoding": "ASCII",
                "offset": 294303,
                "string": "Unmatched ) or \\)"
            },
            {
                "encoding": "ASCII",
                "offset": 294404,
                "string": "LC_ALL"
            },
            {
                "encoding": "ASCII",
                "offset": 294411,
                "string": "LC_CTYPE"
            },
            {
                "encoding": "ASCII",
                "offset": 294420,
                "string": "LANG"
            },
            {
                "encoding": "ASCII",
                "offset": 294428,
                "string": "/usr/src/gawk/gawk-3.1.7/regcomp.c"
            },
            {
                "encoding": "ASCII",
                "offset": 294464,
                "string": "!IS_EPSILON_NODE (node->token.type)"
            },
            {
                "encoding": "ASCII",
                "offset": 294500,
                "string": "node->next == NULL"
            },
            {
                "encoding": "ASCII",
                "offset": 294519,
                "string": "right > -1"
            },
            {
                "encoding": "ASCII",
                "offset": 294530,
                "string": "left > -1"
            },
            {
                "encoding": "ASCII",
                "offset": 295422,
                "string": "alnum"
            },
            {
                "encoding": "ASCII",
                "offset": 295428,
                "string": "space"
            },
            {
                "encoding": "ASCII",
                "offset": 295586,
                "string": "upper"
            },
            {
                "encoding": "ASCII",
                "offset": 295592,
                "string": "lower"
            },
            {
                "encoding": "ASCII",
                "offset": 295598,
                "string": "cntrl"
            },
            {
                "encoding": "ASCII",
                "offset": 295604,
                "string": "alpha"
            },
            {
                "encoding": "ASCII",
                "offset": 295610,
                "string": "digit"
            },
            {
                "encoding": "ASCII",
                "offset": 295616,
                "string": "print"
            },
            {
                "encoding": "ASCII",
                "offset": 295622,
                "string": "blank"
            },
            {
                "encoding": "ASCII",
                "offset": 295628,
                "string": "graph"
            },
            {
                "encoding": "ASCII",
                "offset": 295634,
                "string": "punct"
            },
            {
                "encoding": "ASCII",
                "offset": 295640,
                "string": "xdigit"
            },
            {
                "encoding": "ASCII",
                "offset": 295648,
                "string": "/usr/src/gawk/gawk-3.1.7/regexec.c"
            },
            {
                "encoding": "ASCII",
                "offset": 295683,
                "string": "pmatch[0].rm_so == start"
            },
            {
                "encoding": "ASCII",
                "offset": 295708,
                "string": "regs_allocated == REGS_FIXED"
            },
            {
                "encoding": "ASCII",
                "offset": 295737,
                "string": "regs->num_regs >= nregs"
            },
            {
                "encoding": "ASCII",
                "offset": 295764,
                "string": "mctx.input.offsets_needed == 0"
            },
            {
                "encoding": "ASCII",
                "offset": 295816,
                "string": "err == REG_ESPACE"
            },
            {
                "encoding": "ASCII",
                "offset": 295834,
                "string": "num >= 0"
            },
            {
                "encoding": "ASCII",
                "offset": 295968,
                "string": "@(#)GNU Awk 3.1.7"
            },
            {
                "encoding": "ASCII",
                "offset": 296002,
                "string": "POSIX"
            },
            {
                "encoding": "ASCII",
                "offset": 296008,
                "string": "Node_illegal"
            },
            {
                "encoding": "ASCII",
                "offset": 296021,
                "string": "Node_times"
            },
            {
                "encoding": "ASCII",
                "offset": 296032,
                "string": "Node_quotient"
            },
            {
                "encoding": "ASCII",
                "offset": 296046,
                "string": "Node_mod"
            },
            {
                "encoding": "ASCII",
                "offset": 296055,
                "string": "Node_plus"
            },
            {
                "encoding": "ASCII",
                "offset": 296065,
                "string": "Node_minus"
            },
            {
                "encoding": "ASCII",
                "offset": 296076,
                "string": "Node_cond_pair"
            },
            {
                "encoding": "ASCII",
                "offset": 296091,
                "string": "Node_subscript"
            },
            {
                "encoding": "ASCII",
                "offset": 296106,
                "string": "Node_concat"
            },
            {
                "encoding": "ASCII",
                "offset": 296118,
                "string": "Node_exp"
            },
            {
                "encoding": "ASCII",
                "offset": 296127,
                "string": "Node_preincrement"
            },
            {
                "encoding": "ASCII",
                "offset": 296145,
                "string": "Node_predecrement"
            },
            {
                "encoding": "ASCII",
                "offset": 296163,
                "string": "Node_postincrement"
            },
            {
                "encoding": "ASCII",
                "offset": 296182,
                "string": "Node_postdecrement"
            },
            {
                "encoding": "ASCII",
                "offset": 296201,
                "string": "Node_unary_minus"
            },
            {
                "encoding": "ASCII",
                "offset": 296218,
                "string": "Node_field_spec"
            },
            {
                "encoding": "ASCII",
                "offset": 296234,
                "string": "Node_assign"
            },
            {
                "encoding": "ASCII",
                "offset": 296246,
                "string": "Node_assign_times"
            },
            {
                "encoding": "ASCII",
                "offset": 296264,
                "string": "Node_assign_quotient"
            },
            {
                "encoding": "ASCII",
                "offset": 296285,
                "string": "Node_assign_mod"
            },
            {
                "encoding": "ASCII",
                "offset": 296301,
                "string": "Node_assign_plus"
            },
            {
                "encoding": "ASCII",
                "offset": 296318,
                "string": "Node_assign_minus"
            },
            {
                "encoding": "ASCII",
                "offset": 296336,
                "string": "Node_assign_exp"
            },
            {
                "encoding": "ASCII",
                "offset": 296352,
                "string": "Node_assign_concat"
            },
            {
                "encoding": "ASCII",
                "offset": 296371,
                "string": "Node_and"
            },
            {
                "encoding": "ASCII",
                "offset": 296380,
                "string": "Node_or"
            },
            {
                "encoding": "ASCII",
                "offset": 296388,
                "string": "Node_equal"
            },
            {
                "encoding": "ASCII",
                "offset": 296399,
                "string": "Node_notequal"
            },
            {
                "encoding": "ASCII",
                "offset": 296413,
                "string": "Node_less"
            },
            {
                "encoding": "ASCII",
                "offset": 296423,
                "string": "Node_greater"
            },
            {
                "encoding": "ASCII",
                "offset": 296436,
                "string": "Node_leq"
            },
            {
                "encoding": "ASCII",
                "offset": 296445,
                "string": "Node_geq"
            },
            {
                "encoding": "ASCII",
                "offset": 296454,
                "string": "Node_match"
            },
            {
                "encoding": "ASCII",
                "offset": 296465,
                "string": "Node_nomatch"
            },
            {
                "encoding": "ASCII",
                "offset": 296478,
                "string": "Node_not"
            },
            {
                "encoding": "ASCII",
                "offset": 296487,
                "string": "Node_rule_list"
            },
            {
                "encoding": "ASCII",
                "offset": 296502,
                "string": "Node_rule_node"
            },
            {
                "encoding": "ASCII",
                "offset": 296517,
                "string": "Node_statement_list"
            },
            {
                "encoding": "ASCII",
                "offset": 296537,
                "string": "Node_switch_body"
            },
            {
                "encoding": "ASCII",
                "offset": 296554,
                "string": "Node_case_list"
            },
            {
                "encoding": "ASCII",
                "offset": 296569,
                "string": "Node_if_branches"
            },
            {
                "encoding": "ASCII",
                "offset": 296586,
                "string": "Node_expression_list"
            },
            {
                "encoding": "ASCII",
                "offset": 296607,
                "string": "Node_param_list"
            },
            {
                "encoding": "ASCII",
                "offset": 296623,
                "string": "Node_K_if"
            },
            {
                "encoding": "ASCII",
                "offset": 296633,
                "string": "Node_K_switch"
            },
            {
                "encoding": "ASCII",
                "offset": 296647,
                "string": "Node_K_case"
            },
            {
                "encoding": "ASCII",
                "offset": 296659,
                "string": "Node_K_default"
            },
            {
                "encoding": "ASCII",
                "offset": 296674,
                "string": "Node_K_while"
            },
            {
                "encoding": "ASCII",
                "offset": 296687,
                "string": "Node_K_for"
            },
            {
                "encoding": "ASCII",
                "offset": 296698,
                "string": "Node_K_arrayfor"
            },
            {
                "encoding": "ASCII",
                "offset": 296714,
                "string": "Node_K_break"
            },
            {
                "encoding": "ASCII",
                "offset": 296727,
                "string": "Node_K_continue"
            },
            {
                "encoding": "ASCII",
                "offset": 296743,
                "string": "Node_K_print"
            },
            {
                "encoding": "ASCII",
                "offset": 296756,
                "string": "Node_K_print_rec"
            },
            {
                "encoding": "ASCII",
                "offset": 296773,
                "string": "Node_K_printf"
            },
            {
                "encoding": "ASCII",
                "offset": 296787,
                "string": "Node_K_next"
            },
            {
                "encoding": "ASCII",
                "offset": 296799,
                "string": "Node_K_exit"
            },
            {
                "encoding": "ASCII",
                "offset": 296811,
                "string": "Node_K_do"
            },
            {
                "encoding": "ASCII",
                "offset": 296821,
                "string": "Node_K_return"
            },
            {
                "encoding": "ASCII",
                "offset": 296835,
                "string": "Node_K_delete"
            },
            {
                "encoding": "ASCII",
                "offset": 296849,
                "string": "Node_K_delete_loop"
            },
            {
                "encoding": "ASCII",
                "offset": 296868,
                "string": "Node_K_getline"
            },
            {
                "encoding": "ASCII",
                "offset": 296883,
                "string": "Node_K_function"
            },
            {
                "encoding": "ASCII",
                "offset": 296899,
                "string": "Node_K_nextfile"
            },
            {
                "encoding": "ASCII",
                "offset": 296915,
                "string": "Node_redirect_output"
            },
            {
                "encoding": "ASCII",
                "offset": 296936,
                "string": "Node_redirect_append"
            },
            {
                "encoding": "ASCII",
                "offset": 296957,
                "string": "Node_redirect_pipe"
            },
            {
                "encoding": "ASCII",
                "offset": 296976,
                "string": "Node_redirect_pipein"
            },
            {
                "encoding": "ASCII",
                "offset": 296997,
                "string": "Node_redirect_input"
            },
            {
                "encoding": "ASCII",
                "offset": 297017,
                "string": "Node_redirect_twoway"
            },
            {
                "encoding": "ASCII",
                "offset": 297038,
                "string": "Node_var_new"
            },
            {
                "encoding": "ASCII",
                "offset": 297051,
                "string": "Node_var"
            },
            {
                "encoding": "ASCII",
                "offset": 297060,
                "string": "Node_var_array"
            },
            {
                "encoding": "ASCII",
                "offset": 297075,
                "string": "Node_val"
            },
            {
                "encoding": "ASCII",
                "offset": 297084,
                "string": "Node_builtin"
            },
            {
                "encoding": "ASCII",
                "offset": 297097,
                "string": "Node_line_range"
            },
            {
                "encoding": "ASCII",
                "offset": 297113,
                "string": "Node_in_array"
            },
            {
                "encoding": "ASCII",
                "offset": 297127,
                "string": "Node_func"
            },
            {
                "encoding": "ASCII",
                "offset": 297137,
                "string": "Node_func_call"
            },
            {
                "encoding": "ASCII",
                "offset": 297152,
                "string": "Node_cond_exp"
            },
            {
                "encoding": "ASCII",
                "offset": 297166,
                "string": "Node_regex"
            },
            {
                "encoding": "ASCII",
                "offset": 297177,
                "string": "Node_dynregex"
            },
            {
                "encoding": "ASCII",
                "offset": 297191,
                "string": "Node_hashnode"
            },
            {
                "encoding": "ASCII",
                "offset": 297205,
                "string": "Node_ahash"
            },
            {
                "encoding": "ASCII",
                "offset": 297216,
                "string": "Node_array_ref"
            },
            {
                "encoding": "ASCII",
                "offset": 297231,
                "string": "Node_BINMODE"
            },
            {
                "encoding": "ASCII",
                "offset": 297244,
                "string": "Node_CONVFMT"
            },
            {
                "encoding": "ASCII",
                "offset": 297257,
                "string": "Node_FIELDWIDTHS"
            },
            {
                "encoding": "ASCII",
                "offset": 297274,
                "string": "Node_FNR"
            },
            {
                "encoding": "ASCII",
                "offset": 297283,
                "string": "Node_FS"
            },
            {
                "encoding": "ASCII",
                "offset": 297291,
                "string": "Node_IGNORECASE"
            },
            {
                "encoding": "ASCII",
                "offset": 297307,
                "string": "Node_LINT"
            },
            {
                "encoding": "ASCII",
                "offset": 297317,
                "string": "Node_NF"
            },
            {
                "encoding": "ASCII",
                "offset": 297325,
                "string": "Node_NR"
            },
            {
                "encoding": "ASCII",
                "offset": 297333,
                "string": "Node_OFMT"
            },
            {
                "encoding": "ASCII",
                "offset": 297343,
                "string": "Node_OFS"
            },
            {
                "encoding": "ASCII",
                "offset": 297352,
                "string": "Node_ORS"
            },
            {
                "encoding": "ASCII",
                "offset": 297361,
                "string": "Node_RS"
            },
            {
                "encoding": "ASCII",
                "offset": 297369,
                "string": "Node_SUBSEP"
            },
            {
                "encoding": "ASCII",
                "offset": 297381,
                "string": "Node_TEXTDOMAIN"
            },
            {
                "encoding": "ASCII",
                "offset": 297400,
                "string": "Node_final --- this should never appear"
            },
            {
                "encoding": "ASCII",
                "offset": 297848,
                "string": "unknown nodetype %d"
            },
            {
                "encoding": "ASCII",
                "offset": 297868,
                "string": "MALLOC"
            },
            {
                "encoding": "ASCII",
                "offset": 297875,
                "string": "TEMP"
            },
            {
                "encoding": "ASCII",
                "offset": 297880,
                "string": "PERM"
            },
            {
                "encoding": "ASCII",
                "offset": 297885,
                "string": "STRING"
            },
            {
                "encoding": "ASCII",
                "offset": 297892,
                "string": "STRCUR"
            },
            {
                "encoding": "ASCII",
                "offset": 297899,
                "string": "NUMCUR"
            },
            {
                "encoding": "ASCII",
                "offset": 297906,
                "string": "NUMBER"
            },
            {
                "encoding": "ASCII",
                "offset": 297913,
                "string": "MAYBE_NUM"
            },
            {
                "encoding": "ASCII",
                "offset": 297923,
                "string": "ARRAYMAXED"
            },
            {
                "encoding": "ASCII",
                "offset": 297934,
                "string": "FUNC"
            },
            {
                "encoding": "ASCII",
                "offset": 297939,
                "string": "FIELD"
            },
            {
                "encoding": "ASCII",
                "offset": 297945,
                "string": "INTLSTR"
            },
            {
                "encoding": "ASCII",
                "offset": 298088,
                "string": "/usr/src/gawk/gawk-3.1.7/eval.c"
            },
            {
                "encoding": "ASCII",
                "offset": 298120,
                "string": "buffer overflow in genflags2str"
            },
            {
                "encoding": "ASCII",
                "offset": 298152,
                "string": "statement has no effect"
            },
            {
                "encoding": "ASCII",
                "offset": 298176,
                "string": "`continue' outside a loop is not allowed"
            },
            {
                "encoding": "ASCII",
                "offset": 298220,
                "string": "`break' outside a loop is not allowed"
            },
            {
                "encoding": "ASCII",
                "offset": 298260,
                "string": "`nextfile' cannot be called from an END rule"
            },
            {
                "encoding": "ASCII",
                "offset": 298305,
                "string": "list[j-1] == t"
            },
            {
                "encoding": "ASCII",
                "offset": 298320,
                "string": "internal error line %d, file: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 298356,
                "string": "for loop: array `%s' changed size from %ld to %ld during loop execution"
            },
            {
                "encoding": "ASCII",
                "offset": 298428,
                "string": "`break' outside a loop is not portable"
            },
            {
                "encoding": "ASCII",
                "offset": 298468,
                "string": "`continue' outside a loop is not portable"
            },
            {
                "encoding": "ASCII",
                "offset": 298512,
                "string": "`next' cannot be called from a BEGIN rule"
            },
            {
                "encoding": "ASCII",
                "offset": 298556,
                "string": "`next' cannot be called from an END rule"
            },
            {
                "encoding": "ASCII",
                "offset": 298600,
                "string": "`nextfile' cannot be called from a BEGIN rule"
            },
            {
                "encoding": "ASCII",
                "offset": 298646,
                "string": "list"
            },
            {
                "encoding": "ASCII",
                "offset": 298652,
                "string": "%s: %s: can't allocate %ld bytes of memory (%s)"
            },
            {
                "encoding": "ASCII",
                "offset": 298700,
                "string": "for_loop"
            },
            {
                "encoding": "ASCII",
                "offset": 298828,
                "string": "illegal type (%s) in tree_eval"
            },
            {
                "encoding": "ASCII",
                "offset": 298860,
                "string": "reference to uninitialized variable `%s'"
            },
            {
                "encoding": "ASCII",
                "offset": 298904,
                "string": "reference to uninitialized argument `%s'"
            },
            {
                "encoding": "ASCII",
                "offset": 298948,
                "string": "attempt to use array `%s' in a scalar context"
            },
            {
                "encoding": "ASCII",
                "offset": 298996,
                "string": "assignment used in conditional context"
            },
            {
                "encoding": "ASCII",
                "offset": 299036,
                "string": "concatenation: side effects in one expression have changed the length of another!"
            },
            {
                "encoding": "ASCII",
                "offset": 299120,
                "string": "can't use function name `%s' as variable or array"
            },
            {
                "encoding": "ASCII",
                "offset": 299170,
                "string": "division by zero attempted"
            },
            {
                "encoding": "ASCII",
                "offset": 299200,
                "string": "division by zero attempted in `%%'"
            },
            {
                "encoding": "ASCII",
                "offset": 299235,
                "string": "treelist"
            },
            {
                "encoding": "ASCII",
                "offset": 299244,
                "string": "tree_eval"
            },
            {
                "encoding": "ASCII",
                "offset": 299254,
                "string": "strlist"
            },
            {
                "encoding": "ASCII",
                "offset": 299262,
                "string": "nval"
            },
            {
                "encoding": "ASCII",
                "offset": 299267,
                "string": "interpret"
            },
            {
                "encoding": "ASCII",
                "offset": 299281,
                "string": "l->stptr"
            },
            {
                "encoding": "ASCII",
                "offset": 299728,
                "string": "division by zero attempted in `%%='"
            },
            {
                "encoding": "ASCII",
                "offset": 299764,
                "string": "division by zero attempted in `/='"
            },
            {
                "encoding": "ASCII",
                "offset": 299852,
                "string": "nloops_active > 0"
            },
            {
                "encoding": "ASCII",
                "offset": 299870,
                "string": "loop_stack"
            },
            {
                "encoding": "ASCII",
                "offset": 299881,
                "string": "push_forloop"
            },
            {
                "encoding": "ASCII",
                "offset": 299894,
                "string": "curfcall >= 0"
            },
            {
                "encoding": "ASCII",
                "offset": 299908,
                "string": "function `%s' called with more arguments than declared"
            },
            {
                "encoding": "ASCII",
                "offset": 299963,
                "string": "fcalls[curfcall].stack"
            },
            {
                "encoding": "ASCII",
                "offset": 299986,
                "string": "push_args"
            },
            {
                "encoding": "ASCII",
                "offset": 299996,
                "string": "fcalls"
            },
            {
                "encoding": "ASCII",
                "offset": 300003,
                "string": "function `%s' not defined"
            },
            {
                "encoding": "ASCII",
                "offset": 300030,
                "string": "\t# Function Call Stack:"
            },
            {
                "encoding": "ASCII",
                "offset": 300056,
                "string": "\t# %3d. %s"
            },
            {
                "encoding": "ASCII",
                "offset": 300068,
                "string": "\t# -- main --"
            },
            {
                "encoding": "ASCII",
                "offset": 300083,
                "string": "type = %s"
            },
            {
                "encoding": "ASCII",
                "offset": 300096,
                "string": "reference to uninitialized field `$%d'"
            },
            {
                "encoding": "ASCII",
                "offset": 300136,
                "string": "assignment is not allowed to result of builtin function"
            },
            {
                "encoding": "ASCII",
                "offset": 300192,
                "string": "attempt to field reference from non-numeric value"
            },
            {
                "encoding": "ASCII",
                "offset": 300244,
                "string": "attempt to reference from null string"
            },
            {
                "encoding": "ASCII",
                "offset": 300282,
                "string": "attempt to access field %d"
            },
            {
                "encoding": "ASCII",
                "offset": 300684,
                "string": "`IGNORECASE' is a gawk extension"
            },
            {
                "encoding": "ASCII",
                "offset": 300720,
                "string": "BINMODE value `%s' is invalid, treated as 3"
            },
            {
                "encoding": "ASCII",
                "offset": 300764,
                "string": "`BINMODE' is a gawk extension"
            },
            {
                "encoding": "ASCII",
                "offset": 300794,
                "string": "efgEG"
            },
            {
                "encoding": "ASCII",
                "offset": 300800,
                "string": " +-#'"
            },
            {
                "encoding": "ASCII",
                "offset": 300806,
                "string": "fmt_list"
            },
            {
                "encoding": "ASCII",
                "offset": 300815,
                "string": "fmt_index"
            },
            {
                "encoding": "ASCII",
                "offset": 300828,
                "string": "bad `%sFMT' specification `%s'"
            },
            {
                "encoding": "ASCII",
                "offset": 300859,
                "string": "CONV"
            },
            {
                "encoding": "ASCII",
                "offset": 300867,
                "string": "invalid"
            },
            {
                "encoding": "ASCII",
                "offset": 300876,
                "string": "turning off `--lint' due to assignment to `LINT'"
            },
            {
                "encoding": "ASCII",
                "offset": 300925,
                "string": "fatal"
            },
            {
                "encoding": "ASCII",
                "offset": 300964,
                "string": "could not open `%s' for writing: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 301000,
                "string": "sending profile to standard error"
            },
            {
                "encoding": "ASCII",
                "offset": 301036,
                "string": "/usr/src/gawk/gawk-3.1.7/profile.c"
            },
            {
                "encoding": "ASCII",
                "offset": 301071,
                "string": "file != NULL"
            },
            {
                "encoding": "ASCII",
                "offset": 301084,
                "string": "indent_level >= 0"
            },
            {
                "encoding": "ASCII",
                "offset": 301102,
                "string": "case "
            },
            {
                "encoding": "ASCII",
                "offset": 301113,
                "string": "%6ld  "
            },
            {
                "encoding": "ASCII",
                "offset": 301120,
                "string": "for ("
            },
            {
                "encoding": "ASCII",
                "offset": 301137,
                "string": " in "
            },
            {
                "encoding": "ASCII",
                "offset": 301145,
                "string": "break"
            },
            {
                "encoding": "ASCII",
                "offset": 301152,
                "string": "continue"
            },
            {
                "encoding": "ASCII",
                "offset": 301162,
                "string": "while ("
            },
            {
                "encoding": "ASCII",
                "offset": 301170,
                "string": "return"
            },
            {
                "encoding": "ASCII",
                "offset": 301179,
                "string": "print"
            },
            {
                "encoding": "ASCII",
                "offset": 301185,
                "string": "printf"
            },
            {
                "encoding": "ASCII",
                "offset": 301192,
                "string": "next"
            },
            {
                "encoding": "ASCII",
                "offset": 301198,
                "string": "if ("
            },
            {
                "encoding": "ASCII",
                "offset": 301207,
                "string": "} else {"
            },
            {
                "encoding": "ASCII",
                "offset": 301217,
                "string": "exit"
            },
            {
                "encoding": "ASCII",
                "offset": 301222,
                "string": "do {"
            },
            {
                "encoding": "ASCII",
                "offset": 301228,
                "string": "} while ("
            },
            {
                "encoding": "ASCII",
                "offset": 301241,
                "string": "switch ("
            },
            {
                "encoding": "ASCII",
                "offset": 301250,
                "string": "default:"
            },
            {
                "encoding": "ASCII",
                "offset": 301260,
                "string": "nextfile"
            },
            {
                "encoding": "ASCII",
                "offset": 301274,
                "string": " # %ld"
            },
            {
                "encoding": "ASCII",
                "offset": 301407,
                "string": " && "
            },
            {
                "encoding": "ASCII",
                "offset": 301412,
                "string": " || "
            },
            {
                "encoding": "ASCII",
                "offset": 301420,
                "string": " in %s) { %s %s'"
            },
            {
                "encoding": "ASCII",
                "offset": 301440,
                "string": "# treated internally as `delete'"
            },
            {
                "encoding": "ASCII",
                "offset": 301473,
                "string": "delete %s["
            },
            {
                "encoding": "ASCII",
                "offset": 301492,
                "string": "internal error: %s with null vname"
            },
            {
                "encoding": "ASCII",
                "offset": 301540,
                "string": "illegal type (%s) in tree_eval"
            },
            {
                "encoding": "ASCII",
                "offset": 301575,
                "string": " %% "
            },
            {
                "encoding": "ASCII",
                "offset": 301588,
                "string": " >= "
            },
            {
                "encoding": "ASCII",
                "offset": 301593,
                "string": " <= "
            },
            {
                "encoding": "ASCII",
                "offset": 301606,
                "string": " != "
            },
            {
                "encoding": "ASCII",
                "offset": 301611,
                "string": " == "
            },
            {
                "encoding": "ASCII",
                "offset": 302138,
                "string": " ^= "
            },
            {
                "encoding": "ASCII",
                "offset": 302143,
                "string": " -= "
            },
            {
                "encoding": "ASCII",
                "offset": 302148,
                "string": " += "
            },
            {
                "encoding": "ASCII",
                "offset": 302153,
                "string": " %%= "
            },
            {
                "encoding": "ASCII",
                "offset": 302159,
                "string": " /= "
            },
            {
                "encoding": "ASCII",
                "offset": 302164,
                "string": " *= "
            },
            {
                "encoding": "ASCII",
                "offset": 302172,
                "string": "internal error line %d, file: %s"
            },
            {
                "encoding": "ASCII",
                "offset": 302240,
                "string": "assignment is not allowed to result of builtin function"
            },
            {
                "encoding": "ASCII",
                "offset": 302296,
                "string": "attempt to use array `%s' in a scalar context"
            },
            {
                "encoding": "ASCII",
                "offset": 302348,
                "string": " %s "
            },
            {
                "encoding": "ASCII",
                "offset": 302392,
                "string": "pp_list: got %s"
            },
            {
                "encoding": "ASCII",
                "offset": 302412,
                "string": "tree->type == Node_expression_list"
            },
            {
                "encoding": "ASCII",
                "offset": 302454,
                "string": "delete %s"
            },
            {
                "encoding": "ASCII",
                "offset": 302466,
                "string": " in %s"
            },
            {
                "encoding": "ASCII",
                "offset": 302473,
                "string": "getline"
            },
            {
                "encoding": "ASCII",
                "offset": 302488,
                "string": "# this is a dynamically loaded extension function"
            },
            {
                "encoding": "ASCII",
                "offset": 302538,
                "string": "\t# gawk profile, created %s"
            },
            {
                "encoding": "ASCII",
                "offset": 302567,
                "string": "\t# BEGIN block(s)"
            },
            {
                "encoding": "ASCII",
                "offset": 302587,
                "string": "\tBEGIN {"
            },
            {
                "encoding": "ASCII",
                "offset": 302601,
                "string": "\t# Rule(s)"
            },
            {
                "encoding": "ASCII",
                "offset": 302614,
                "string": "\t# END block(s)"
            },
            {
                "encoding": "ASCII",
                "offset": 302632,
                "string": "\tEND {"
            },
            {
                "encoding": "ASCII",
                "offset": 302640,
                "string": "function %.*s("
            },
            {
                "encoding": "ASCII",
                "offset": 302665,
                "string": "\t# Functions, listed alphabetically"
            },
            {
                "encoding": "ASCII",
                "offset": 302722,
                "string": "\\%03o"
            },
            {
                "encoding": "ASCII",
                "offset": 302728,
                "string": "unexpected type %s in prec_level"
            },
            {
                "encoding": "ASCII",
                "offset": 303564,
                "string": "SUBSEP"
            },
            {
                "encoding": "ASCII",
                "offset": 303571,
                "string": "BINMODE"
            },
            {
                "encoding": "ASCII",
                "offset": 303579,
                "string": "CONVFMT"
            },
            {
                "encoding": "ASCII",
                "offset": 303587,
                "string": "FIELDWIDTHS"
            },
            {
                "encoding": "ASCII",
                "offset": 303606,
                "string": "IGNORECASE"
            },
            {
                "encoding": "ASCII",
                "offset": 303617,
                "string": "LINT"
            },
            {
                "encoding": "ASCII",
                "offset": 303628,
                "string": "OFMT"
            },
            {
                "encoding": "ASCII",
                "offset": 303644,
                "string": "TEXTDOMAIN"
            },
            {
                "encoding": "ASCII",
                "offset": 303656,
                "string": "Unknown node type %s in pp_var"
            },
            {
                "encoding": "ASCII",
                "offset": 303755,
                "string": "O<unknown module>: "
            },
            {
                "encoding": "ASCII",
                "offset": 303780,
                "string": "Cygwin runtime failure: "
            },
            {
                "encoding": "ASCII",
                "offset": 303820,
                "string": "  VirtualQuery failed for %d bytes at address %p"
            },
            {
                "encoding": "ASCII",
                "offset": 303872,
                "string": "  Unknown pseudo relocation bit size %d."
            },
            {
                "encoding": "ASCII",
                "offset": 303916,
                "string": "  Unknown pseudo relocation protocol version %d."
            },
            {
                "encoding": "ASCII",
                "offset": 305786,
                "string": "__printf__"
            },
            {
                "encoding": "ASCII",
                "offset": 305802,
                "string": "libintl_bindtextdomain"
            },
            {
                "encoding": "ASCII",
                "offset": 305830,
                "string": "libintl_dcgettext"
            },
            {
                "encoding": "ASCII",
                "offset": 305850,
                "string": "libintl_dcngettext"
            },
            {
                "encoding": "ASCII",
                "offset": 305874,
                "string": "libintl_dgettext"
            },
            {
                "encoding": "ASCII",
                "offset": 305894,
                "string": "libintl_fprintf"
            },
            {
                "encoding": "ASCII",
                "offset": 305914,
                "string": "libintl_gettext"
            },
            {
                "encoding": "ASCII",
                "offset": 305934,
                "string": "libintl_snprintf"
            },
            {
                "encoding": "ASCII",
                "offset": 305954,
                "string": "libintl_sprintf"
            },
            {
                "encoding": "ASCII",
                "offset": 305974,
                "string": "libintl_textdomain"
            },
            {
                "encoding": "ASCII",
                "offset": 305998,
                "string": "libintl_vfprintf"
            },
            {
                "encoding": "ASCII",
                "offset": 306018,
                "string": "__assert"
            },
            {
                "encoding": "ASCII",
                "offset": 306030,
                "string": "__errno"
            },
            {
                "encoding": "ASCII",
                "offset": 306040,
                "string": "__main"
            },
            {
                "encoding": "ASCII",
                "offset": 306050,
                "string": "__mb_cur_max"
            },
            {
                "encoding": "ASCII",
                "offset": 306066,
                "string": "_ctype_"
            },
            {
                "encoding": "ASCII",
                "offset": 306076,
                "string": "_exit"
            },
            {
                "encoding": "ASCII",
                "offset": 306084,
                "string": "abort"
            },
            {
                "encoding": "ASCII",
                "offset": 306092,
                "string": "accept"
            },
            {
                "encoding": "ASCII",
                "offset": 306102,
                "string": "access"
            },
            {
                "encoding": "ASCII",
                "offset": 306112,
                "string": "atan2"
            },
            {
                "encoding": "ASCII",
                "offset": 306120,
                "string": "atof"
            },
            {
                "encoding": "ASCII",
                "offset": 306128,
                "string": "atoi"
            },
            {
                "encoding": "ASCII",
                "offset": 306136,
                "string": "bind"
            },
            {
                "encoding": "ASCII",
                "offset": 306144,
                "string": "calloc"
            },
            {
                "encoding": "ASCII",
                "offset": 306154,
                "string": "ceil"
            },
            {
                "encoding": "ASCII",
                "offset": 306162,
                "string": "close"
            },
            {
                "encoding": "ASCII",
                "offset": 306170,
                "string": "connect"
            },
            {
                "encoding": "ASCII",
                "offset": 306186,
                "string": "ctime"
            },
            {
                "encoding": "ASCII",
                "offset": 306194,
                "string": "cygwin_conv_to_posix_path"
            },
            {
                "encoding": "ASCII",
                "offset": 306222,
                "string": "cygwin_internal"
            },
            {
                "encoding": "ASCII",
                "offset": 306240,
                "string": "dlerror"
            },
            {
                "encoding": "ASCII",
                "offset": 306250,
                "string": "dll_crt0__FP11per_process"
            },
            {
                "encoding": "ASCII",
                "offset": 306278,
                "string": "dlopen"
            },
            {
                "encoding": "ASCII",
                "offset": 306288,
                "string": "dlsym"
            },
            {
                "encoding": "ASCII",
                "offset": 306302,
                "string": "execl"
            },
            {
                "encoding": "ASCII",
                "offset": 306310,
                "string": "exit"
            },
            {
                "encoding": "ASCII",
                "offset": 306324,
                "string": "fclose"
            },
            {
                "encoding": "ASCII",
                "offset": 306334,
                "string": "fcntl"
            },
            {
                "encoding": "ASCII",
                "offset": 306342,
                "string": "fdopen"
            },
            {
                "encoding": "ASCII",
                "offset": 306352,
                "string": "fflush"
            },
            {
                "encoding": "ASCII",
                "offset": 306362,
                "string": "fgets"
            },
            {
                "encoding": "ASCII",
                "offset": 306370,
                "string": "fileno"
            },
            {
                "encoding": "ASCII",
                "offset": 306380,
                "string": "floor"
            },
            {
                "encoding": "ASCII",
                "offset": 306388,
                "string": "fmod"
            },
            {
                "encoding": "ASCII",
                "offset": 306396,
                "string": "fopen"
            },
            {
                "encoding": "ASCII",
                "offset": 306404,
                "string": "fork"
            },
            {
                "encoding": "ASCII",
                "offset": 306412,
                "string": "fprintf"
            },
            {
                "encoding": "ASCII",
                "offset": 306422,
                "string": "fputs"
            },
            {
                "encoding": "ASCII",
                "offset": 306430,
                "string": "free"
            },
            {
                "encoding": "ASCII",
                "offset": 306438,
                "string": "fstat"
            },
            {
                "encoding": "ASCII",
                "offset": 306446,
                "string": "fwrite"
            },
            {
                "encoding": "ASCII",
                "offset": 306456,
                "string": "getegid"
            },
            {
                "encoding": "ASCII",
                "offset": 306466,
                "string": "getenv"
            },
            {
                "encoding": "ASCII",
                "offset": 306476,
                "string": "geteuid"
            },
            {
                "encoding": "ASCII",
                "offset": 306486,
                "string": "getgid"
            },
            {
                "encoding": "ASCII",
                "offset": 306496,
                "string": "getgroups"
            },
            {
                "encoding": "ASCII",
                "offset": 306508,
                "string": "gethostbyname"
            },
            {
                "encoding": "ASCII",
                "offset": 306524,
                "string": "getpgrp"
            },
            {
                "encoding": "ASCII",
                "offset": 306534,
                "string": "getpid"
            },
            {
                "encoding": "ASCII",
                "offset": 306544,
                "string": "getppid"
            },
            {
                "encoding": "ASCII",
                "offset": 306554,
                "string": "getservbyname"
            },
            {
                "encoding": "ASCII",
                "offset": 306570,
                "string": "getuid"
            },
            {
                "encoding": "ASCII",
                "offset": 306580,
                "string": "gmtime"
            },
            {
                "encoding": "ASCII",
                "offset": 306590,
                "string": "grantpt"
            },
            {
                "encoding": "ASCII",
                "offset": 306600,
                "string": "isatty"
            },
            {
                "encoding": "ASCII",
                "offset": 306610,
                "string": "kill"
            },
            {
                "encoding": "ASCII",
                "offset": 306618,
                "string": "listen"
            },
            {
                "encoding": "ASCII",
                "offset": 306628,
                "string": "localeconv"
            },
            {
                "encoding": "ASCII",
                "offset": 306642,
                "string": "localtime"
            },
            {
                "encoding": "ASCII",
                "offset": 306660,
                "string": "longjmp"
            },
            {
                "encoding": "ASCII",
                "offset": 306670,
                "string": "malloc"
            },
            {
                "encoding": "ASCII",
                "offset": 306680,
                "string": "memcpy"
            },
            {
                "encoding": "ASCII",
                "offset": 306690,
                "string": "memmove"
            },
            {
                "encoding": "ASCII",
                "offset": 306700,
                "string": "memset"
            },
            {
                "encoding": "ASCII",
                "offset": 306710,
                "string": "open"
            },
            {
                "encoding": "ASCII",
                "offset": 306718,
                "string": "pclose"
            },
            {
                "encoding": "ASCII",
                "offset": 306728,
                "string": "pipe"
            },
            {
                "encoding": "ASCII",
                "offset": 306736,
                "string": "popen"
            },
            {
                "encoding": "ASCII",
                "offset": 306750,
                "string": "ptsname"
            },
            {
                "encoding": "ASCII",
                "offset": 306760,
                "string": "putc"
            },
            {
                "encoding": "ASCII",
                "offset": 306768,
                "string": "qsort"
            },
            {
                "encoding": "ASCII",
                "offset": 306776,
                "string": "read"
            },
            {
                "encoding": "ASCII",
                "offset": 306784,
                "string": "realloc"
            },
            {
                "encoding": "ASCII",
                "offset": 306794,
                "string": "recvfrom"
            },
            {
                "encoding": "ASCII",
                "offset": 306806,
                "string": "setjmp"
            },
            {
                "encoding": "ASCII",
                "offset": 306816,
                "string": "setlocale"
            },
            {
                "encoding": "ASCII",
                "offset": 306828,
                "string": "setmode"
            },
            {
                "encoding": "ASCII",
                "offset": 306838,
                "string": "setsockopt"
            },
            {
                "encoding": "ASCII",
                "offset": 306852,
                "string": "shutdown"
            },
            {
                "encoding": "ASCII",
                "offset": 306864,
                "string": "signal"
            },
            {
                "encoding": "ASCII",
                "offset": 306880,
                "string": "sleep"
            },
            {
                "encoding": "ASCII",
                "offset": 306888,
                "string": "socket"
            },
            {
                "encoding": "ASCII",
                "offset": 306898,
                "string": "sqrt"
            },
            {
                "encoding": "ASCII",
                "offset": 306906,
                "string": "sscanf"
            },
            {
                "encoding": "ASCII",
                "offset": 306916,
                "string": "stat"
            },
            {
                "encoding": "ASCII",
                "offset": 306924,
                "string": "strcasecmp"
            },
            {
                "encoding": "ASCII",
                "offset": 306938,
                "string": "strchr"
            },
            {
                "encoding": "ASCII",
                "offset": 306948,
                "string": "strcmp"
            },
            {
                "encoding": "ASCII",
                "offset": 306958,
                "string": "strcpy"
            },
            {
                "encoding": "ASCII",
                "offset": 306968,
                "string": "strdup"
            },
            {
                "encoding": "ASCII",
                "offset": 306978,
                "string": "strerror"
            },
            {
                "encoding": "ASCII",
                "offset": 306990,
                "string": "strftime"
            },
            {
                "encoding": "ASCII",
                "offset": 307002,
                "string": "strlen"
            },
            {
                "encoding": "ASCII",
                "offset": 307012,
                "string": "strncasecmp"
            },
            {
                "encoding": "ASCII",
                "offset": 307026,
                "string": "strncmp"
            },
            {
                "encoding": "ASCII",
                "offset": 307036,
                "string": "strrchr"
            },
            {
                "encoding": "ASCII",
                "offset": 307046,
                "string": "strtod"
            },
            {
                "encoding": "ASCII",
                "offset": 307056,
                "string": "strtol"
            },
            {
                "encoding": "ASCII",
                "offset": 307066,
                "string": "strtoul"
            },
            {
                "encoding": "ASCII",
                "offset": 307076,
                "string": "system"
            },
            {
                "encoding": "ASCII",
                "offset": 307086,
                "string": "tcgetattr"
            },
            {
                "encoding": "ASCII",
                "offset": 307098,
                "string": "tcsetattr"
            },
            {
                "encoding": "ASCII",
                "offset": 307110,
                "string": "time"
            },
            {
                "encoding": "ASCII",
                "offset": 307118,
                "string": "unlockpt"
            },
            {
                "encoding": "ASCII",
                "offset": 307130,
                "string": "vsnprintf"
            },
            {
                "encoding": "ASCII",
                "offset": 307142,
                "string": "wait"
            },
            {
                "encoding": "ASCII",
                "offset": 307150,
                "string": "GetModuleFileNameA"
            },
            {
                "encoding": "ASCII",
                "offset": 307172,
                "string": "GetModuleHandleA"
            },
            {
                "encoding": "ASCII",
                "offset": 307192,
                "string": "GetStdHandle"
            },
            {
                "encoding": "ASCII",
                "offset": 307208,
                "string": "VirtualProtect"
            },
            {
                "encoding": "ASCII",
                "offset": 307226,
                "string": "VirtualQuery"
            },
            {
                "encoding": "ASCII",
                "offset": 307242,
                "string": "WriteFile"
            },
            {
                "encoding": "ASCII",
                "offset": 307296,
                "string": "msys-intl-8.dll"
            },
            {
                "encoding": "ASCII",
                "offset": 307760,
                "string": "msys-1.0.dll"
            },
            {
                "encoding": "ASCII",
                "offset": 307800,
                "string": "KERNEL32.dll"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 260406,
                "string": "D }?"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 260460,
                "string": "cNO#$%&,'(u"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 261280,
                "string": "!-./:AA33"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 261396,
                "string": "*~nW"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 261412,
                "string": "<333333333333"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 261506,
                "string": "yffst"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 261520,
                "string": "-ffTUV"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 261650,
                "string": "GHIhi"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 262166,
                "string": "RSTUV"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 262274,
                "string": "XYZ[\\"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 263594,
                "string": "<<<12>B1:"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 263614,
                "string": "12,@RSTUVWXYZ[\\]"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 263656,
                "string": "0,A<"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 263700,
                "string": "<B?="
            },
            {
                "encoding": "UTF-16LE",
                "offset": 263710,
                "string": "=w:)*()%"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 263730,
                "string": "01567"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 263768,
                "string": "<><F<HIJK<"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 263818,
                "string": "()pq"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 263856,
                "string": "/%&'"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 263906,
                "string": "=RSTUVWXYZ[\\]"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 264254,
                "string": "()*+,-"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 264362,
                "string": "()*+,-3456734:6"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 264470,
                "string": "()*+,-3456734:6"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 264578,
                "string": "()*+\t-"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 264710,
                "string": "()*+,-"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 264830,
                "string": "()*+"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 264938,
                "string": "()*+"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 264982,
                "string": "()*+B-"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 265104,
                "string": "()*+"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 265142,
                "string": ";<\t()*+"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 265254,
                "string": "\t()*+"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 265364,
                "string": "()*+"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 265472,
                "string": "()*+"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 265516,
                "string": "()*+"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 265624,
                "string": "()*+"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 283007,
                "string": "&|<1"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 291566,
                "string": " 0123456789"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 301622,
                "string": " _()"
            }
        ],
        "tight_strings": []
    },
    "is_malicious": false
}