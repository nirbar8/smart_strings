{
    "analysis": {
        "enable_decoded_strings": true,
        "enable_stack_strings": true,
        "enable_static_strings": true,
        "enable_tight_strings": true,
        "functions": {
            "analyzed_decoded_strings": 25,
            "analyzed_stack_strings": 235,
            "analyzed_tight_strings": 13,
            "decoding_function_scores": {
                "4198884": 0.796,
                "4200260": 0.488,
                "4202176": 0.797,
                "4203472": 0.874,
                "4203548": 0.87,
                "4203948": 0.827,
                "4204476": 0.561,
                "4204500": 0.561,
                "4207436": 0.656,
                "4207457": 0.613,
                "4208776": 0.825,
                "4208932": 0.819,
                "4209400": 0.819,
                "4210540": 0.917,
                "4211864": 0.91,
                "4212636": 0.894,
                "4213380": 0.822,
                "4214652": 0.822,
                "4215920": 0.845,
                "4216644": 0.863,
                "4217400": 0.882,
                "4217904": 0.84,
                "4219236": 0.803,
                "4219412": 0.866,
                "4219900": 0.865
            },
            "discovered": 312,
            "library": 18
        }
    },
    "metadata": {
        "file_path": "malware-set/Trojan.Win32.Cleanlogs",
        "imagebase": 4194304,
        "min_length": 4,
        "runtime": {
            "decoded_strings": 35.414,
            "find_features": 0.9636,
            "stack_strings": 3.7074,
            "start_date": "2023-02-09T19:24:26.438875Z",
            "static_strings": 0.0341,
            "tight_strings": 1.0173,
            "total": 56.6953,
            "vivisect": 15.5586
        },
        "version": "v2.2.0-0-g783dd8f"
    },
    "strings": {
        "decoded_strings": [
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4206081,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: tp1->tpName, file xxtype.cpp, line 286"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4225410,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: hdtPtr->HDcctrAddr, file xx.cpp, line 2000"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4227971,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: varType->tpMask & TM_IS_ARRAY, file xx.cpp, line 3532"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4224769,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: xdrPtr->xdERRaddr == xl, file xx.cpp, line 1592"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4228998,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: varType->tpMask & TM_IS_ARRAY, file xx.cpp, line 3922"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4228103,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: etdCount <= elemCount || elemCount == 0, file xx.cpp, line 3551"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4205194,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: tgtTypPtr != 0 && IS_STRUC(tgtTypPtr->tpMask), file xxtype.cpp, line 848"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4224907,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: dscPtr->xdERRaddr == errPtr, file xx.cpp, line 1826"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4205967,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: tp1, file xxtype.cpp, line 261"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4205586,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: srcTypPtr, file xxtype.cpp, line 976"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4225177,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: mask & TM_IS_PTR, file xx.cpp, line 1941"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4228508,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: dttPtr->dttType->tpPtr.tppBaseType->tpClass.tpcFlags & CF_HAS_DTOR, file xx.cpp, line 3709"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4227740,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: memType->tpClass.tpcFlags & CF_HAS_DTOR, file xx.cpp, line 3443"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4226974,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: varType->tpClass.tpcFlags & CF_HAS_DTOR, file xx.cpp, line 3100"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4225826,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: xdrPtr && xdrPtr == *xdrLPP, file xx.cpp, line 2234"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4228003,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: varType->tpArr.tpaElemType->tpClass.tpcFlags & CF_HAS_DTOR, file xx.cpp, line 3533"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4224419,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: dtorAddr, file xx.cpp, line 1465"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4206117,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: tp2->tpName, file xxtype.cpp, line 287"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4228262,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: IS_CLASS(varType->tpMask), file xx.cpp, line 3603"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4227366,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: dtorCnt < varCount, file xx.cpp, line 3309"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4204709,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: IS_STRUC(base->tpMask), file xxtype.cpp, line 315"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4228905,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: elemType->tpClass.tpcFlags & CF_HAS_DTOR, file xx.cpp, line 3874"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4205994,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: tp2, file xxtype.cpp, line 262"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4228139,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: dtrCount <= vdtCount, file xx.cpp, line 3552"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4224938,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: dscPtr->xdHtabAdr == hdtPtr, file xx.cpp, line 1827"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4224678,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: __CPPexceptionList, file xx.cpp, line 1577"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4205351,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: tgtTypPtr != 0 && __isSameTypeID(topTypPtr, tgtTypPtr) == 0, file xxtype.cpp, line 859"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4205232,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: srcTypPtr == 0 || IS_STRUC(srcTypPtr->tpMask), file xxtype.cpp, line 849"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4225331,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: dscPtr->xdTypeID == dscPtr->xdBase, file xx.cpp, line 1974"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4228789,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: varType->tpClass.tpcFlags & CF_HAS_DTOR, file xx.cpp, line 3831"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4205750,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: addr, file xxtype.cpp, line 1301"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4225206,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: dscPtr->xdMask & TM_IS_PTR, file xx.cpp, line 1942"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4227003,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: varType->tpClass.tpcDtorAddr, file xx.cpp, line 3101"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4223164,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: !\"what?\", file xx.cpp, line 606"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4229053,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: varType->tpMask & TM_IS_PTR, file xx.cpp, line 3932"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4223424,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: !\"what?\", file xx.cpp, line 756"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4223552,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: !\"what?\", file xx.cpp, line 803"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4204741,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: IS_STRUC(derv->tpMask), file xxtype.cpp, line 316"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4224583,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: argType, file xx.cpp, line 1534"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4224967,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: dscPtr->xdArgCopy == 0, file xx.cpp, line 1829"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4206536,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: !\"Can't adjust class address (no base class entry found)\", file xxtype.cpp, line 1406"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4228042,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: vdtCount, file xx.cpp, line 3542"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4226894,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: !\"bogus context in _ExceptionHandler()\", file xx.cpp, line 3072"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4228689,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: dtvtPtr->dttType->tpMask & TM_IS_ARRAY, file xx.cpp, line 3799"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4227283,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: varType->tpClass.tpcFlags & CF_HAS_DTOR, file xx.cpp, line 3251"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4228437,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: dttPtr->dttFlags & (DTCVF_PTRVAL|DTCVF_RETVAL), file xx.cpp, line 3704"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4227545,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: IS_STRUC(blType->tpMask), file xx.cpp, line 3391"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4205918,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: id->tpName, file xxtype.cpp, line 34"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4205279,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: __isSameTypeID(srcTypPtr, tgtTypPtr) == 0, file xxtype.cpp, line 853"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4228576,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: IS_CLASS(dttPtr->dttType->tpMask) && (dttPtr->dttType->tpClass.tpcFlags & CF_HAS_DTOR), file xx.cpp, line 3723"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4229217,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: bl, file xx.cpp, line 3986"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4222947,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: (ctorMask & 0x0100) != 0 || (ctorMask & 0x0020) == 0, file xx.cpp, line 517"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4227428,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: IS_STRUC(blType->tpMask), file xx.cpp, line 3352"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4223333,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: (dtorMask & 0x0080) == 0, file xx.cpp, line 717"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4204773,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: derv->tpClass.tpcFlags & CF_HAS_BASES, file xxtype.cpp, line 318"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4223078,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: !\"what?\", file xx.cpp, line 562"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4223464,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: (mfnMask & 0x0080) == 0, file xx.cpp, line 764"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4227689,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: memType, file xx.cpp, line 3429"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4224741,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: xl, file xx.cpp, line 1591"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4205156,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: topTypPtr != 0 && IS_STRUC(topTypPtr->tpMask), file xxtype.cpp, line 847"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4227053,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: (errPtr->ERRcInitDtc >= varType->tpClass.tpcDtorCount) || flags, file xx.cpp, line 3112"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4225519,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: dscPtr->xdSize == size, file xx.cpp, line 2040"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4225141,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: (dscPtr->xdMask & TM_IS_PTR) == 0, file xx.cpp, line 1922"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4228342,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: ((unsigned __far *)vftAddr)[-1] == 0, file xx.cpp, line 3641"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4228471,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: dttPtr->dttType->tpMask & TM_IS_PTR, file xx.cpp, line 3708"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4225918,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: !\"bogus context in Local_unwind()\", file xx.cpp, line 2281"
            },
            {
                "address": 4242508,
                "address_type": "GLOBAL",
                "decoded_at": 4222975,
                "decoding_routine": 4217904,
                "encoding": "ASCII",
                "string": "Assertion failed: (ctorMask & 0x0080) == 0, file xx.cpp, line 519"
            }
        ],
        "stack_strings": [],
        "static_strings": [
            {
                "encoding": "ASCII",
                "offset": 80,
                "string": "This program must be run under Win32"
            },
            {
                "encoding": "ASCII",
                "offset": 760,
                "string": ".text"
            },
            {
                "encoding": "ASCII",
                "offset": 799,
                "string": "`.data"
            },
            {
                "encoding": "ASCII",
                "offset": 840,
                "string": ".tls"
            },
            {
                "encoding": "ASCII",
                "offset": 880,
                "string": ".rdata"
            },
            {
                "encoding": "ASCII",
                "offset": 919,
                "string": "P.idata"
            },
            {
                "encoding": "ASCII",
                "offset": 959,
                "string": "@.edata"
            },
            {
                "encoding": "ASCII",
                "offset": 999,
                "string": "@.rsrc"
            },
            {
                "encoding": "ASCII",
                "offset": 1039,
                "string": "@.reloc"
            },
            {
                "encoding": "ASCII",
                "offset": 1538,
                "string": "fb:C++HOOK"
            },
            {
                "encoding": "ASCII",
                "offset": 1872,
                "string": "SVWQj"
            },
            {
                "encoding": "ASCII",
                "offset": 2013,
                "string": "Z_^["
            },
            {
                "encoding": "ASCII",
                "offset": 2020,
                "string": "SVWU"
            },
            {
                "encoding": "ASCII",
                "offset": 2097,
                "string": "^j\\S"
            },
            {
                "encoding": "ASCII",
                "offset": 2321,
                "string": "D$4P"
            },
            {
                "encoding": "ASCII",
                "offset": 2352,
                "string": "T$0R"
            },
            {
                "encoding": "ASCII",
                "offset": 2427,
                "string": "]_^["
            },
            {
                "encoding": "ASCII",
                "offset": 3143,
                "string": "_^[]"
            },
            {
                "encoding": "ASCII",
                "offset": 3710,
                "string": "_^[]"
            },
            {
                "encoding": "ASCII",
                "offset": 4651,
                "string": "_^[YY]"
            },
            {
                "encoding": "ASCII",
                "offset": 4896,
                "string": "_^[]"
            },
            {
                "encoding": "ASCII",
                "offset": 5808,
                "string": "SVWUQ"
            },
            {
                "encoding": "ASCII",
                "offset": 5898,
                "string": "Z]_^["
            },
            {
                "encoding": "ASCII",
                "offset": 5907,
                "string": "QSVW"
            },
            {
                "encoding": "ASCII",
                "offset": 6194,
                "string": "_^[Y]"
            },
            {
                "encoding": "ASCII",
                "offset": 6376,
                "string": "_^[]"
            },
            {
                "encoding": "ASCII",
                "offset": 6387,
                "string": "QSVW"
            },
            {
                "encoding": "ASCII",
                "offset": 6528,
                "string": "_^[Y]"
            },
            {
                "encoding": "ASCII",
                "offset": 6626,
                "string": "r!t-"
            },
            {
                "encoding": "ASCII",
                "offset": 6764,
                "string": "G$Jt"
            },
            {
                "encoding": "ASCII",
                "offset": 7122,
                "string": "t?BCIu"
            },
            {
                "encoding": "ASCII",
                "offset": 7307,
                "string": "AFOu"
            },
            {
                "encoding": "ASCII",
                "offset": 7373,
                "string": "_^[]"
            },
            {
                "encoding": "ASCII",
                "offset": 7383,
                "string": "QSVW"
            },
            {
                "encoding": "ASCII",
                "offset": 7445,
                "string": "_^[Y]"
            },
            {
                "encoding": "ASCII",
                "offset": 7763,
                "string": "**BCCxh1"
            },
            {
                "encoding": "ASCII",
                "offset": 7779,
                "string": "SWVUP"
            },
            {
                "encoding": "ASCII",
                "offset": 7804,
                "string": "]^_["
            },
            {
                "encoding": "ASCII",
                "offset": 8148,
                "string": "_^[YY]"
            },
            {
                "encoding": "ASCII",
                "offset": 8856,
                "string": "QSVW"
            },
            {
                "encoding": "ASCII",
                "offset": 9009,
                "string": "_^[Y]"
            },
            {
                "encoding": "ASCII",
                "offset": 9286,
                "string": "_^[]"
            },
            {
                "encoding": "ASCII",
                "offset": 9295,
                "string": "QSVW"
            },
            {
                "encoding": "ASCII",
                "offset": 9557,
                "string": "_^[Y]"
            },
            {
                "encoding": "ASCII",
                "offset": 10134,
                "string": "[YY]"
            },
            {
                "encoding": "ASCII",
                "offset": 10295,
                "string": "RVWS"
            },
            {
                "encoding": "ASCII",
                "offset": 10328,
                "string": "RVWS"
            },
            {
                "encoding": "ASCII",
                "offset": 10392,
                "string": "VSWj"
            },
            {
                "encoding": "ASCII",
                "offset": 10422,
                "string": "_^[YY]"
            },
            {
                "encoding": "ASCII",
                "offset": 10650,
                "string": "SVWj"
            },
            {
                "encoding": "ASCII",
                "offset": 10787,
                "string": "t\tHt"
            },
            {
                "encoding": "ASCII",
                "offset": 10865,
                "string": "_^[]"
            },
            {
                "encoding": "ASCII",
                "offset": 11176,
                "string": "SVW3"
            },
            {
                "encoding": "ASCII",
                "offset": 11452,
                "string": "_^[]"
            },
            {
                "encoding": "ASCII",
                "offset": 11588,
                "string": "SVWU3"
            },
            {
                "encoding": "ASCII",
                "offset": 11673,
                "string": "]_^["
            },
            {
                "encoding": "ASCII",
                "offset": 12061,
                "string": "^YY]"
            },
            {
                "encoding": "ASCII",
                "offset": 12283,
                "string": "QVhx"
            },
            {
                "encoding": "ASCII",
                "offset": 12408,
                "string": "L_^["
            },
            {
                "encoding": "ASCII",
                "offset": 14992,
                "string": "_^[]"
            },
            {
                "encoding": "ASCII",
                "offset": 15006,
                "string": "SVWj"
            },
            {
                "encoding": "ASCII",
                "offset": 15394,
                "string": "Wj0S"
            },
            {
                "encoding": "ASCII",
                "offset": 15765,
                "string": "_^[]"
            },
            {
                "encoding": "ASCII",
                "offset": 15778,
                "string": "SVWj"
            },
            {
                "encoding": "ASCII",
                "offset": 16007,
                "string": "Ft,f"
            },
            {
                "encoding": "ASCII",
                "offset": 16157,
                "string": "Wj0S"
            },
            {
                "encoding": "ASCII",
                "offset": 17757,
                "string": "^[YY]"
            },
            {
                "encoding": "ASCII",
                "offset": 19025,
                "string": "^[YY]"
            },
            {
                "encoding": "ASCII",
                "offset": 19062,
                "string": "SVWf"
            },
            {
                "encoding": "ASCII",
                "offset": 19185,
                "string": "GYf="
            },
            {
                "encoding": "ASCII",
                "offset": 19786,
                "string": "SVWf"
            },
            {
                "encoding": "ASCII",
                "offset": 19909,
                "string": "GYf="
            },
            {
                "encoding": "ASCII",
                "offset": 20971,
                "string": "QSVW"
            },
            {
                "encoding": "ASCII",
                "offset": 21031,
                "string": "_^[Y]"
            },
            {
                "encoding": "ASCII",
                "offset": 21219,
                "string": "QSVW"
            },
            {
                "encoding": "ASCII",
                "offset": 21278,
                "string": "YPVS"
            },
            {
                "encoding": "ASCII",
                "offset": 21299,
                "string": "YPWS"
            },
            {
                "encoding": "ASCII",
                "offset": 21314,
                "string": "_^[Y]"
            },
            {
                "encoding": "ASCII",
                "offset": 21371,
                "string": "RhH]@"
            },
            {
                "encoding": "ASCII",
                "offset": 21541,
                "string": "PSVj"
            },
            {
                "encoding": "ASCII",
                "offset": 21596,
                "string": "YPVS"
            },
            {
                "encoding": "ASCII",
                "offset": 22235,
                "string": "hda@"
            },
            {
                "encoding": "ASCII",
                "offset": 22543,
                "string": "_^[]"
            },
            {
                "encoding": "ASCII",
                "offset": 22733,
                "string": "D<\"u%"
            },
            {
                "encoding": "ASCII",
                "offset": 23094,
                "string": ":\"u("
            },
            {
                "encoding": "ASCII",
                "offset": 23296,
                "string": ":\"u%"
            },
            {
                "encoding": "ASCII",
                "offset": 23518,
                "string": "9\\u.f"
            },
            {
                "encoding": "ASCII",
                "offset": 23712,
                "string": "SVWUQ"
            },
            {
                "encoding": "ASCII",
                "offset": 24036,
                "string": "Z]_^["
            },
            {
                "encoding": "ASCII",
                "offset": 24116,
                "string": "SVW3"
            },
            {
                "encoding": "ASCII",
                "offset": 25555,
                "string": "Y_^["
            },
            {
                "encoding": "ASCII",
                "offset": 25848,
                "string": "QSVW"
            },
            {
                "encoding": "ASCII",
                "offset": 26037,
                "string": "_^[Y]"
            },
            {
                "encoding": "ASCII",
                "offset": 26197,
                "string": "tmh2"
            },
            {
                "encoding": "ASCII",
                "offset": 26308,
                "string": "_^[]"
            },
            {
                "encoding": "ASCII",
                "offset": 26348,
                "string": "@@Pj"
            },
            {
                "encoding": "ASCII",
                "offset": 26568,
                "string": "_^[]"
            },
            {
                "encoding": "ASCII",
                "offset": 27094,
                "string": "Q@RS"
            },
            {
                "encoding": "ASCII",
                "offset": 27296,
                "string": "QUVWRSPT"
            },
            {
                "encoding": "ASCII",
                "offset": 27347,
                "string": "QSVW"
            },
            {
                "encoding": "ASCII",
                "offset": 27360,
                "string": "VWRSP"
            },
            {
                "encoding": "ASCII",
                "offset": 27444,
                "string": "0_^[Y]"
            },
            {
                "encoding": "ASCII",
                "offset": 27669,
                "string": "p(PR"
            },
            {
                "encoding": "ASCII",
                "offset": 27885,
                "string": ";s(t"
            },
            {
                "encoding": "ASCII",
                "offset": 28021,
                "string": "C(;E"
            },
            {
                "encoding": "ASCII",
                "offset": 28052,
                "string": "S,;U"
            },
            {
                "encoding": "ASCII",
                "offset": 28851,
                "string": "SUVW"
            },
            {
                "encoding": "ASCII",
                "offset": 28878,
                "string": "_^]["
            },
            {
                "encoding": "ASCII",
                "offset": 28912,
                "string": "V(;U"
            },
            {
                "encoding": "ASCII",
                "offset": 28919,
                "string": ";^0t"
            },
            {
                "encoding": "ASCII",
                "offset": 29066,
                "string": "t\t;]"
            },
            {
                "encoding": "ASCII",
                "offset": 29776,
                "string": "Q@RS"
            },
            {
                "encoding": "ASCII",
                "offset": 29785,
                "string": "YPSVj"
            },
            {
                "encoding": "ASCII",
                "offset": 29889,
                "string": "SUVW"
            },
            {
                "encoding": "ASCII",
                "offset": 29916,
                "string": "_^]["
            },
            {
                "encoding": "ASCII",
                "offset": 30165,
                "string": ";K s"
            },
            {
                "encoding": "ASCII",
                "offset": 30230,
                "string": "s(VS"
            },
            {
                "encoding": "ASCII",
                "offset": 30378,
                "string": "_^[]"
            },
            {
                "encoding": "ASCII",
                "offset": 31356,
                "string": "_^[YY]"
            },
            {
                "encoding": "ASCII",
                "offset": 31493,
                "string": "_^[]"
            },
            {
                "encoding": "ASCII",
                "offset": 32051,
                "string": "~ ;}"
            },
            {
                "encoding": "ASCII",
                "offset": 33411,
                "string": "=Borland C++ - Copyright 1999 Inprise Corporation"
            },
            {
                "encoding": "ASCII",
                "offset": 33587,
                "string": "W3SVC"
            },
            {
                "encoding": "ASCII",
                "offset": 33593,
                "string": ".log"
            },
            {
                "encoding": "ASCII",
                "offset": 33598,
                "string": "\\WINNT\\SYSTEM32\\LogFiles\\"
            },
            {
                "encoding": "ASCII",
                "offset": 33624,
                "string": "C:\\WINNT\\SYSTEM32\\LogFiles\\"
            },
            {
                "encoding": "ASCII",
                "offset": 33652,
                "string": "\\LogFiles\\"
            },
            {
                "encoding": "ASCII",
                "offset": 33663,
                "string": "SYSTEM\\CurrentControlSet\\Services\\W3SVC\\Parameters"
            },
            {
                "encoding": "ASCII",
                "offset": 33714,
                "string": "LogFileDirectory"
            },
            {
                "encoding": "ASCII",
                "offset": 33736,
                "string": "borlndmm"
            },
            {
                "encoding": "ASCII",
                "offset": 33745,
                "string": "hrdir_b.c: LoadLibrary != mmdll borlndmm failed"
            },
            {
                "encoding": "ASCII",
                "offset": 33793,
                "string": "borlndmm"
            },
            {
                "encoding": "ASCII",
                "offset": 33802,
                "string": "@Borlndmm@SysGetMem$qqri"
            },
            {
                "encoding": "ASCII",
                "offset": 33827,
                "string": "@Borlndmm@SysFreeMem$qqrpv"
            },
            {
                "encoding": "ASCII",
                "offset": 33854,
                "string": "@Borlndmm@SysReallocMem$qqrpvi"
            },
            {
                "encoding": "ASCII",
                "offset": 33996,
                "string": "<notype>"
            },
            {
                "encoding": "ASCII",
                "offset": 34005,
                "string": "id->tpName"
            },
            {
                "encoding": "ASCII",
                "offset": 34016,
                "string": "xxtype.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 34031,
                "string": "xxtype.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 34046,
                "string": "xxtype.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 34057,
                "string": "tp1->tpName"
            },
            {
                "encoding": "ASCII",
                "offset": 34069,
                "string": "xxtype.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 34080,
                "string": "tp2->tpName"
            },
            {
                "encoding": "ASCII",
                "offset": 34092,
                "string": "xxtype.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 34103,
                "string": "IS_STRUC(base->tpMask)"
            },
            {
                "encoding": "ASCII",
                "offset": 34126,
                "string": "xxtype.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 34137,
                "string": "IS_STRUC(derv->tpMask)"
            },
            {
                "encoding": "ASCII",
                "offset": 34160,
                "string": "xxtype.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 34171,
                "string": "derv->tpClass.tpcFlags & CF_HAS_BASES"
            },
            {
                "encoding": "ASCII",
                "offset": 34209,
                "string": "xxtype.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 34220,
                "string": "((unsigned __far *)vtablePtr)[-1] == 0"
            },
            {
                "encoding": "ASCII",
                "offset": 34259,
                "string": "xxtype.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 34270,
                "string": "<notype>"
            },
            {
                "encoding": "ASCII",
                "offset": 34279,
                "string": "topTypPtr != 0 && IS_STRUC(topTypPtr->tpMask)"
            },
            {
                "encoding": "ASCII",
                "offset": 34325,
                "string": "xxtype.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 34336,
                "string": "tgtTypPtr != 0 && IS_STRUC(tgtTypPtr->tpMask)"
            },
            {
                "encoding": "ASCII",
                "offset": 34382,
                "string": "xxtype.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 34393,
                "string": "srcTypPtr == 0 || IS_STRUC(srcTypPtr->tpMask)"
            },
            {
                "encoding": "ASCII",
                "offset": 34439,
                "string": "xxtype.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 34450,
                "string": "__isSameTypeID(srcTypPtr, tgtTypPtr) == 0"
            },
            {
                "encoding": "ASCII",
                "offset": 34492,
                "string": "xxtype.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 34503,
                "string": "tgtTypPtr != 0 && __isSameTypeID(topTypPtr, tgtTypPtr) == 0"
            },
            {
                "encoding": "ASCII",
                "offset": 34563,
                "string": "xxtype.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 34574,
                "string": "srcTypPtr"
            },
            {
                "encoding": "ASCII",
                "offset": 34584,
                "string": "xxtype.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 34595,
                "string": "((unsigned __far *)vtablePtr)[-1] == 0"
            },
            {
                "encoding": "ASCII",
                "offset": 34634,
                "string": "xxtype.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 34645,
                "string": "addr"
            },
            {
                "encoding": "ASCII",
                "offset": 34650,
                "string": "xxtype.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 34661,
                "string": "Can't adjust class address (no base class entry found)"
            },
            {
                "encoding": "ASCII",
                "offset": 34716,
                "string": "!\"Can't adjust class address (no base class entry found)\""
            },
            {
                "encoding": "ASCII",
                "offset": 34774,
                "string": "xxtype.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 35008,
                "string": "___CPPdebugHook"
            },
            {
                "encoding": "ASCII",
                "offset": 35080,
                "string": "Stack Overflow!"
            },
            {
                "encoding": "ASCII",
                "offset": 36536,
                "string": "),(((((),((("
            },
            {
                "encoding": "ASCII",
                "offset": 36572,
                "string": "*((("
            },
            {
                "encoding": "ASCII",
                "offset": 37016,
                "string": "Error 0"
            },
            {
                "encoding": "ASCII",
                "offset": 37024,
                "string": "Invalid function number"
            },
            {
                "encoding": "ASCII",
                "offset": 37048,
                "string": "No such file or directory"
            },
            {
                "encoding": "ASCII",
                "offset": 37074,
                "string": "Path not found"
            },
            {
                "encoding": "ASCII",
                "offset": 37089,
                "string": "Too many open files"
            },
            {
                "encoding": "ASCII",
                "offset": 37109,
                "string": "Permission denied"
            },
            {
                "encoding": "ASCII",
                "offset": 37127,
                "string": "Bad file number"
            },
            {
                "encoding": "ASCII",
                "offset": 37143,
                "string": "Memory arena trashed"
            },
            {
                "encoding": "ASCII",
                "offset": 37164,
                "string": "Not enough memory"
            },
            {
                "encoding": "ASCII",
                "offset": 37182,
                "string": "Invalid memory block address"
            },
            {
                "encoding": "ASCII",
                "offset": 37211,
                "string": "Invalid environment"
            },
            {
                "encoding": "ASCII",
                "offset": 37231,
                "string": "Invalid format"
            },
            {
                "encoding": "ASCII",
                "offset": 37246,
                "string": "Invalid access code"
            },
            {
                "encoding": "ASCII",
                "offset": 37266,
                "string": "Invalid data"
            },
            {
                "encoding": "ASCII",
                "offset": 37279,
                "string": "Bad address"
            },
            {
                "encoding": "ASCII",
                "offset": 37291,
                "string": "No such device"
            },
            {
                "encoding": "ASCII",
                "offset": 37306,
                "string": "Attempted to remove current directory"
            },
            {
                "encoding": "ASCII",
                "offset": 37344,
                "string": "Not same device"
            },
            {
                "encoding": "ASCII",
                "offset": 37360,
                "string": "No more files"
            },
            {
                "encoding": "ASCII",
                "offset": 37374,
                "string": "Invalid argument"
            },
            {
                "encoding": "ASCII",
                "offset": 37391,
                "string": "Arg list too big"
            },
            {
                "encoding": "ASCII",
                "offset": 37408,
                "string": "Exec format error"
            },
            {
                "encoding": "ASCII",
                "offset": 37426,
                "string": "Cross-device link"
            },
            {
                "encoding": "ASCII",
                "offset": 37444,
                "string": "Too many open files"
            },
            {
                "encoding": "ASCII",
                "offset": 37464,
                "string": "No child processes"
            },
            {
                "encoding": "ASCII",
                "offset": 37483,
                "string": "Inappropriate I/O control operation"
            },
            {
                "encoding": "ASCII",
                "offset": 37519,
                "string": "Executable file in use"
            },
            {
                "encoding": "ASCII",
                "offset": 37542,
                "string": "File too large"
            },
            {
                "encoding": "ASCII",
                "offset": 37557,
                "string": "No space left on device"
            },
            {
                "encoding": "ASCII",
                "offset": 37581,
                "string": "Illegal seek"
            },
            {
                "encoding": "ASCII",
                "offset": 37594,
                "string": "Read-only file system"
            },
            {
                "encoding": "ASCII",
                "offset": 37616,
                "string": "Too many links"
            },
            {
                "encoding": "ASCII",
                "offset": 37631,
                "string": "Broken pipe"
            },
            {
                "encoding": "ASCII",
                "offset": 37643,
                "string": "Math argument"
            },
            {
                "encoding": "ASCII",
                "offset": 37657,
                "string": "Result too large"
            },
            {
                "encoding": "ASCII",
                "offset": 37674,
                "string": "File already exists"
            },
            {
                "encoding": "ASCII",
                "offset": 37694,
                "string": "Possible deadlock"
            },
            {
                "encoding": "ASCII",
                "offset": 37712,
                "string": "Operation not permitted"
            },
            {
                "encoding": "ASCII",
                "offset": 37736,
                "string": "No such process"
            },
            {
                "encoding": "ASCII",
                "offset": 37752,
                "string": "Interrupted function call"
            },
            {
                "encoding": "ASCII",
                "offset": 37778,
                "string": "Input/output error"
            },
            {
                "encoding": "ASCII",
                "offset": 37797,
                "string": "No such device or address"
            },
            {
                "encoding": "ASCII",
                "offset": 37823,
                "string": "Resource temporarily unavailable"
            },
            {
                "encoding": "ASCII",
                "offset": 37856,
                "string": "Block device required"
            },
            {
                "encoding": "ASCII",
                "offset": 37878,
                "string": "Resource busy"
            },
            {
                "encoding": "ASCII",
                "offset": 37892,
                "string": "Not a directory"
            },
            {
                "encoding": "ASCII",
                "offset": 37908,
                "string": "Is a directory"
            },
            {
                "encoding": "ASCII",
                "offset": 37924,
                "string": "Directory not empty"
            },
            {
                "encoding": "ASCII",
                "offset": 37944,
                "string": "Unknown error"
            },
            {
                "encoding": "ASCII",
                "offset": 38512,
                "string": " !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`ABCDEFGHIJKLMNOPQRSTUVWXYZ{|}~"
            },
            {
                "encoding": "ASCII",
                "offset": 39065,
                "string": "($v)"
            },
            {
                "encoding": "ASCII",
                "offset": 39081,
                "string": "%H:%M:%S"
            },
            {
                "encoding": "ASCII",
                "offset": 39090,
                "string": "%m/%d/%y"
            },
            {
                "encoding": "ASCII",
                "offset": 39099,
                "string": "%A, %B %d, %Y"
            },
            {
                "encoding": "ASCII",
                "offset": 39119,
                "string": "Monday"
            },
            {
                "encoding": "ASCII",
                "offset": 39126,
                "string": "Tuesday"
            },
            {
                "encoding": "ASCII",
                "offset": 39134,
                "string": "Wednesday"
            },
            {
                "encoding": "ASCII",
                "offset": 39144,
                "string": "Thursday"
            },
            {
                "encoding": "ASCII",
                "offset": 39153,
                "string": "Friday"
            },
            {
                "encoding": "ASCII",
                "offset": 39160,
                "string": "Saturday"
            },
            {
                "encoding": "ASCII",
                "offset": 39169,
                "string": "Sunday"
            },
            {
                "encoding": "ASCII",
                "offset": 39204,
                "string": "January"
            },
            {
                "encoding": "ASCII",
                "offset": 39212,
                "string": "February"
            },
            {
                "encoding": "ASCII",
                "offset": 39221,
                "string": "March"
            },
            {
                "encoding": "ASCII",
                "offset": 39227,
                "string": "April"
            },
            {
                "encoding": "ASCII",
                "offset": 39237,
                "string": "June"
            },
            {
                "encoding": "ASCII",
                "offset": 39242,
                "string": "July"
            },
            {
                "encoding": "ASCII",
                "offset": 39247,
                "string": "August"
            },
            {
                "encoding": "ASCII",
                "offset": 39254,
                "string": "September"
            },
            {
                "encoding": "ASCII",
                "offset": 39264,
                "string": "October"
            },
            {
                "encoding": "ASCII",
                "offset": 39272,
                "string": "November"
            },
            {
                "encoding": "ASCII",
                "offset": 39281,
                "string": "December"
            },
            {
                "encoding": "ASCII",
                "offset": 39552,
                "string": "printf : floating point formats not linked"
            },
            {
                "encoding": "ASCII",
                "offset": 39595,
                "string": "scanf : floating point formats not linked"
            },
            {
                "encoding": "ASCII",
                "offset": 39656,
                "string": "printf : floating point formats not linked"
            },
            {
                "encoding": "ASCII",
                "offset": 39699,
                "string": "scanf : floating point formats not linked"
            },
            {
                "encoding": "ASCII",
                "offset": 39888,
                "string": "-INF"
            },
            {
                "encoding": "ASCII",
                "offset": 39893,
                "string": "+INF"
            },
            {
                "encoding": "ASCII",
                "offset": 39898,
                "string": "-NAN"
            },
            {
                "encoding": "ASCII",
                "offset": 39903,
                "string": "+NAN"
            },
            {
                "encoding": "ASCII",
                "offset": 40032,
                "string": "Error: system code page access failure; MBCS table not initialized"
            },
            {
                "encoding": "ASCII",
                "offset": 40100,
                "string": "Assertion failed: "
            },
            {
                "encoding": "ASCII",
                "offset": 40119,
                "string": ", file "
            },
            {
                "encoding": "ASCII",
                "offset": 40127,
                "string": ", line "
            },
            {
                "encoding": "ASCII",
                "offset": 40136,
                "string": "%02d/%02d/%04d %02d:%02d:%02d.%03d "
            },
            {
                "encoding": "ASCII",
                "offset": 40192,
                "string": "kernel32.dll"
            },
            {
                "encoding": "ASCII",
                "offset": 40205,
                "string": "GetProcAddress"
            },
            {
                "encoding": "ASCII",
                "offset": 40220,
                "string": "Borland32"
            },
            {
                "encoding": "ASCII",
                "offset": 40232,
                "string": "Abnormal program termination"
            },
            {
                "encoding": "ASCII",
                "offset": 40300,
                "string": "No space for command line argument vector"
            },
            {
                "encoding": "ASCII",
                "offset": 40342,
                "string": "No space for command line argument"
            },
            {
                "encoding": "ASCII",
                "offset": 40384,
                "string": "No space for copy of command line"
            },
            {
                "encoding": "ASCII",
                "offset": 40420,
                "string": "No space for copy of command line"
            },
            {
                "encoding": "ASCII",
                "offset": 40468,
                "string": "Out of memory in _setargv0"
            },
            {
                "encoding": "ASCII",
                "offset": 40500,
                "string": "GetEnvironmentStrings failed"
            },
            {
                "encoding": "ASCII",
                "offset": 40529,
                "string": "Could not allocate memory for environment block"
            },
            {
                "encoding": "ASCII",
                "offset": 40888,
                "string": "___CPPdebugHook"
            },
            {
                "encoding": "ASCII",
                "offset": 40904,
                "string": "(ctorMask & 0x0100) != 0 || (ctorMask & 0x0020) == 0"
            },
            {
                "encoding": "ASCII",
                "offset": 40957,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 40964,
                "string": "(ctorMask & 0x0080) == 0"
            },
            {
                "encoding": "ASCII",
                "offset": 40989,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 40996,
                "string": "what?"
            },
            {
                "encoding": "ASCII",
                "offset": 41002,
                "string": "!\"what?\""
            },
            {
                "encoding": "ASCII",
                "offset": 41011,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 41018,
                "string": "what?"
            },
            {
                "encoding": "ASCII",
                "offset": 41024,
                "string": "!\"what?\""
            },
            {
                "encoding": "ASCII",
                "offset": 41033,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 41040,
                "string": "(dtorMask & 0x0080) == 0"
            },
            {
                "encoding": "ASCII",
                "offset": 41065,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 41072,
                "string": "what?"
            },
            {
                "encoding": "ASCII",
                "offset": 41078,
                "string": "!\"what?\""
            },
            {
                "encoding": "ASCII",
                "offset": 41087,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 41094,
                "string": "(mfnMask & 0x0080) == 0"
            },
            {
                "encoding": "ASCII",
                "offset": 41118,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 41125,
                "string": "what?"
            },
            {
                "encoding": "ASCII",
                "offset": 41131,
                "string": "!\"what?\""
            },
            {
                "encoding": "ASCII",
                "offset": 41140,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 41147,
                "string": "cctrAddr"
            },
            {
                "encoding": "ASCII",
                "offset": 41156,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 41163,
                "string": "dtorAddr"
            },
            {
                "encoding": "ASCII",
                "offset": 41172,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 41179,
                "string": "argType"
            },
            {
                "encoding": "ASCII",
                "offset": 41187,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 41194,
                "string": "__CPPexceptionList"
            },
            {
                "encoding": "ASCII",
                "offset": 41213,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 41223,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 41230,
                "string": "xdrPtr->xdERRaddr == xl"
            },
            {
                "encoding": "ASCII",
                "offset": 41254,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 41261,
                "string": "dscPtr->xdERRaddr == errPtr"
            },
            {
                "encoding": "ASCII",
                "offset": 41289,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 41296,
                "string": "dscPtr->xdHtabAdr == hdtPtr"
            },
            {
                "encoding": "ASCII",
                "offset": 41324,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 41331,
                "string": "dscPtr->xdArgCopy == 0"
            },
            {
                "encoding": "ASCII",
                "offset": 41354,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 41361,
                "string": "(dscPtr->xdMask & TM_IS_PTR) == 0"
            },
            {
                "encoding": "ASCII",
                "offset": 41395,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 41402,
                "string": "mask & TM_IS_PTR"
            },
            {
                "encoding": "ASCII",
                "offset": 41419,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 41426,
                "string": "dscPtr->xdMask & TM_IS_PTR"
            },
            {
                "encoding": "ASCII",
                "offset": 41453,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 41460,
                "string": "dscPtr->xdTypeID == dscPtr->xdBase"
            },
            {
                "encoding": "ASCII",
                "offset": 41495,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 41502,
                "string": "hdtPtr->HDcctrAddr"
            },
            {
                "encoding": "ASCII",
                "offset": 41521,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 41528,
                "string": "dscPtr->xdSize == size"
            },
            {
                "encoding": "ASCII",
                "offset": 41551,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 41558,
                "string": "xdrPtr && xdrPtr == *xdrLPP"
            },
            {
                "encoding": "ASCII",
                "offset": 41586,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 41593,
                "string": "bogus context in Local_unwind()"
            },
            {
                "encoding": "ASCII",
                "offset": 41625,
                "string": "!\"bogus context in Local_unwind()\""
            },
            {
                "encoding": "ASCII",
                "offset": 41660,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 41667,
                "string": "bogus context in _ExceptionHandler()"
            },
            {
                "encoding": "ASCII",
                "offset": 41704,
                "string": "!\"bogus context in _ExceptionHandler()\""
            },
            {
                "encoding": "ASCII",
                "offset": 41744,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 41751,
                "string": "varType->tpClass.tpcFlags & CF_HAS_DTOR"
            },
            {
                "encoding": "ASCII",
                "offset": 41791,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 41798,
                "string": "varType->tpClass.tpcDtorAddr"
            },
            {
                "encoding": "ASCII",
                "offset": 41827,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 41834,
                "string": "(errPtr->ERRcInitDtc >= varType->tpClass.tpcDtorCount) || flags"
            },
            {
                "encoding": "ASCII",
                "offset": 41898,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 41905,
                "string": "varType->tpClass.tpcFlags & CF_HAS_DTOR"
            },
            {
                "encoding": "ASCII",
                "offset": 41945,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 41952,
                "string": "dtorCnt < varCount"
            },
            {
                "encoding": "ASCII",
                "offset": 41971,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 41978,
                "string": "IS_STRUC(blType->tpMask)"
            },
            {
                "encoding": "ASCII",
                "offset": 42003,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 42010,
                "string": "IS_STRUC(blType->tpMask)"
            },
            {
                "encoding": "ASCII",
                "offset": 42035,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 42042,
                "string": "memType"
            },
            {
                "encoding": "ASCII",
                "offset": 42050,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 42057,
                "string": "memType->tpClass.tpcFlags & CF_HAS_DTOR"
            },
            {
                "encoding": "ASCII",
                "offset": 42097,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 42104,
                "string": "varType->tpMask & TM_IS_ARRAY"
            },
            {
                "encoding": "ASCII",
                "offset": 42134,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 42141,
                "string": "varType->tpArr.tpaElemType->tpClass.tpcFlags & CF_HAS_DTOR"
            },
            {
                "encoding": "ASCII",
                "offset": 42200,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 42207,
                "string": "vdtCount"
            },
            {
                "encoding": "ASCII",
                "offset": 42216,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 42223,
                "string": "etdCount <= elemCount || elemCount == 0"
            },
            {
                "encoding": "ASCII",
                "offset": 42263,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 42270,
                "string": "dtrCount <= vdtCount"
            },
            {
                "encoding": "ASCII",
                "offset": 42291,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 42298,
                "string": "IS_CLASS(varType->tpMask)"
            },
            {
                "encoding": "ASCII",
                "offset": 42324,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 42331,
                "string": "((unsigned __far *)vftAddr)[-1] == 0"
            },
            {
                "encoding": "ASCII",
                "offset": 42368,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 42375,
                "string": "dttPtr->dttFlags & (DTCVF_PTRVAL|DTCVF_RETVAL)"
            },
            {
                "encoding": "ASCII",
                "offset": 42422,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 42429,
                "string": "dttPtr->dttType->tpMask & TM_IS_PTR"
            },
            {
                "encoding": "ASCII",
                "offset": 42465,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 42472,
                "string": "dttPtr->dttType->tpPtr.tppBaseType->tpClass.tpcFlags & CF_HAS_DTOR"
            },
            {
                "encoding": "ASCII",
                "offset": 42539,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 42546,
                "string": "IS_CLASS(dttPtr->dttType->tpMask) && (dttPtr->dttType->tpClass.tpcFlags & CF_HAS_DTOR)"
            },
            {
                "encoding": "ASCII",
                "offset": 42633,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 42640,
                "string": "dtvtPtr->dttType->tpMask & TM_IS_ARRAY"
            },
            {
                "encoding": "ASCII",
                "offset": 42679,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 42686,
                "string": "varType->tpClass.tpcFlags & CF_HAS_DTOR"
            },
            {
                "encoding": "ASCII",
                "offset": 42726,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 42733,
                "string": "elemType->tpClass.tpcFlags & CF_HAS_DTOR"
            },
            {
                "encoding": "ASCII",
                "offset": 42774,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 42781,
                "string": "varType->tpMask & TM_IS_ARRAY"
            },
            {
                "encoding": "ASCII",
                "offset": 42811,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 42818,
                "string": "varType->tpMask & TM_IS_PTR"
            },
            {
                "encoding": "ASCII",
                "offset": 42846,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 42856,
                "string": "xx.cpp"
            },
            {
                "encoding": "ASCII",
                "offset": 42863,
                "string": "**BCCxh1"
            },
            {
                "encoding": "ASCII",
                "offset": 44076,
                "string": "type_inf"
            },
            {
                "encoding": "ASCII",
                "offset": 44544,
                "string": "ADVAPI32.DLL"
            },
            {
                "encoding": "ASCII",
                "offset": 44557,
                "string": "KERNEL32.DLL"
            },
            {
                "encoding": "ASCII",
                "offset": 44570,
                "string": "USER32.DLL"
            },
            {
                "encoding": "ASCII",
                "offset": 44583,
                "string": "RegCloseKey"
            },
            {
                "encoding": "ASCII",
                "offset": 44597,
                "string": "RegOpenKeyExA"
            },
            {
                "encoding": "ASCII",
                "offset": 44613,
                "string": "RegQueryValueExA"
            },
            {
                "encoding": "ASCII",
                "offset": 44633,
                "string": "CloseHandle"
            },
            {
                "encoding": "ASCII",
                "offset": 44647,
                "string": "CreateFileA"
            },
            {
                "encoding": "ASCII",
                "offset": 44661,
                "string": "ExitProcess"
            },
            {
                "encoding": "ASCII",
                "offset": 44675,
                "string": "ExpandEnvironmentStringsA"
            },
            {
                "encoding": "ASCII",
                "offset": 44703,
                "string": "FindClose"
            },
            {
                "encoding": "ASCII",
                "offset": 44715,
                "string": "FindFirstFileA"
            },
            {
                "encoding": "ASCII",
                "offset": 44733,
                "string": "FindNextFileA"
            },
            {
                "encoding": "ASCII",
                "offset": 44749,
                "string": "GetACP"
            },
            {
                "encoding": "ASCII",
                "offset": 44759,
                "string": "GetCPInfo"
            },
            {
                "encoding": "ASCII",
                "offset": 44771,
                "string": "GetCommandLineA"
            },
            {
                "encoding": "ASCII",
                "offset": 44789,
                "string": "GetCurrentThreadId"
            },
            {
                "encoding": "ASCII",
                "offset": 44811,
                "string": "GetEnvironmentStrings"
            },
            {
                "encoding": "ASCII",
                "offset": 44835,
                "string": "GetFileSize"
            },
            {
                "encoding": "ASCII",
                "offset": 44849,
                "string": "GetFileType"
            },
            {
                "encoding": "ASCII",
                "offset": 44863,
                "string": "GetLastError"
            },
            {
                "encoding": "ASCII",
                "offset": 44879,
                "string": "GetLocalTime"
            },
            {
                "encoding": "ASCII",
                "offset": 44895,
                "string": "GetModuleFileNameA"
            },
            {
                "encoding": "ASCII",
                "offset": 44917,
                "string": "GetModuleHandleA"
            },
            {
                "encoding": "ASCII",
                "offset": 44937,
                "string": "GetOEMCP"
            },
            {
                "encoding": "ASCII",
                "offset": 44949,
                "string": "GetProcAddress"
            },
            {
                "encoding": "ASCII",
                "offset": 44967,
                "string": "GetProcessHeap"
            },
            {
                "encoding": "ASCII",
                "offset": 44985,
                "string": "GetStartupInfoA"
            },
            {
                "encoding": "ASCII",
                "offset": 45003,
                "string": "GetStdHandle"
            },
            {
                "encoding": "ASCII",
                "offset": 45019,
                "string": "GetStringTypeW"
            },
            {
                "encoding": "ASCII",
                "offset": 45037,
                "string": "GetSystemDirectoryA"
            },
            {
                "encoding": "ASCII",
                "offset": 45059,
                "string": "GetVersion"
            },
            {
                "encoding": "ASCII",
                "offset": 45073,
                "string": "GetVersionExA"
            },
            {
                "encoding": "ASCII",
                "offset": 45089,
                "string": "GlobalMemoryStatus"
            },
            {
                "encoding": "ASCII",
                "offset": 45111,
                "string": "HeapAlloc"
            },
            {
                "encoding": "ASCII",
                "offset": 45123,
                "string": "HeapFree"
            },
            {
                "encoding": "ASCII",
                "offset": 45135,
                "string": "LCMapStringA"
            },
            {
                "encoding": "ASCII",
                "offset": 45151,
                "string": "LoadLibraryA"
            },
            {
                "encoding": "ASCII",
                "offset": 45167,
                "string": "RaiseException"
            },
            {
                "encoding": "ASCII",
                "offset": 45185,
                "string": "RtlUnwind"
            },
            {
                "encoding": "ASCII",
                "offset": 45197,
                "string": "SetConsoleCtrlHandler"
            },
            {
                "encoding": "ASCII",
                "offset": 45221,
                "string": "SetFilePointer"
            },
            {
                "encoding": "ASCII",
                "offset": 45239,
                "string": "SetHandleCount"
            },
            {
                "encoding": "ASCII",
                "offset": 45257,
                "string": "TlsAlloc"
            },
            {
                "encoding": "ASCII",
                "offset": 45269,
                "string": "TlsFree"
            },
            {
                "encoding": "ASCII",
                "offset": 45279,
                "string": "TlsGetValue"
            },
            {
                "encoding": "ASCII",
                "offset": 45293,
                "string": "TlsSetValue"
            },
            {
                "encoding": "ASCII",
                "offset": 45307,
                "string": "UnhandledExceptionFilter"
            },
            {
                "encoding": "ASCII",
                "offset": 45335,
                "string": "VirtualAlloc"
            },
            {
                "encoding": "ASCII",
                "offset": 45351,
                "string": "VirtualFree"
            },
            {
                "encoding": "ASCII",
                "offset": 45365,
                "string": "WriteFile"
            },
            {
                "encoding": "ASCII",
                "offset": 45377,
                "string": "EnumThreadWindows"
            },
            {
                "encoding": "ASCII",
                "offset": 45397,
                "string": "MessageBoxA"
            },
            {
                "encoding": "ASCII",
                "offset": 45411,
                "string": "wsprintfA"
            },
            {
                "encoding": "ASCII",
                "offset": 45628,
                "string": "iislog.exe"
            },
            {
                "encoding": "ASCII",
                "offset": 45639,
                "string": "__GetExceptDLLinfo"
            },
            {
                "encoding": "ASCII",
                "offset": 45658,
                "string": "___CPPdebugHook"
            },
            {
                "encoding": "ASCII",
                "offset": 46184,
                "string": "#x]#"
            },
            {
                "encoding": "ASCII",
                "offset": 46603,
                "string": "?<?D?Q?n?v?"
            },
            {
                "encoding": "ASCII",
                "offset": 46639,
                "string": "8I8U8`8"
            },
            {
                "encoding": "ASCII",
                "offset": 46651,
                "string": "989z9"
            },
            {
                "encoding": "ASCII",
                "offset": 46677,
                "string": ":\":*:5:;:F:R:v:"
            },
            {
                "encoding": "ASCII",
                "offset": 46703,
                "string": ";$;4;@;G;"
            },
            {
                "encoding": "ASCII",
                "offset": 46717,
                "string": "<I<O<W<_<|<"
            },
            {
                "encoding": "ASCII",
                "offset": 46745,
                "string": ">3>9>A>I>"
            },
            {
                "encoding": "ASCII",
                "offset": 46761,
                "string": "0B0N0a0g0"
            },
            {
                "encoding": "ASCII",
                "offset": 46783,
                "string": "1(161A1P2k2"
            },
            {
                "encoding": "ASCII",
                "offset": 46835,
                "string": "6Y6i6}6"
            },
            {
                "encoding": "ASCII",
                "offset": 46867,
                "string": "7&727;7Q7c7j7t7"
            },
            {
                "encoding": "ASCII",
                "offset": 46895,
                "string": "0:0E0n0"
            },
            {
                "encoding": "ASCII",
                "offset": 46915,
                "string": "2'8_8"
            },
            {
                "encoding": "ASCII",
                "offset": 46935,
                "string": "9[:`:"
            },
            {
                "encoding": "ASCII",
                "offset": 46953,
                "string": ";#;\t<"
            },
            {
                "encoding": "ASCII",
                "offset": 46963,
                "string": "<D=U=Z="
            },
            {
                "encoding": "ASCII",
                "offset": 47012,
                "string": ".8t8"
            },
            {
                "encoding": "ASCII",
                "offset": 47017,
                "string": "8+999A9"
            },
            {
                "encoding": "ASCII",
                "offset": 47035,
                "string": ":%:1:"
            },
            {
                "encoding": "ASCII",
                "offset": 47045,
                "string": "8B8M8\\8"
            },
            {
                "encoding": "ASCII",
                "offset": 47061,
                "string": "98:I:X:"
            },
            {
                "encoding": "ASCII",
                "offset": 47077,
                "string": ":8;E;v;"
            },
            {
                "encoding": "ASCII",
                "offset": 47101,
                "string": ">\"?E?"
            },
            {
                "encoding": "ASCII",
                "offset": 47125,
                "string": "0(0]0c0k0y0"
            },
            {
                "encoding": "ASCII",
                "offset": 47151,
                "string": "0%101A1"
            },
            {
                "encoding": "ASCII",
                "offset": 47163,
                "string": "2!2o2x2"
            },
            {
                "encoding": "ASCII",
                "offset": 47171,
                "string": "2-2=2N2^2"
            },
            {
                "encoding": "ASCII",
                "offset": 47195,
                "string": "3%393"
            },
            {
                "encoding": "ASCII",
                "offset": 47207,
                "string": "4I4[4"
            },
            {
                "encoding": "ASCII",
                "offset": 47229,
                "string": "6L7Q7"
            },
            {
                "encoding": "ASCII",
                "offset": 47237,
                "string": "7G9K9"
            },
            {
                "encoding": "ASCII",
                "offset": 47259,
                "string": "0-0B0W0l0"
            },
            {
                "encoding": "ASCII",
                "offset": 47277,
                "string": "111=1I1U1i1"
            },
            {
                "encoding": "ASCII",
                "offset": 47293,
                "string": "3&5-5f5m5:7D7>7H72898[8b8n:x:r:|:"
            },
            {
                "encoding": "ASCII",
                "offset": 47333,
                "string": ">#>2>;>E>"
            },
            {
                "encoding": "ASCII",
                "offset": 47353,
                "string": ">8?f?p?j?t?"
            },
            {
                "encoding": "ASCII",
                "offset": 47393,
                "string": "3'303:3"
            },
            {
                "encoding": "ASCII",
                "offset": 47411,
                "string": "3,4Z4d4^4h4e:~:"
            },
            {
                "encoding": "ASCII",
                "offset": 47429,
                "string": ";%;:;"
            },
            {
                "encoding": "ASCII",
                "offset": 47441,
                "string": ";+;D;M;];"
            },
            {
                "encoding": "ASCII",
                "offset": 47451,
                "string": ";6<?<H<R<_<k<}<"
            },
            {
                "encoding": "ASCII",
                "offset": 47479,
                "string": "=F>n>|>"
            },
            {
                "encoding": "ASCII",
                "offset": 47501,
                "string": "?9?E?Q?]?q?"
            },
            {
                "encoding": "ASCII",
                "offset": 47525,
                "string": "6%7H7f7q7"
            },
            {
                "encoding": "ASCII",
                "offset": 47561,
                "string": "8C:J:k:"
            },
            {
                "encoding": "ASCII",
                "offset": 47577,
                "string": "96:U:|:"
            },
            {
                "encoding": "ASCII",
                "offset": 47621,
                "string": "=r>n>_>e>M>"
            },
            {
                "encoding": "ASCII",
                "offset": 47639,
                "string": "?I0P0"
            },
            {
                "encoding": "ASCII",
                "offset": 47663,
                "string": "1*121"
            },
            {
                "encoding": "ASCII",
                "offset": 47679,
                "string": "1$181@1M1\\1t1|1"
            },
            {
                "encoding": "ASCII",
                "offset": 47741,
                "string": "546=6M6]6"
            },
            {
                "encoding": "ASCII",
                "offset": 47761,
                "string": "7m6}6"
            },
            {
                "encoding": "ASCII",
                "offset": 47777,
                "string": "8*9/9y9~9"
            },
            {
                "encoding": "ASCII",
                "offset": 47793,
                "string": ";g;u;z;t?7?E?J?"
            },
            {
                "encoding": "ASCII",
                "offset": 47835,
                "string": "=\"1{3"
            },
            {
                "encoding": "ASCII",
                "offset": 47847,
                "string": "6#6.7"
            },
            {
                "encoding": "ASCII",
                "offset": 47855,
                "string": ":Q=\\="
            },
            {
                "encoding": "ASCII",
                "offset": 47865,
                "string": ">O0]0b0"
            },
            {
                "encoding": "ASCII",
                "offset": 47877,
                "string": "0\\1a1"
            },
            {
                "encoding": "ASCII",
                "offset": 47891,
                "string": "1)272<2"
            },
            {
                "encoding": "ASCII",
                "offset": 47909,
                "string": "5>6C6"
            },
            {
                "encoding": "ASCII",
                "offset": 47937,
                "string": "7l8q8"
            },
            {
                "encoding": "ASCII",
                "offset": 47956,
                "string": "N:T:Z:`:f:l:r:x:~:"
            },
            {
                "encoding": "ASCII",
                "offset": 48029,
                "string": "1\"1[1`1"
            },
            {
                "encoding": "ASCII",
                "offset": 48039,
                "string": "1`2e2"
            },
            {
                "encoding": "ASCII",
                "offset": 48063,
                "string": "4\"4'4"
            },
            {
                "encoding": "ASCII",
                "offset": 48075,
                "string": "4L5Q5n5s5"
            },
            {
                "encoding": "ASCII",
                "offset": 48091,
                "string": "5H6M6"
            },
            {
                "encoding": "ASCII",
                "offset": 48099,
                "string": "6 7%7}7"
            },
            {
                "encoding": "ASCII",
                "offset": 48111,
                "string": "7X8]8"
            },
            {
                "encoding": "ASCII",
                "offset": 48137,
                "string": ":$:*:0:6:<:B:H:"
            },
            {
                "encoding": "ASCII",
                "offset": 48175,
                "string": "> >$>(>,>0>4>8><>@>D>H>L>P>T>X>\\>`>d>h>l>p>t>x>|>"
            },
            {
                "encoding": "ASCII",
                "offset": 48245,
                "string": "0 0&0,02080>0D0J0P0V0\\0b0h0n0t0z0"
            },
            {
                "encoding": "ASCII",
                "offset": 48313,
                "string": "1p2t2x2|2"
            },
            {
                "encoding": "ASCII",
                "offset": 48372,
                "string": "p8t8x8|8"
            },
            {
                "encoding": "ASCII",
                "offset": 48391,
                "string": "9L;P;T;X;\\;`;d;"
            },
            {
                "encoding": "ASCII",
                "offset": 48411,
                "string": "<,=`="
            },
            {
                "encoding": "ASCII",
                "offset": 48428,
                "string": "d5h5l5p5t5x5|5"
            },
            {
                "encoding": "ASCII",
                "offset": 48511,
                "string": "6 6$6(6,6064686<6@6D6H6L6P6T6X6\\6t6x6"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 37966,
                "string": "         (((((                  H"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 39906,
                "string": "N-INF"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 39918,
                "string": "+INF"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 39928,
                "string": "-NAN"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 39938,
                "string": "+NAN"
            },
            {
                "encoding": "UTF-16LE",
                "offset": 46170,
                "string": "DVCLAL"
            }
        ],
        "tight_strings": []
    },
    "is_malicious": true
}